{"version":3,"file":"src_components_TraineePerformance_tsx.js","mappings":"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","sources":["webpack://atlp-pulse-fn/./src/Mutations/Ratings.tsx","webpack://atlp-pulse-fn/./src/components/Pagination.tsx","webpack://atlp-pulse-fn/./src/components/TraineePerformance.tsx"],"sourcesContent":["import { gql } from '@apollo/client';\n\nexport const GET_RATINGS = gql`\n  query Query($orgToken: String) {\n    fetchRatings(orgToken: $orgToken) {\n      user {\n        id\n        email\n      }\n      sprint\n      quantity\n      bodyQuantity\n      quantityRemark\n      quality\n      bodyProfessional\n      qualityRemark\n      professional_Skills\n      professionalRemark\n      bodyQuality\n      coordinator\n      average\n      cohort {\n        name\n        phase {\n          name\n        }\n      }\n    }\n  }\n`;\nexport const RATING_BY_COHORT = gql `\nquery GetAllCohorts( $cohortName: String) {\n  fetchRatingByCohort(  CohortName: $cohortName) {\n    sprint\n    quantity\n    approved\n    coordinator\n    average\n    cohort {\n      name\n      id\n      phase {\n        name\n      }\n    }\n    user {\n      id\n      email\n    }\n    quantityRemark\n    bodyQuantity\n    quality\n    qualityRemark\n    bodyQuality\n    professional_Skills\n    professionalRemark\n    bodyProfessional\n  }\n}\n`\nexport const FETCH_ALL_RATINGS = gql`\n  query FetchAllRatings($orgToken: String) {\n    fetchAllRatings(orgToken: $orgToken) {\n      user {\n        id\n        email\n      }\n      sprint\n      quantity\n      quantityRemark\n      quality\n      qualityRemark\n      professional_Skills\n      professionalRemark\n      average\n      cohort {\n        name\n        phase {\n          name\n        }\n      }\n      coordinator\n    }\n  }\n`;\n\nexport const ADD_RATING = gql`\nmutation AddRatings($user: String!, $sprint: Int!, $quantity: String!, $quality: String!, $cohort: String!, $professionalSkills: String!, $orgToken: String!, $quantityRemark: String, $bodyQuality: String, $qualityRemark: String, $bodyQuantity: String, $professionalRemark: String, $bodyProfessional: String) {\n  addRatings(user: $user, sprint: $sprint, quantity: $quantity, quality: $quality, cohort: $cohort, professional_Skills: $professionalSkills, orgToken: $orgToken, quantityRemark: $quantityRemark, bodyQuality: $bodyQuality, qualityRemark: $qualityRemark, bodyQuantity: $bodyQuantity, professionalRemark: $professionalRemark, bodyProfessional: $bodyProfessional) {\n    user {\n      id\n      email\n    }\n    sprint\n    cohort {\n      name\n      id\n      phase {\n        name\n      }\n    }\n    quantity\n    quantityRemark\n    bodyQuantity\n    quality\n    qualityRemark\n    bodyQuality\n    professional_Skills\n    professionalRemark\n    bodyProfessional\n    approved\n    coordinator\n  }\n}\n`;\n\nexport const UPDATE_RATING = gql`\n  mutation Mutation(\n    $user: String!\n    $sprint: Int!\n    $quantity: [String]\n    $quantityRemark: [String]\n    $quality: [String]\n    $qualityRemark: [String]\n    $professionalSkills: [String]\n    $professionalRemark: [String]\n    $orgToken: String!\n  ) {\n    updateRating(\n      user: $user\n      sprint: $sprint\n      quantity: $quantity\n      quantityRemark: $quantityRemark\n      quality: $quality\n      qualityRemark: $qualityRemark\n      professional_Skills: $professionalSkills\n      professionalRemark: $professionalRemark\n      orgToken: $orgToken\n    ) {\n      user\n      sprint\n      quantity\n      quantityRemark\n      quality\n      qualityRemark\n      professional_Skills\n      professionalRemark\n    }\n  }\n`;\n\nexport const APPROVE_RATING = gql`\n  mutation Mutation($user: String!, $sprint: Int!) {\n    approveRating(user: $user, sprint: $sprint) {\n      user\n      sprint\n      quantity\n      quantityRemark\n      qualityRemark\n      professionalRemark\n      professional_Skills\n      approved\n      quality\n    }\n  }\n`;\n\nexport const REJECT_RATING = gql`\n  mutation Mutation($user: String!, $sprint: Int!) {\n    rejectRating(user: $user, sprint: $sprint)\n  }\n`;\n\nexport const TRAINEE_RATING = gql`\n  query Query {\n    fetchRatingsTrainee {\n      user {\n        id\n      }\n      sprint\n      quantity\n      quantityRemark\n      quality\n      qualityRemark\n      professional_Skills\n      professionalRemark\n      average\n      cohort {\n        phase {\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport const GET_USERS = gql`\n  query GetAllUsers($cohortName: ID!) {\n    fetchCohortsCoordinator(cohortName: $cohortName) {\n      name\n      phase {\n        name\n      }\n      coordinator {\n        id\n      }\n      members {\n        id\n        role\n        email\n      }\n      program {\n        name\n      }\n      id\n    }\n  }\n`;\n\nexport const GET_COORDINATOR_COHORTS_QUERY = gql`\n  query GetCoordinatorCohorts($orgToken: String) {\n    getCoordinatorCohorts(orgToken: $orgToken) {\n      name\n      id\n    }\n  }\n`;\n\nexport const GET_ALL_TRAINEES = gql`\n  query GetAllUsers($orgToken: String) {\n  getAllUsers(orgToken: $orgToken) {\n    role\n    email\n    team {\n      name\n      cohort {\n        endDateb\n        startDate\n        phase {\n          name\n        }\n        name\n        program {\n          organization {\n            name\n          }\n          name\n          manager {\n            role\n            email\n            profile {\n              name\n              firstName\n              lastName\n            }\n          }\n        }\n      }\n    }\n  }\n}\n`;","import { useState, useEffect } from 'react';\n\ninterface Gap {\n  before: boolean;\n  paginationGroup: number[];\n  after: boolean;\n}\n\nconst Pagination = ({\n  contentPerPage,\n  count,\n}: {\n  contentPerPage: number;\n  count: number;\n}) => {\n  const [page, setPage] = useState(1);\n\n  const [gaps, setGaps] = useState<Gap>({\n    before: false,\n    paginationGroup: [],\n    after: true,\n  });\n\n  const pageCount = Math.ceil(count / contentPerPage);\n  const lastContentIndex = page * contentPerPage;\n  const firstContentIndex = lastContentIndex - contentPerPage;\n  const [pagesInBetween, setPagesInBetween] = useState<number[]>([]);\n\n  useEffect(() => {\n    /* istanbul ignore next */\n    if (pageCount > 2) {\n      const temp = new Array(pageCount - 2).fill(1).map((_, i) => i + 2);\n      setPagesInBetween(temp);\n    }\n  }, [pageCount]);\n\n  useEffect(() => {\n    const currentLocation = pagesInBetween.indexOf(page);\n    let paginationGroup = [];\n    let before = false;\n    let after = false;\n    if (page === 1) {\n      paginationGroup = pagesInBetween.slice(0, 3);\n    } else if (\n      page === pageCount ||\n      page === pageCount - 1 ||\n      page === pageCount - 2\n    ) {\n      paginationGroup = pagesInBetween.slice(-3, pageCount);\n    } else if (page === 2) {\n      paginationGroup = pagesInBetween.slice(\n        currentLocation,\n        currentLocation + 3,\n      );\n    } else {\n      paginationGroup = [page - 1, page, page + 1];\n    }\n    if (pageCount <= 5) {\n      /* istanbul ignore next */\n      before = false;\n      after = false;\n    } /* istanbul ignore next */ else {\n      before = false;\n      after = false;\n      if (paginationGroup[0] > 2) {\n        before = true;\n      }\n      /* istanbul ignore next */\n      if (paginationGroup[2] < pageCount - 1) {\n        after = true;\n      }\n    }\n    setGaps({ paginationGroup, before, after });\n  }, [page, pagesInBetween, pageCount]);\n\n  const changePage = (direction: boolean) => {\n    setPage((state) => {\n      if (direction) {\n        if (state === pageCount) {\n          /* istanbul ignore next */\n          return state;\n        }\n        return state + 1;\n      }\n\n      if (state === 1) {\n        return state;\n      }\n      /* istanbul ignore next */\n      return state - 1;\n    });\n  };\n\n  const setPageSAFE = (num: number) => {\n    if (num > pageCount) {\n      /* istanbul ignore next */\n      setPage(pageCount);\n    } else if (num < 1) {\n      /* istanbul ignore next */\n      setPage(1);\n    } else {\n      setPage(num);\n    }\n  };\n\n  return {\n    totalPages: pageCount,\n    nextPage: () => changePage(true),\n    prevPage: () => changePage(false),\n    setPage: setPageSAFE,\n    firstContentIndex,\n    lastContentIndex,\n    page,\n    gaps,\n  };\n};\n\nexport default Pagination;\n","/* eslint-disable */\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport Button from './Buttons';\nimport PerformanceData from '../dummyData/performance.json';\nimport { useLazyQuery, useMutation } from '@apollo/client';\nimport { TRAINEE_RATING } from '../Mutations/Ratings';\nimport { toast } from 'react-toastify';\nimport Pagination from './Pagination';\n\nconst TraineePerfomance = () => {\n  const [ratings, setRatings] = useState<any>([]);\n  const [toggle, setToggle] = useState(false);\n  const { t } = useTranslation();\n  const {\n    firstContentIndex,\n    lastContentIndex,\n    nextPage,\n    prevPage,\n    page,\n    gaps,\n    setPage,\n    totalPages,\n  } = Pagination({\n    contentPerPage: 3,\n    count: PerformanceData.length,\n  });\n\n  const [getRatings] = useLazyQuery(TRAINEE_RATING, {});\n  useEffect(() => {\n    getRatings({\n      fetchPolicy: 'network-only',\n      onCompleted: /* istanbul ignore next */ (data) => {\n         /* istanbul ignore next */\n        setRatings(data?.fetchRatingsTrainee);\n         /* istanbul ignore next */\n        sessionStorage.removeItem('data');\n      },\n      onError:  /* istanbul ignore next */(error) => {\n         /* istanbul ignore next */\n        toast.error(error?.message || 'Something went wrong');\n      },\n    });\n  }, [toggle]);\n\n\n  return (\n    <>\n      <div className=\"bg-light-bg dark:bg-dark-frame-bg min-h-screen lg:px-8 pb-10\">\n        <div className=\"px-3 md:px-8\">\n          <div className=\"bg-white dark:bg-dark-bg shadow-lg px-5 py-8 rounded-md w-full lg:w-[80%] lg:ml-56 mt-[90px]\">\n            <div className=\"\">\n              <div className=\"flex ml-2 items-center justify-between\">\n                <h2 className=\"text-gray-800 dark:text-white font-semibold\">\n                  {t('Performance score')}\n                </h2>\n              </div>\n              <div className=\"flex ml-[-25px] px-7 py-2  mt-4\">\n              </div>\n            </div>\n\n            <div>\n              <div className=\"-mx-4 sm:-mx-8 px-4 sm:px-8 py-2 overflow-x-auto\">\n                <div className=\"inline-block w-full lg:min-w-full shadow rounded-lg overflow-hidden\">\n                  <table className=\"min-w-full leading-normal\">\n                    <thead className=\"dark:text-white \"></thead>\n                    <tbody>\n                      <tr>\n                        <th className=\"p-6 border-b-2 border-gray-200 bg-gray-100 dark:bg-dark-tertiary text-center text-xs font-semibold text-gray-600 dark:text-white uppercase tracking-wider\">\n                          {t('Sprint')}\n                        </th>\n\n                        <th className=\"p-6 border-b-2 border-gray-200 bg-gray-100 dark:bg-dark-tertiary text-center text-xs font-semibold text-gray-600 dark:text-white uppercase tracking-wider\">\n                          {t('Phase')}\n                        </th>\n                        <th className=\"px-5  border-b-2 border-gray-200 bg-gray-100 dark:bg-dark-tertiary text-center text-xs font-semibold text-gray-600 dark:text-white uppercase md:table-cell sm:hidden tracking-wider\">\n                          {t('Quantity')}\n                        </th>\n                        <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 dark:bg-dark-tertiary text-center text-xs font-semibold text-gray-600 dark:text-white uppercase md:table-cell sm:hidden tracking-wider\">\n                          {t('Quality')}\n                        </th>\n                        <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 dark:bg-dark-tertiary text-center text-xs font-semibold text-gray-600 dark:text-white uppercase md:table-cell sm:hidden tracking-wider\">\n                          {t('Professional skills')}\n                        </th>\n\n                        <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 dark:bg-dark-tertiary text-center text-xs font-semibold text-gray-600 dark:text-white uppercase tracking-wider\">\n                          {t('Average')}\n                        </th>\n                        <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 dark:bg-dark-tertiary text-center text-xs font-semibold text-gray-600 dark:text-white uppercase tracking-wider\">\n                          {('Actions')}\n                        </th>\n                      </tr>\n                      {ratings?.slice(firstContentIndex, lastContentIndex).map(\n                        /* istanbul ignore next */\n                        (item: any) => (\n                          /* istanbul ignore next */\n                          <tr key={item.id}>\n                            <td className=\"px-5 py-5 border-b border-gray-200 bg-white dark:bg-dark-bg text-sm\">\n                              <div className=\"flex justify-center items-center\">\n                                <div className=\"\">\n                                  <p className=\"text-gray-900 text-center dark:text-white whitespace-no-wrap\">\n                                    {item.sprint}\n                                  </p>\n                                </div>\n                              </div>\n                            </td>\n                            <td className=\"px-5 py-5 border-b border-gray-200 bg-white dark:bg-dark-bg text-sm md:table-cell sm:hidden\">\n                              <p className=\"text-gray-900  dark:text-white whitespace-no-wrap text-center\">\n                                {item.cohort.phase?.name}\n                              </p>\n                            </td>\n                            <td className=\"px-5 py-5 border-b border-gray-200 bg-white dark:bg-dark-bg text-sm md:table-cell sm:hidden\">\n                              <p className=\"text-gray-900  dark:text-white whitespace-no-wrap text-center\">\n                                {item.quantity}\n                              </p>\n                            </td>\n                            <td className=\"px-5 py-5 border-b border-gray-200 bg-white dark:bg-dark-bg text-sm md:table-cell sm:hidden\">\n                              <p className=\"text-gray-900  dark:text-white whitespace-no-wrap text-center \">\n                                {item.quality}\n                              </p>\n                            </td>\n                            <td className=\"px-5 py-5 border-b border-gray-200 bg-white dark:bg-dark-bg text-sm md:table-cell sm:hidden\">\n                              <p className=\"text-gray-900  dark:text-white whitespace-no-wrap text-center \">\n                                {item.professional_Skills}\n                              </p>\n                            </td>\n                            <td className=\"px-5 py-5 border-b border-gray-200 bg-white dark:bg-dark-bg text-sm\">\n                              <p className=\"text-gray-900  dark:text-white whitespace-no-wrap text-center\">\n                                {item.average}\n                              </p>\n                            </td>\n\n                            <td className=\"px-5 py-5 border-b border-gray-200 bg-white dark:bg-dark-bg text-sm\">\n                              <Link to=\"/dashboard/performance-details\">\n                                \n                                <Button\n                                  variant=\"primary\"\n                                  size=\"sm\"\n                                  style=\"px-4 py-0 text-sm\"\n                                  onClick={\n                                    \n                                    /* istanbul ignore next */\n                                    () => {\n                                      /* istanbul ignore next */\n                                      setToggle(!toggle);\n                                      sessionStorage.setItem(\n                                        'data',\n                                        \n                                        JSON.stringify({\n                                          user_sprint: item?.sprint,\n                                          quantity_remark: item?.quantityRemark,\n                                          quality_remark: item?.qualityRemark,\n                                          professional_remark:\n                                            item?.professionalRemark,\n                                          quality: item?.quality,\n                                          quantity: item?.quantity,\n                                          professional:\n                                            item?.professional_Skills,\n                                          user_id: item?.user.id,\n                                        }),\n                                      );\n                                    }\n                                  }\n                                  \n                                >\n                                  {t('Details')}\n                                  \n                                </Button>\n                                \n                              </Link>\n                              \n                            </td>\n                            \n                          </tr>\n                        ),\n                      )}\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"flex items-center justify-center gap-1 mt-12 mb-0\">\n            <button\n              onClick={prevPage}\n              data-testid=\"prev\"\n              className={`page flex text-white h-12 w-12 items-center justify-center border-solid cursor-pointer bg-transparent ${\n                page === 1 && 'disabled'\n              }`}\n            >\n              &larr;\n            </button>\n            <button\n              onClick={() => setPage(1)}\n              data-testid=\"page1\"\n              className={`page flex text-white h-12 w-12 items-center justify-center border-solid cursor-pointer bg-transparent ${\n                page === 1 && 'disabled'\n              }`}\n            >\n              1\n            </button>\n            {/* @ts-ignore */}\n            {gaps.paginationGroup.map( /* istanbul ignore next */(el) => (\n              <button\n                onClick={ /* istanbul ignore next */() => setPage(el)}\n                data-testid=\"page\"\n                key={el}\n                className={`page flex text-white h-12 w-12 items-center justify-center border-solid cursor-pointer bg-transparent ${\n                  page === el ? 'active' : ''\n                }`}\n              >\n                {el}\n              </button>\n            ))}\n            <button\n              onClick={() => setPage(totalPages)}\n              data-testid=\"page3\"\n              className={`page flex text-white h-12 w-12 items-center justify-center border-solid cursor-pointer bg-transparent ${\n                page === totalPages && 'disabled'\n              }`}\n            >\n              {totalPages}\n            </button>\n            <button\n              onClick={nextPage}\n              data-testid=\"next\"\n              className={`page flex text-white h-12 w-12 items-center justify-center border-solid cursor-pointer bg-transparent ${\n                page === totalPages && 'disabled'\n              }`}\n            >\n              &rarr;\n            </button>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default TraineePerfomance;\n"],"names":[],"sourceRoot":""}