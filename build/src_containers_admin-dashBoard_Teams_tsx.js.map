{"version":3,"file":"src_containers_admin-dashBoard_Teams_tsx.js","mappings":"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","sources":["webpack://atlp-pulse-fn/./src/components/ButtonLoading.tsx","webpack://atlp-pulse-fn/./src/components/ControlledSelect.tsx","webpack://atlp-pulse-fn/./src/components/ModalDataTable.tsx","webpack://atlp-pulse-fn/./src/containers/admin-dashBoard/CreateTeamModal.tsx","webpack://atlp-pulse-fn/./src/containers/admin-dashBoard/DeleteTeamModal.tsx","webpack://atlp-pulse-fn/./src/containers/admin-dashBoard/TeamTraineeModal.tsx","webpack://atlp-pulse-fn/./src/containers/admin-dashBoard/Teams.tsx","webpack://atlp-pulse-fn/./src/containers/admin-dashBoard/UpdateTeamModal.tsx"],"sourcesContent":["/* eslint-disable */\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\ninterface Props {\n  style?: any;\n}\nconst ButtonLoading: React.FC<Props> = ({ style }) => {\n  const { t } = useTranslation();\n  return (\n    <div className={`flex btn w-fit py-1 px-3 bg-primary font-bold ${style}`}>\n      <div className=\"loader mr-1\" />\n      <button className=\"ml-1 text-white font-bold\" disabled>\n        {t('Processing...')}\n      </button>\n    </div>\n  );\n};\n\nexport default ButtonLoading;\n","/* eslint-disable react/require-default-props */\nimport React, { useState } from 'react';\nimport {\n  Control,\n  Controller,\n  RegisterOptions,\n  UseFormRegisterReturn,\n} from 'react-hook-form';\nimport Select from 'react-select';\n\nconst customStyles = {\n  option: (provided: any, state: any) => ({\n    ...provided,\n    borderBottom: '1px dotted pink',\n    color: state.isSelected ? 'red' : '#148FB6',\n  }),\n  valueLabel: (styles: any) => ({\n    ...styles,\n    text: 'white',\n  }),\n  control: (styles: any) => ({\n    ...styles,\n    height: 20,\n    // height: '30px',\n    width: '100%',\n    backgroundColor: '#374151',\n    borderColor: 'rgb(20 143 182)',\n    text: 'white',\n  }),\n  singleValue: (provided: any, state: any) => {\n    const opacity = state.isDisabled ? 0.5 : 1;\n    const transition = 'opacity 300ms';\n\n    return { ...provided, opacity, transition };\n  },\n};\n\nfunction CustomSelect({\n  placeholder,\n  name,\n  value,\n  defaultValue,\n  options,\n  onChange,\n  ...props\n}: any) {\n  return (\n    <Select\n      value={defaultValue?defaultValue: value}\n      className=\"my-react-select-container\"\n      classNamePrefix=\"my-react-select\"\n      styles={customStyles}\n      onChange={onChange}\n      options={options}\n      placeholder={placeholder}\n      isSearchable\n      {...props}\n    />\n  );\n}\n\nexport default function ControlledSelect({\n  options,\n  defaultValue,\n  placeholder = 'Select...',\n  register,\n  noRegister,\n  ...props\n}: {\n  options?: { value?: any; label?: any }[];\n  defaultValue?: any;\n  placeholder?: string;\n  register?: { control: Control; name: string; rules?: { [a: string]: any } };\n  noRegister?: { onChange: (e?: any) => void };\n}) {\n  let onChange: () => void;\n  let name: string = '';\n  let control: Control = [] as unknown as Control;\n  let rules: { [a: string]: any } | undefined;\n\n  noRegister && ({ onChange } = noRegister);\n  register && ({ control, name, rules } = register);\n\n  return register ? (\n    <Controller\n      name={name}\n      control={control}\n      rules={rules}\n      render={({ field: { value, onChange } }) => (\n        <CustomSelect\n          placeholder={placeholder}\n          options={options}\n          value={value}\n          onChange={onChange}\n          {...props}\n        />\n      )}\n    />\n  ) : (\n    <CustomSelect\n      placeholder={placeholder}\n      defaultValue={defaultValue!}\n      name={name!}\n      onChange={onChange!}\n      options={options}\n      {...props}\n    />\n  );\n}\n","// @ts-nocheck\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  useGlobalFilter,\n  usePagination,\n  useSortBy,\n  useTable,\n} from 'react-table';\nimport Button from './Buttons';\nimport DataPagination from './DataPagination';\n\ninterface TableData {\n  data: [any];\n  columns: any;\n  title: string;\n  removeModel: any;\n}\n\nfunction DataTable({ data, columns, title, removeModel }: TableData) {\n  // const sortedData = React.useMemo(() => [...data], []);\n  const sortedColumns = React.useMemo(() => [...columns], [columns]);\n  const sortedData = data;\n  // const sortedColumns = columns;\n  const TableInstance = useTable(\n    { data: sortedData, columns: sortedColumns, initialState: { pageSize: 3 } },\n\n    useGlobalFilter,\n    useSortBy,\n    usePagination,\n  );\n  const { t } = useTranslation();\n\n  const {\n    getTableProps,\n\n    setGlobalFilter,\n    getTableBodyProps,\n    page,\n    nextPage,\n    previousPage,\n    canPreviousPage,\n    canNextPage,\n    gotoPage,\n    pageCount,\n    setPageSize,\n    pageOptions,\n    headerGroups,\n    prepareRow,\n    state,\n  } = TableInstance;\n  // @ts-ignore\n  const { globalFilter, pageIndex, pageSize } = state;\n\n  return (\n    <div className=\"bg-white dark:bg-dark-bg shadow-lg px-5 py-8 rounded-md w-[100%] mx-auto lg:w-[60%]\">\n      <div className=\" flex items-center justify-between pb-6\">\n        <div>\n          <h2 className=\"text-gray-800 dark:text-white font-semibold text-xl\">\n            {t(title)}\n          </h2>\n          {/* <span className=\"text-xs text-gray-600\">Current cohort</span> */}\n          <input\n            defaultValue={globalFilter || ''}\n            placeholder=\"Filter\"\n            className=\"border-gray-300 dark:bg-dark-tertiary dark:text-white border py-2 mt-4 rounded outline-none px-5 font-sans text-xs w-52 md:w-96\"\n            onChange={(e) => setGlobalFilter(e.target.value)}\n          />\n        </div>\n        <div style={{ marginTop: '-1.2cm', color: 'red' }}>\n          <Button\n            variant=\"\"\n            size=\"sxm\"\n            style=\"\"\n            data-testid=\"delete\"\n            onClick={() => removeModel()}\n          >\n            x\n          </Button>\n        </div>\n      </div>\n      <div style={{ overflowX: 'auto' }}>\n        <table className=\"min-w-full leading-normal\" {...getTableProps()}>\n          <thead>\n            {headerGroups.map((headerGroup) => (\n              <tr {...headerGroup.getHeaderGroupProps()}>\n                {headerGroup.headers.map((column) => (\n                  <th\n                    className={column.isSorted ? 'sort-asc thead' : ' thead'}\n                    {...column.getHeaderProps(column.getSortByToggleProps())}\n                  >\n                    {column.render('Header')}\n                  </th>\n                ))}\n              </tr>\n            ))}\n          </thead>\n          <tbody {...getTableBodyProps()}>\n            {page.map((row) => {\n              prepareRow(row);\n\n              // eslint-disable-next-line operator-linebreak\n              const rowTheme =\n                row.index % 2 !== 0\n                  ? 'bg-light-bg dark:bg-dark-tertiary'\n                  : 'bg-white dark:bg-dark-bg';\n\n              return (\n                <tr className={` ${rowTheme}} `} {...row.getRowProps()}>\n                  {row.cells.map((cell) => (\n                    <td className=\"data-cell\" {...cell.getCellProps()}>\n                      {cell.render('Cell')}\n                    </td>\n                  ))}\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n        <DataPagination\n          pageOptions={pageOptions}\n          canNextPage={canNextPage}\n          gotoPage={gotoPage}\n          columnLength={columns.length}\n          canPreviousPage={canPreviousPage}\n          pageSize={pageSize}\n          setPageSize={setPageSize}\n          previousPage={previousPage}\n          nextPage={nextPage}\n          pageCount={pageCount}\n          pageIndex={pageIndex}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default DataTable;\n","import { gql, useMutation } from '@apollo/client';\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport Button from '../../components/Buttons';\nimport ControlledSelect from '../../components/ControlledSelect';\nimport { Team, Cohort } from './Teams';\n\nexport const AddTeam = gql`\nmutation Mutation($name: String!, $cohortName: String!, $orgToken: String!) {\n    addTeam(name: $name, cohortName: $cohortName, orgToken: $orgToken) {\n      name\n      cohort {\n        name\n      }\n    }\n  }\n`;\n\nexport default function CreateTeamModal({\n    data,\n    createTeamModel,\n    removeModel,\n    refetch,\n}: {\n    data?: {\n        getAllTeams: Team[];\n        getAllCohorts: Cohort[];\n    };\n    createTeamModel: boolean;\n    removeModel: Function;\n    refetch: Function;\n}) {\n    const { t } = useTranslation();\n    const {\n        handleSubmit,\n        watch,\n        formState: { errors },\n        reset,\n        setValue,\n        register,\n        control,\n    } = useForm();\n    /* istanbul ignore next */\n    const [addTeamMutation, { loading }] = useMutation(AddTeam, {\n        onError(error) {\n            toast.error(error.message.toString());\n        },\n        onCompleted() {\n            toast.success(\"Team successfully added\");\n            refetch();\n            removeModel();\n        },\n    });\n    /* istanbul ignore next */\n\n    /* istanbul ignore next */\n    async function addTeam(data: any) {\n        const newData = { ...data };\n        newData.cohortName &&\n            (newData.cohortName = newData.cohortName.value);\n\n        Object.keys(newData).forEach((field) => {\n            if (!newData[field] || newData[field] === '') {\n                delete newData[field];\n            }\n        });\n\n        await addTeamMutation({\n            variables: { orgToken: localStorage.getItem('orgToken'),...newData },\n\n            onCompleted() {\n                reset();\n                setValue('coordinatorEmail', { value: undefined, label: undefined });\n                setValue('cohortName', { value: undefined, label: undefined });\n            },\n        });\n    }\n    /* istanbul ignore next */\n    return (\n        <div\n            className={`h-screen w-screen bg-black bg-opacity-30 backdrop-blur-sm absolute flex items-center justify-center px-4 ${createTeamModel === true ? 'block' : 'hidden'\n                }`}\n        >\n            <div className=\"bg-white dark:bg-dark-bg w-screen md:w-1/2  xl:w-4/12 rounded-lg p-4 pb-8\">\n                <div className=\"card-title w-full flex  flex-wrap justify-center items-center  \">\n                    <h3 className=\"font-bold text-sm dark:text-white text-center w-11/12 uppercase\">\n                        {t('Add A Team')}\n                    </h3>\n                    <hr className=\" bg-primary border-b my-3 w-full\" />\n                </div>\n                <div className=\"card-body\">\n                    <form className=\" py-3 px-8\">\n                        <div className=\"input my-5 h-9 \">\n                            <div className=\"grouped-input flex items-center h-full w-full rounded-md\">\n                                <input\n                                    type=\"text\"\n                                    className=\"border border-primary rounded outline-none px-5 dark:bg-dark-frame-bg dark:text-white font-sans text-xs py-2 w-full\"\n                                    placeholder={t('Team Name')}\n                                    {...register('name', {\n                                        required: `${t('The Team name is required')}`,\n                                    })}\n                                />\n                            </div>\n                            {errors?.name && (\n                                <p className=\"font-thin text-[12px] text-red-300\">\n                                    {errors?.name?.message?.toString()}\n                                </p>\n                            )}\n                        </div>\n\n\n                        <div className=\"input my-5 h-9 \">\n                            <ControlledSelect\n                                placeholder={t('Choose a Cohort')}\n                                register={{\n                                    control,\n                                    name: 'cohortName',\n                                    rules: { required: `${t('The Cohort Name is required')}` },\n                                }}\n                                options={data?.getAllCohorts?.map(({ name }) => ({\n                                    value: name,\n                                    label: name,\n                                }))}\n                            />\n                            {errors?.programName && (\n                                <p className=\"font-thin text-[12px] text-red-300\">\n                                    {errors?.programName?.message?.toString()}\n                                </p>\n                            )}\n                        </div>\n\n\n\n                        <div className=\"w-full flex justify-between\">\n                            <Button\n                                variant=\"info\"\n                                size=\"sm\"\n                                style=\"w-[30%] md:w-1/4 text-sm font-sans\"\n                                data-testid=\"remove\"\n                                onClick={() => {\n                                    removeModel();\n                                    reset();\n                                }}\n                                disabled={loading}\n                            >\n                                {' '}\n                                {t('Cancel')}\n                            </Button>\n                            <Button\n                                variant=\"primary\"\n                                size=\"sm\"\n                                style=\"w-[30%] md:w-1/4 text-sm font-sans p-0\"\n                                onClick={handleSubmit(addTeam)}\n                                loading={loading}\n                            >\n                                {' '}\n                                {t('Save')}\n                            </Button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n}","import { gql, useMutation } from '@apollo/client';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport Button from '../../components/Buttons';\nimport { Team } from './Teams';\n\nexport const DeleteTeam = gql`\n  mutation Mutation($deleteTeamId: ID!) {\n    deleteTeam(id: $deleteTeamId)\n  }\n`;\n\nexport default function DeleteTeamModal({\n    deleteTeamModal,\n    currentTeam,\n    removeModel,\n    refetch,\n}: {\n    deleteTeamModal: boolean;\n    currentTeam: Team | undefined;\n    removeModel: Function;\n    refetch: Function;\n}) {\n    const { t } = useTranslation();\n    const [deleteTeamMutation, { loading }] = useMutation(DeleteTeam, {\n        onError(error) {\n            toast.error(error.message.toString());\n        },\n        onCompleted() {\n            refetch();\n            toast.success(t('Team deleted successfully'));\n            removeModel();\n        },\n    });\n    const orgToken = localStorage.getItem('orgToken');\n\n    async function deleteTeam() {\n        const data: any = {};\n\n        data.deleteTeamId = currentTeam?.id;\n        orgToken && (data.orgToken = orgToken);\n\n        await deleteTeamMutation({ variables: data });\n    }\n\n    return (\n        <div\n            className={`h-screen w-screen bg-black fixed bg-opacity-30 backdrop-blur-sm flex items-center justify-center z-50 overflow-auto mt-10 p-4 ${deleteTeamModal === true ? 'block' : 'hidden'\n                }`}\n        >\n            <div className=\"bg-white dark:bg-dark-bg w-screen md:w-1/2  xl:w-4/12 rounded-lg p-4 pb-8\">\n                <div className=\"card-title w-full flex  flex-wrap justify-center items-center  \">\n                    <h3 className=\"font-bold text-xl dark:text-white text-center w-11/12\">\n                        {t('Delete Team')}\n                    </h3>\n                    <hr className=\" bg-primary border-b my-3 w-full\" />\n                </div>\n                <div className=\"card-body\">\n                    <form className=\" py-3 px-8\">\n                        <div>\n                            <h2 className=\"text-base dark:text-white text-center m-4\">\n                                {t('Delete Team Permanently')}\n                            </h2>\n                        </div>\n                        <div className=\"w-full flex justify-between\">\n                            <Button\n                                variant=\"info\"\n                                size=\"sm\"\n                                style=\"w-[30%] md:w-1/4 text-sm font-sans\"\n                                data-testid=\"delete\"\n                                onClick={() => removeModel()}\n                            >\n                                {t('Cancel')}\n                            </Button>\n                            <Button\n                                variant=\"danger\"\n                                size=\"sm\"\n                                style=\"w-[30%] md:w-1/4 text-sm font-sans\"\n                                data-testid=\"confirmDeleteBtn\"\n                                onClick={() => {\n                                    deleteTeam();\n                                }}\n                            >\n                                {t('Delete')}\n                            </Button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n}\n","import { gql, useMutation, useLazyQuery } from '@apollo/client';\nimport React, { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport { Team } from './Teams';\nimport ModalDataTable from '../../components/ModalDataTable';\nimport { GET_TEAM_TRAINEE_QUERY } from '../../Mutations/manageStudentMutations';\nimport ButtonLoading from '../../components/ButtonLoading';\n\nconst organizationToken = localStorage.getItem('orgToken');\n\nexport default function TeamTraineeModal({\n  teamTraineeModal,\n  currentTeam,\n  removeModel,\n  refetch,\n}: {\n  teamTraineeModal: boolean;\n  currentTeam: Team | undefined;\n  removeModel: Function;\n  refetch: Function;\n}) {\n  const { t } = useTranslation();\n\n  const [traineeData, setTraineeData] = useState<any[]>([]);\n  const columns = [\n    { Header: t('name'), accessor: 'name' },\n    { Header: t('email'), accessor: 'email' },\n    { Header: t('rating'), accessor: 'rating' },\n    { Header: t('cohort'), accessor: 'cohort' },\n    { Header: t('program'), accessor: 'program' },\n  ];\n  const datum: any = [];\n\n  const [getTeamTraineesQuery, { loading }] = useLazyQuery(\n    GET_TEAM_TRAINEE_QUERY,\n    {\n      variables: {\n        orgToken: organizationToken,\n        team: currentTeam ? currentTeam.name : '',\n      },\n    },\n  );\n\n  if (traineeData && traineeData.length > 0) {\n    traineeData?.map((data: any, index: number): any => {\n      datum[index] = {};\n      datum[index].name = data.profile.name;\n      datum[index].email = data.email;\n      datum[index].rating = '2';\n      datum[index].cohort = data.team?.cohort.name;\n      datum[index].program = data.team?.cohort.program.name;\n      return datum;\n    });\n  }\n\n  useEffect(() => {\n    getTeamTraineesQuery({\n      fetchPolicy: 'network-only',\n      onCompleted: (data) => {\n        setTraineeData(data.getTeamTrainees);\n      },\n      onError: (error) => {\n        toast.error(error.message);\n      },\n    });\n  }, [currentTeam]);\n\n  return (\n    <div\n      className={`h-screen w-screen bg-black fixed bg-opacity-30 backdrop-blur-sm flex items-center justify-center z-50 overflow-auto mt-10 p-4 ${\n        teamTraineeModal === true ? 'block' : 'hidden'\n      }`}\n    >\n      {!loading ? (\n        <ModalDataTable\n          data={traineeData?.length > 0 ? datum : [{}]}\n          columns={columns}\n          title={t('Trainees list')}\n          removeModel={removeModel}\n        />\n      ) : (\n        <ButtonLoading style=\"rounded-full inline-block\" />\n      )}\n    </div>\n  );\n}\n","import { gql, useQuery } from '@apollo/client';\nimport { Icon } from '@iconify/react';\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Button from '../../components/Buttons';\nimport DataTable from '../../components/DataTable';\nimport useDocumentTitle from '../../hook/useDocumentTitle';\nimport formatDate from '../../utils/formatDate';\nimport CreateCohortModal from './CreateCohortModal';\nimport DeleteTeamModal from './DeleteTeamModal';\nimport UpdateTeamModal from './UpdateTeamModal';\nimport TeamTraineeModal from './TeamTraineeModal';\nimport CreateTeamModal from './CreateTeamModal';\n\nexport interface Cohort {\n  id: string;\n  name: string;\n  phase: {\n    name: string;\n  };\n  coordinator: {\n    email: string;\n  };\n  program: {\n    name: string;\n  };\n  startDate: string | Date;\n  endDate: string | Date;\n}\n\nexport interface Team {\n  id: string;\n  name: string;\n  cohort: Cohort;\n}\n\nexport const getAllTeam = gql`\n  query GetAllTeams($orgToken: String!) {\n    getAllTeams(orgToken: $orgToken) {\n      id\n      name\n      cohort {\n        coordinator {\n          email\n        }\n        phase {\n          name\n        }\n        program {\n          name\n        }\n        name\n      }\n    }\n\n    getAllCohorts(orgToken: $orgToken) {\n      id\n      name\n      phase {\n        name\n      }\n      coordinator {\n        email\n      }\n      program {\n        name\n      }\n      startDate\n      endDate\n    }\n  }\n`;\n\nfunction ActionButtons({\n  getData,\n  setCurrentTeam,\n  setUpdateTeamModal,\n  setDeleteTeamModal,\n  setTeamTrainneModal,\n  ...props\n}: any) {\n  return (\n    <div className=\"flex relative flex-row align-middle justify-center items-center\">\n      <div\n        data-testid=\"traineeIcon\"\n        onClick={() => {\n          setCurrentTeam(getData?.getAllTeams[props.row.index]);\n          setTeamTrainneModal(true);\n        }}\n      >\n        <Icon\n          icon=\"akar-icons:people-group\"\n          className=\"mr-2\"\n          width=\"25\"\n          height=\"25\"\n          cursor=\"pointer\"\n          color=\"#148fb6\"\n        />\n      </div>\n      <div\n        data-testid=\"updateIcon\"\n        onClick={() => {\n          setCurrentTeam(getData?.getAllTeams[props.row.index]);\n          setUpdateTeamModal(true);\n        }}\n      >\n        <Icon\n          icon=\"el:file-edit-alt\"\n          className=\"mr-2\"\n          width=\"25\"\n          height=\"25\"\n          cursor=\"pointer\"\n          color=\"#148fb6\"\n        />\n      </div>\n\n      <div\n        data-testid=\"deleteIcon\"\n        onClick={() => {\n          setCurrentTeam(getData?.getAllTeams[props.row.index]);\n          setDeleteTeamModal(true);\n        }}\n      >\n        <Icon\n          icon=\"mdi:close-circle-outline\"\n          width=\"30\"\n          height=\"30\"\n          cursor=\"pointer\"\n          color=\"#148fb6\"\n        />\n      </div>\n    </div>\n  );\n}\n\nfunction AdminTeams() {\n  const { t } = useTranslation();\n\n  const {\n    data: getData,\n    loading: getLoading,\n    error: getError,\n    refetch: getRefetch,\n  }: {\n    data?: {\n      getAllTeams: Team[];\n      getAllCohorts: Cohort[];\n    };\n    loading: boolean;\n    error?: any;\n    refetch: Function;\n  } = useQuery(getAllTeam, {\n    variables: {\n      orgToken: localStorage.getItem('orgToken'),\n    },\n  });\n\n  const [createTeamModal, setCreateTeamModal] = useState(false);\n  const [updateTeamModal, setUpdateTeamModal] = useState(false);\n  const [teamTrainneModal, setTeamTrainneModal] = useState(false);\n  const [currentTeam, setCurrentTeam] = useState<Team | undefined>(undefined);\n  const [deleteTeamModal, setDeleteTeamModal] = useState(false);\n  useDocumentTitle('Teams');\n\n  const removeDeleteModel = () => {\n    const newState = !deleteTeamModal;\n    setDeleteTeamModal(newState);\n  };\n\n  const removeModel = () => {\n    setCreateTeamModal(false);\n  };\n\n  const teamColumns = [\n    { Header: t('name'), accessor: 'name' },\n    { Header: t('Phase'), accessor: 'phase' },\n    { Header: t('Cohort'), accessor: 'cohortName' },\n    { Header: t('Program'), accessor: 'programName' },\n    { Header: t('Coordinator'), accessor: 'coordinator' },\n\n    {\n      Header: t('action'),\n      accessor: '',\n      Cell: (props: any) =>\n        ActionButtons({\n          getData,\n          setCurrentTeam,\n          setUpdateTeamModal,\n          setDeleteTeamModal,\n          setTeamTrainneModal,\n          ...props,\n        }),\n    },\n  ];\n\n  const teamData = getData?.getAllTeams.map(({ name, cohort }) => ({\n    name,\n    cohortName: cohort?.name,\n    coordinator: cohort?.coordinator?.email\n      ? cohort?.coordinator?.email\n      : 'Not Assigned',\n    phase: cohort?.phase.name,\n    programName: cohort?.program?.name,\n  }));\n\n  return (\n    <>\n      {/* =========================== Start:: CreateCohortModel =============================== */}\n      <CreateTeamModal\n        data={getData}\n        createTeamModel={createTeamModal}\n        removeModel={removeModel}\n        refetch={getRefetch}\n      />\n      <UpdateTeamModal\n        data={getData}\n        updateTeamModal={updateTeamModal}\n        currentTeam={currentTeam}\n        refetch={getRefetch}\n        removeModel={() => {\n          setUpdateTeamModal(false);\n        }}\n      />\n\n      <TeamTraineeModal\n        teamTraineeModal={teamTrainneModal}\n        currentTeam={currentTeam}\n        refetch={getRefetch}\n        removeModel={() => {\n          setTeamTrainneModal(false);\n        }}\n      />\n\n      <DeleteTeamModal\n        deleteTeamModal={deleteTeamModal}\n        currentTeam={currentTeam}\n        removeModel={removeDeleteModel}\n        refetch={getRefetch}\n      />\n\n      {/* =========================== End::  CreateCohortModel =============================== */}\n\n      <div className=\"bg-light-bg dark:bg-dark-frame-bg min-h-screen overflow-y-auto overflow-x-hidden\">\n        <div className=\"flex items-left px-7 lg:px-60 pt-24 pb-8\">\n          <div className=\"space-x-8 lg:ml-10\">\n            <Button\n              variant=\"primary\"\n              size=\"lg\"\n              onClick={() => setCreateTeamModal(true)}\n              data-testid=\"removeModel\"\n            >\n              {' '}\n              {t('Team')} +\n            </Button>\n          </div>\n        </div>\n        <div className=\"px-3 m d:px-8 w-screen overflow-x-auto\">\n          {!getLoading && (\n            <DataTable\n              columns={teamColumns}\n              data={teamData ? (teamData as [any]) : [{}]}\n              title={t('Teams list')}\n            />\n          )}\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default AdminTeams;\n","import { gql, useMutation } from '@apollo/client';\nimport React, { useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport Button from '../../components/Buttons';\nimport { Team, Cohort } from './Teams';\n\nexport const UpdateTeam = gql`\n  mutation UpdateTeam($updateTeamId: ID!, $name: String, $orgToken: String) {\n    updateTeam(id: $updateTeamId, name: $name, orgToken: $orgToken) {\n      name\n    }\n  }\n`;\n\nexport default function UpdateTeamModal({\n    data,\n    updateTeamModal,\n    currentTeam,\n    removeModel,\n    refetch,\n}: {\n    data?: {\n        getAllTeams: Team[];\n        getAllCohorts: Cohort[];\n    };\n    updateTeamModal: boolean;\n    currentTeam: Team | undefined;\n    removeModel: Function;\n    refetch: Function;\n}) {\n    const { t } = useTranslation();\n    const {\n        handleSubmit,\n        watch,\n        formState: { errors },\n        reset,\n        register,\n        control,\n        setValue,\n    } = useForm();\n    const [updateTeamMutation, { loading }] = useMutation(UpdateTeam, {\n        onError(error) {\n            toast.error(error.message.toString());\n        },\n        onCompleted() {\n            toast.success(t('Team updated successfully'));\n            refetch();\n            removeModel();\n        },\n    });\n    const orgToken = localStorage.getItem('orgToken');\n\n    async function updateTeam(data: any) {\n        const newData: any = { ...data };\n\n        newData.coordinatorEmail &&\n            (newData.coordinatorEmail = newData.coordinatorEmail.value);\n        newData.programName && (newData.programName = newData.programName.value);\n\n        Object.keys(newData).forEach((field) => {\n            if (!newData[field] || newData[field] === '') {\n                delete newData[field];\n            }\n        });\n\n        newData.updateTeamId = currentTeam?.id;\n        orgToken && (newData.orgToken = orgToken);\n\n        await updateTeamMutation({ variables: newData });\n    }\n\n    useEffect(() => {\n        setValue('name', currentTeam?.name);\n    }, [currentTeam, updateTeamModal]);\n\n    return (\n        <div\n            className={`h-screen w-screen bg-black fixed bg-opacity-30 backdrop-blur-sm flex items-center justify-center z-50 overflow-auto mt-10 p-4 ${updateTeamModal === true ? 'block' : 'hidden'\n                }`}\n            data-testid=\"updateTeamModal\"\n        >\n            <div className=\"bg-white dark:bg-dark-bg w-screen md:w-1/2  xl:w-4/12 rounded-lg p-4 pb-8\">\n                <div className=\"card-title w-full flex  flex-wrap justify-center items-center  \">\n                    <h3 className=\"font-bold text-sm dark:text-white text-center w-11/12 uppercase\">\n                        {t('Update Team')}\n                    </h3>\n                    <hr className=\" bg-primary border-b my-3 w-full\" />\n                </div>\n                <div className=\"card-body\">\n                    <form className=\" py-3 px-8\">\n                        <div className=\"input my-5 h-9 \">\n                            <div className=\"grouped-input flex items-center h-full w-full rounded-md\">\n                                <input\n                                    type=\"text\"\n                                    className=\"border border-primary rounded outline-none px-5 dark:bg-dark-frame-bg dark:text-white font-sans text-xs py-2 w-full\"\n                                    placeholder={t('name')}\n                                    {...register('name')}\n                                />\n                            </div>\n                            {errors?.name && (\n                                <p className=\"font-thin text-[12px] text-red-300\">\n                                    {errors?.name?.message?.toString()}\n                                </p>\n                            )}\n                        </div>\n\n                        <div className=\"w-full flex justify-between\">\n                            <Button\n                                variant=\"info\"\n                                size=\"sm\"\n                                style=\"w-[30%] md:w-1/4 text-sm font-sans\"\n                                data-testid=\"remove\"\n                                onClick={() => {\n                                    removeModel();\n                                    reset();\n                                }}\n                                disabled={loading}\n                            >\n                                {' '}\n                                {t('Cancel')}\n                            </Button>\n                            <Button\n                                variant=\"primary\"\n                                size=\"sm\"\n                                style=\"w-[30%] md:w-1/4 text-sm font-sans p-0\"\n                                onClick={handleSubmit(updateTeam)}\n                                loading={loading}\n                                data-testid=\"confirmUpdateBtn\"\n                            >\n                                {' '}\n                                {t('Save')}\n                            </Button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n}\n"],"names":[],"sourceRoot":""}