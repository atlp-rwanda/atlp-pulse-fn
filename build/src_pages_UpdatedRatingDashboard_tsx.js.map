{"version":3,"file":"src_pages_UpdatedRatingDashboard_tsx.js","mappings":"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","sources":["webpack://atlp-pulse-fn/./src/Mutations/Ratings.tsx","webpack://atlp-pulse-fn/./src/components/DataPagination.tsx","webpack://atlp-pulse-fn/./src/components/DataTable.tsx","webpack://atlp-pulse-fn/./src/pages/UpdatedRatingDashboard.tsx"],"sourcesContent":["import { gql } from '@apollo/client';\n\nexport const GET_RATINGS = gql`\n  query Query($orgToken: String) {\n    fetchRatings(orgToken: $orgToken) {\n      user {\n        id\n        email\n      }\n      sprint\n      quantity\n      bodyQuantity\n      quantityRemark\n      quality\n      bodyProfessional\n      qualityRemark\n      professional_Skills\n      professionalRemark\n      bodyQuality\n      coordinator\n      average\n      cohort {\n        name\n        phase {\n          name\n        }\n      }\n    }\n  }\n`;\nexport const RATING_BY_COHORT = gql `\nquery GetAllCohorts( $cohortName: String) {\n  fetchRatingByCohort(  CohortName: $cohortName) {\n    sprint\n    quantity\n    approved\n    coordinator\n    average\n    cohort {\n      name\n      id\n      phase {\n        name\n      }\n    }\n    user {\n      id\n      email\n    }\n    quantityRemark\n    bodyQuantity\n    quality\n    qualityRemark\n    bodyQuality\n    professional_Skills\n    professionalRemark\n    bodyProfessional\n  }\n}\n`\nexport const FETCH_ALL_RATINGS = gql`\n  query FetchAllRatings($orgToken: String) {\n    fetchAllRatings(orgToken: $orgToken) {\n      user {\n        id\n        email\n      }\n      sprint\n      quantity\n      quantityRemark\n      quality\n      qualityRemark\n      professional_Skills\n      professionalRemark\n      average\n      cohort {\n        name\n        phase {\n          name\n        }\n      }\n      coordinator\n    }\n  }\n`;\n\nexport const ADD_RATING = gql`\nmutation AddRatings($user: String!, $sprint: Int!, $quantity: String!, $quality: String!, $cohort: String!, $professionalSkills: String!, $orgToken: String!, $quantityRemark: String, $bodyQuality: String, $qualityRemark: String, $bodyQuantity: String, $professionalRemark: String, $bodyProfessional: String) {\n  addRatings(user: $user, sprint: $sprint, quantity: $quantity, quality: $quality, cohort: $cohort, professional_Skills: $professionalSkills, orgToken: $orgToken, quantityRemark: $quantityRemark, bodyQuality: $bodyQuality, qualityRemark: $qualityRemark, bodyQuantity: $bodyQuantity, professionalRemark: $professionalRemark, bodyProfessional: $bodyProfessional) {\n    user {\n      id\n      email\n    }\n    sprint\n    cohort {\n      name\n      id\n      phase {\n        name\n      }\n    }\n    quantity\n    quantityRemark\n    bodyQuantity\n    quality\n    qualityRemark\n    bodyQuality\n    professional_Skills\n    professionalRemark\n    bodyProfessional\n    approved\n    coordinator\n  }\n}\n`;\n\nexport const UPDATE_RATING = gql`\n  mutation Mutation(\n    $user: String!\n    $sprint: Int!\n    $quantity: [String]\n    $quantityRemark: [String]\n    $quality: [String]\n    $qualityRemark: [String]\n    $professionalSkills: [String]\n    $professionalRemark: [String]\n    $orgToken: String!\n  ) {\n    updateRating(\n      user: $user\n      sprint: $sprint\n      quantity: $quantity\n      quantityRemark: $quantityRemark\n      quality: $quality\n      qualityRemark: $qualityRemark\n      professional_Skills: $professionalSkills\n      professionalRemark: $professionalRemark\n      orgToken: $orgToken\n    ) {\n      user\n      sprint\n      quantity\n      quantityRemark\n      quality\n      qualityRemark\n      professional_Skills\n      professionalRemark\n    }\n  }\n`;\n\nexport const APPROVE_RATING = gql`\n  mutation Mutation($user: String!, $sprint: Int!) {\n    approveRating(user: $user, sprint: $sprint) {\n      user\n      sprint\n      quantity\n      quantityRemark\n      qualityRemark\n      professionalRemark\n      professional_Skills\n      approved\n      quality\n    }\n  }\n`;\n\nexport const REJECT_RATING = gql`\n  mutation Mutation($user: String!, $sprint: Int!) {\n    rejectRating(user: $user, sprint: $sprint)\n  }\n`;\n\nexport const TRAINEE_RATING = gql`\n  query Query {\n    fetchRatingsTrainee {\n      user {\n        id\n      }\n      sprint\n      quantity\n      quantityRemark\n      quality\n      qualityRemark\n      professional_Skills\n      professionalRemark\n      average\n      cohort {\n        phase {\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport const GET_USERS = gql`\n  query GetAllUsers($cohortName: ID!) {\n    fetchCohortsCoordinator(cohortName: $cohortName) {\n      name\n      phase {\n        name\n      }\n      coordinator {\n        id\n      }\n      members {\n        id\n        role\n        email\n      }\n      program {\n        name\n      }\n      id\n    }\n  }\n`;\n\nexport const GET_COORDINATOR_COHORTS_QUERY = gql`\n  query GetCoordinatorCohorts($orgToken: String) {\n    getCoordinatorCohorts(orgToken: $orgToken) {\n      name\n      id\n    }\n  }\n`;\n\nexport const GET_ALL_TRAINEES = gql`\n  query GetAllUsers($orgToken: String) {\n  getAllUsers(orgToken: $orgToken) {\n    role\n    email\n    team {\n      name\n      cohort {\n        endDateb\n        startDate\n        phase {\n          name\n        }\n        name\n        program {\n          organization {\n            name\n          }\n          name\n          manager {\n            role\n            email\n            profile {\n              name\n              firstName\n              lastName\n            }\n          }\n        }\n      }\n    }\n  }\n}\n`;","import {\n  ArrowCircleLeftIcon,\n  ArrowCircleRightIcon,\n} from '@heroicons/react/outline';\nimport React from 'react';\n\nfunction DataPagination({\n  pageOptions,\n  columnLength,\n  canNextPage,\n  canPreviousPage,\n  pageSize,\n  setPageSize,\n  gotoPage,\n  previousPage,\n  nextPage,\n  pageIndex,\n}: any) {\n  /* istanbul ignore next */\n  return (\n    <div>\n      {pageOptions.length >= 0 && (\n        <table className=\"w-full mt-2\">\n          <tfoot className=\"w-full py-2\">\n            <tr className=\"w-full py-2\">\n              <td colSpan={columnLength}>\n                <div className=\"w-full justify-center flex mx-auto flex-row items-center overflow-x-auto\">\n                  <button\n                    type=\"button\"\n                    className=\"page mx-2 text-white rounded-circle appearance-none font-bold flex items-center justify-center bg-primary h-[30px] w-[60px] cursor-pointer\"\n                    onClick={() => previousPage()}\n                    disabled={!canPreviousPage}\n                  >\n                    <ArrowCircleLeftIcon className=\"w-5\" fontSize=\"sm\" />\n                  </button>{' '}\n                  <button\n                    type=\"button\"\n                    onClick={() => nextPage()}\n                    disabled={!canNextPage}\n                    className=\"page mx-2 text-white rounded-circle font-bold flex items-center justify-center bg-primary h-[30px] w-[60px] cursor-pointer\"\n                  >\n                    <ArrowCircleRightIcon className=\"w-5\" fontSize=\"sm\" />\n                  </button>{' '}\n                  <div className=\"flex flex-row justify-center w-full sm:text-[12px] items-center \">\n                    <span className=\"inline-block mx-2\">\n                      Page{' '}\n                      <strong>\n                        {pageIndex + 1} of\n                        {` ${pageOptions.length}`}\n                      </strong>{' '}\n                    </span>\n                    <span className=\"inline-block mx-2\">\n                      | Go to page:{' '}\n                      <input\n                        type=\"number\"\n                        className=\" outline-none border rounded-md appearance-none border-primary dark:bg-primary pl-1\"\n                        defaultValue={pageIndex + 1}\n                        onChange={(e) => {\n                          const pageNumber = e.target.value\n                            ? Number(e.target.value) - 1\n                            : 0;\n                          gotoPage(pageNumber);\n                        }}\n                        style={{\n                          width: '50px',\n                          height: '30px',\n                          border: 'solid 0.1rem #4aa5be',\n                          paddingLeft: '1.2rem',\n                        }}\n                      />\n                    </span>{' '}\n                    <select\n                      className=\"px-1/2 font-raleway rounded-md border border-primary dark:bg-primary\"\n                      value={pageSize}\n                      onChange={(e) => setPageSize(Number(e.target.value))}\n                      style={{ height: '30px', border: 'solid 0.1rem #4aa5be' }}\n                    >\n                      {[3, 5, 10, 25, 50, 100].map((pgSize) => (\n                        <option key={pgSize} value={pgSize}>\n                          Show {pgSize}\n                        </option>\n                      ))}\n                    </select>\n                  </div>\n                </div>\n              </td>\n            </tr>\n          </tfoot>\n        </table>\n      )}\n    </div>\n  );\n}\n\nexport default DataPagination;\n","// @ts-nocheck\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  useGlobalFilter,\n  usePagination,\n  useSortBy,\n  useTable,\n} from 'react-table';\nimport DataPagination from './DataPagination';\n\ninterface TableData {\n  data: [any];\n  columns: any;\n  title: string;\n}\n\nfunction DataTable({ data, columns, title }: TableData) {\n  // const sortedData = React.useMemo(() => [...data], []);\n  const sortedColumns = React.useMemo(() => [...columns], [columns]);\n  const sortedData = data;\n  // const sortedColumns = columns;\n  const TableInstance = useTable(\n    { data: sortedData, columns: sortedColumns, initialState: { pageSize: 3 } },\n\n    useGlobalFilter,\n    useSortBy,\n    usePagination,\n  );\n  const { t } = useTranslation();\n\n  const {\n    getTableProps,\n\n    setGlobalFilter,\n    getTableBodyProps,\n    page,\n    nextPage,\n    previousPage,\n    canPreviousPage,\n    canNextPage,\n    gotoPage,\n    pageCount,\n    setPageSize,\n    pageOptions,\n    headerGroups,\n    prepareRow,\n    state,\n  } = TableInstance;\n  // @ts-ignore\n  const { globalFilter, pageIndex, pageSize } = state;\n\n  return (\n    <div className=\"bg-white dark:bg-dark-bg shadow-lg px-5 py-8 rounded-md w-[100%] mx-auto lg:w-[80%] lg:ml-60 mb-10\">\n      <div className=\" flex items-center justify-between pb-6\">\n        <div>\n          <h2 className=\"text-gray-800 dark:text-white font-semibold text-xl\">\n            {t(title)}\n          </h2>\n          {/* <span className=\"text-xs text-gray-600\">Current cohort</span> */}\n          <input\n            defaultValue={globalFilter || ''}\n            placeholder=\"Filter\"\n            className=\"border-gray-300 dark:bg-dark-tertiary dark:text-white border py-2 mt-4 rounded outline-none px-5 font-sans text-xs w-52 md:w-96\"\n            /* istanbul ignore next */\n            onChange={(e) => setGlobalFilter(e.target.value)}\n          />\n        </div>\n      </div>\n      <div style={{ overflowX: 'auto' }}>\n        <table className=\"min-w-full leading-normal\" {...getTableProps()}>\n          <thead>\n            {headerGroups.map((headerGroup) => (\n              <tr {...headerGroup.getHeaderGroupProps()}>\n                {headerGroup.headers.map((column) => (\n                  <th\n                    className={column.isSorted ? 'sort-asc thead' : ' thead'}\n                    {...column.getHeaderProps(column.getSortByToggleProps())}\n                  >\n                    {column.render('Header')}\n                  </th>\n                ))}\n              </tr>\n            ))}\n          </thead>\n          <tbody {...getTableBodyProps()}>\n            {page.map((row) => {\n              prepareRow(row);\n\n              // eslint-disable-next-line operator-linebreak\n              const rowTheme =\n                row.index % 2 !== 0\n                  ? 'bg-light-bg dark:bg-dark-tertiary'\n                  : 'bg-white dark:bg-dark-bg';\n\n              return (\n                <tr className={` ${rowTheme}} `} {...row.getRowProps()}>\n                  {row.cells.map((cell) => (\n                    <td className=\"data-cell\" {...cell.getCellProps()}>\n                      {cell.render('Cell')}\n                    </td>\n                  ))}\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n        <DataPagination\n          pageOptions={pageOptions}\n          canNextPage={canNextPage}\n          gotoPage={gotoPage}\n          columnLength={columns.length}\n          canPreviousPage={canPreviousPage}\n          pageSize={pageSize}\n          setPageSize={setPageSize}\n          previousPage={previousPage}\n          nextPage={nextPage}\n          pageCount={pageCount}\n          pageIndex={pageIndex}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default DataTable;\n","/* eslint-disable */\nimport { Icon } from '@iconify/react';\nimport React, { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport DataTable from '../components/DataTable';\nimport Sidebar from '../components/Sidebar';\nimport useDocumentTitle from '../hook/useDocumentTitle';\nimport Button from './../components/Buttons';\nimport { REJECT_RATING, APPROVE_RATING } from '../Mutations/Ratings';\nimport { useLazyQuery, useMutation } from '@apollo/client';\nimport { gql } from '@apollo/client';\nimport { toast } from 'react-toastify';\n\nimport Square from '../Skeletons/Square';\n\nconst organizationToken = localStorage.getItem('orgToken');\nconst UpdatedRatingDashboard = () => {\n  /* istanbul ignore next */\n  useDocumentTitle('Updated Ratings');\n  const { t } = useTranslation();\n  const [toggle, setToggle] = useState(false);\n  const [approveModel, setApproveModel] = useState(false);\n  const [rejectModel, setRejectModel] = useState(false);\n  const [ratings, setRatings] = useState<any>([]);\n  const [rows, setRows] = useState({\n    user: '',\n    id: '',\n    sprint: '',\n  });\n  const GET_USERS = gql`\n    query Query($orgToken: String) {\n      fetchRatingsForAdmin(orgToken: $orgToken) {\n        sprint\n        quantity\n        quantityRemark\n        quality\n        qualityRemark\n        professional_Skills\n        professionalRemark\n        user {\n          id\n          role\n          email\n        }\n        cohort {\n          name\n        }\n      }\n    }\n  `;\n  /* istanbul ignore next */\n  const handleToggle = () => {\n    setToggle(!toggle);\n  };\n\n  const removeApproveModel = () => {\n    let newState = !approveModel;\n    setApproveModel(newState);\n  };\n\n  const removeRejectModel = () => {\n    let newState = !rejectModel;\n    setRejectModel(newState);\n  };\n  const [nav, setNav] = useState(false);\n  /* istanbul ignore next */\n  const handleClick = () => setNav(!nav);\n  const data = ratings;\n  /* istanbul ignore next */\n  const columns = [\n    { Header: `${t('Name')}`, accessor: 'user[email]' },\n    { Header: `${t('Sprint')}`, accessor: 'sprint' },\n    { Header: `${t('Quantity')}`, accessor: 'quantity' },\n    { Header: `${t('Quality')}`, accessor: 'quality' },\n    { Header: `${t('Professional skills')}`, accessor: 'professional_Skills' },\n    {\n      Header: `${t('Actions')}`,\n      accessor: '',\n      /* istanbul ignore next */\n      Cell: ({ row }: any) => (\n        /* istanbul ignore next */\n        <div className=\"flex relative flex-row align-middle  justify-center items-center\">\n          <div\n            data-testid=\"updateIcon\"\n            onClick={() => {\n              setRows({\n                ...rows,\n                user: row.original.user.email,\n                id: row.original.user.id,\n                sprint: row.original.sprint,\n              });\n              setApproveModel(!approveModel);\n            }}\n          >\n            <Icon\n              icon=\"teenyicons:tick-circle-solid\"\n              className=\"mr-2\"\n              width=\"25\"\n              height=\"25\"\n              cursor=\"pointer\"\n              color=\"#148fb6\"\n            />\n          </div>\n\n          <div\n            data-testid=\"deleteIcon\"\n            onClick={() => {\n              setRows({\n                ...rows,\n                user: row.original.user.email,\n                id: row.original.user.id,\n                sprint: row.original.sprint,\n              });\n              setRejectModel(!rejectModel);\n            }}\n          >\n            <Icon\n              icon=\"mdi:close-circle-outline\"\n              width=\"30\"\n              height=\"30\"\n              cursor=\"pointer\"\n              color=\"#148fb6\"\n            />\n          </div>\n        </div>\n      ),\n    },\n  ];\n\n  const [getRatings] = useLazyQuery(GET_USERS, {\n    variables: {\n      orgToken: organizationToken,\n    },\n  });\n  const [approveRating] = useMutation(APPROVE_RATING, {\n    variables: {\n      user: rows.id,\n      sprint: rows.sprint,\n    },\n    onError: (err) => {\n      /* istanbul ignore next */\n      toast.error(err.message || 'something went wrong');\n      /* istanbul ignore next */\n      removeApproveModel();\n    },\n    onCompleted: (data) => {\n      /* istanbul ignore next */\n      toast.success('Successfully approved');\n      /* istanbul ignore next */\n      removeApproveModel();\n      /* istanbul ignore next */\n      handleToggle();\n    },\n  });\n  const [rejectRating] = useMutation(REJECT_RATING, {\n    variables: {\n      user: rows.id,\n      sprint: rows.sprint,\n    },\n    /* istanbul ignore next */\n    onError: (err) => {\n      /* istanbul ignore next */\n      toast.error(\n        err.message || 'something went wrong',\n      ); /* istanbul ignore next */\n      removeRejectModel();\n    },\n    /* istanbul ignore next */\n    onCompleted: /* istanbul ignore next */\n     (data) => {\n      /* istanbul ignore next */\n      toast.success('Successfully rejected!');\n      /* istanbul ignore next */\n      removeRejectModel();\n      handleToggle();\n    },\n  });\n  /* istanbul ignore next */\n  useEffect(() => {\n    getRatings({\n      fetchPolicy: 'network-only',\n      onCompleted: (data) => {\n        setRatings(data.fetchRatingsForAdmin);\n        handleToggle();\n      },\n      onError: (error) => {\n        toast.error(error?.message || 'Something went wrong');\n      },\n    });\n  }, [toggle]);\n\n  return (\n    <>\n      {/* =========================== Start::  approveModel =============================== */}\n      <div\n        className={`min-h-full w-screen z-30 bg-black bg-opacity-30 backdrop-blur-sm absolute  flex items-center justify-center px-4 ${\n          approveModel ? 'block' : 'hidden'\n        }`}\n      >\n        <div className=\"bg-white dark:bg-dark-bg w-full sm:w-3/4 md:w-1/2  xl:w-4/12 rounded-lg p-4 pb-8\">\n          <div className=\"card-title w-full flex  flex-wrap justify-center items-center  \">\n            <h3 className=\"font-bold text-sm dark:text-white text-center w-11/12\">\n              {t('Approve updated ratings')}\n            </h3>\n            <hr className=\" bg-primary border-b my-3 w-full\" />\n          </div>\n          <div className=\"card-body\">\n            <form className=\" py-3 px-8\">\n              <div>\n                <h2 className=\"text-base dark:text-white m-4\">\n                  {t('Are you sure you want to approve this updated ratings ?')}{' '}\n                  ?\n                </h2>\n              </div>\n              <div className=\"w-full flex justify-between\">\n                <Button\n                  data-testid=\"removeApproveModel\"\n                  variant=\"info\"\n                  size=\"sm\"\n                  style=\"w-[30%] md:w-1/4 text-sm font-sans\"\n                  /* istanbul ignore next */\n                  onClick={() =>\n                    /* istanbul ignore next */\n                    removeApproveModel()\n                  }\n                >\n                  {' '}\n                  {t('Cancel')}{' '}\n                </Button>\n                <Button\n                  variant=\"primary\"\n                  size=\"sm\"\n                  style=\"w-[30%] md:w-1/4 text-sm font-sans\"\n                  onClick={() => approveRating()}\n                >\n                  {t('Approve')}\n                </Button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n      {/* =========================== End::  approveModel =============================== */}\n\n      {/* =========================== Start::  rejectModel =============================== */}\n      <div\n        className={`min-h-full w-screen z-30 bg-black bg-opacity-30 backdrop-blur-sm absolute flex items-center justify-center px-4 ${\n          rejectModel === true ? 'block' : 'hidden'\n        }`}\n      >\n        <div className=\"bg-white dark:bg-dark-bg w-full sm:w-3/4 md:w-1/2  xl:w-4/12 rounded-lg p-4 pb-8\">\n          <div className=\"card-title w-full flex  flex-wrap justify-center items-center  \">\n            <h3 className=\"font-bold text-sm dark:text-white text-center w-11/12\">\n              {t('Reject Updated ratings')}\n            </h3>\n            <hr className=\" bg-primary border-b my-3 w-full\" />\n          </div>\n          <div className=\"card-body\">\n            <form className=\" py-3 px-8\">\n              <div>\n                <h2 className=\"text-base dark:text-white m-4\">\n                  {t('Are you sure you want to reject this updated ratings')} ?\n                </h2>\n              </div>\n              <div className=\"w-full flex justify-between\">\n                <Button\n                  data-testid=\"removeRejectModel\"\n                  variant=\"info\"\n                  size=\"sm\"\n                  style=\"w-[30%] md:w-1/4 text-sm font-sans\"\n                  onClick={() => removeRejectModel()}\n                >\n                  {t('Cancel')}\n                </Button>\n                <Button\n                  variant=\"danger\"\n                  size=\"sm\"\n                  style=\"w-[30%] md:w-1/4 text-sm font-sans\"\n                  /* istanbul ignore next */\n                  onClick={() => rejectRating()}\n                >\n                  {t('Reject')}\n                </Button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n      {/* =========================== End::  rejectModel =============================== */}\n\n      <div className=\"flex flex-col h-screen bg-light-bg\">\n        <div className=\"flex flex-row\">\n          <Sidebar toggle={handleClick} style=\"hidden lg:flex\" />\n          <div className=\"w-full\">\n            <div>\n              <div className=\"bg-light-bg dark:bg-dark-frame-bg min-h-screen overflow-y-auto overflow-x-hidden\">\n                <div className=\"px-3 md:px-8 mt-20\">\n                  {data?.length !== 0 ? (\n                    <DataTable\n                      data={data}\n                      columns={columns}\n                      title={t('Performance Ratings')}\n                    />\n                  ) : (\n                    <div className=\"text-center mt-48 text-lg uppercase\">\n                      <p> {t('No updated ratings found')}</p>\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default UpdatedRatingDashboard;\n"],"names":[],"sourceRoot":""}