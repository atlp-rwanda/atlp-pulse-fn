{"version":3,"file":"src_containers_admin-dashBoard_Phases_tsx.js","mappings":"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","sources":["webpack://atlp-pulse-fn/./src/components/DataPagination.tsx","webpack://atlp-pulse-fn/./src/components/DataTable.tsx","webpack://atlp-pulse-fn/./src/containers/admin-dashBoard/CreatePhaseModal.tsx","webpack://atlp-pulse-fn/./src/containers/admin-dashBoard/DeletePhaseModal.tsx","webpack://atlp-pulse-fn/./src/containers/admin-dashBoard/Phases.tsx","webpack://atlp-pulse-fn/./src/containers/admin-dashBoard/UpdatePhaseModal.tsx"],"sourcesContent":["import {\n  ArrowCircleLeftIcon,\n  ArrowCircleRightIcon,\n} from '@heroicons/react/outline';\nimport React from 'react';\n\nfunction DataPagination({\n  pageOptions,\n  columnLength,\n  canNextPage,\n  canPreviousPage,\n  pageSize,\n  setPageSize,\n  gotoPage,\n  previousPage,\n  nextPage,\n  pageIndex,\n}: any) {\n  /* istanbul ignore next */\n  return (\n    <div>\n      {pageOptions.length >= 0 && (\n        <table className=\"w-full mt-2\">\n          <tfoot className=\"w-full py-2\">\n            <tr className=\"w-full py-2\">\n              <td colSpan={columnLength}>\n                <div className=\"w-full justify-center flex mx-auto flex-row items-center overflow-x-auto\">\n                  <button\n                    type=\"button\"\n                    className=\"page mx-2 text-white rounded-circle appearance-none font-bold flex items-center justify-center bg-primary h-[30px] w-[60px] cursor-pointer\"\n                    onClick={() => previousPage()}\n                    disabled={!canPreviousPage}\n                  >\n                    <ArrowCircleLeftIcon className=\"w-5\" fontSize=\"sm\" />\n                  </button>{' '}\n                  <button\n                    type=\"button\"\n                    onClick={() => nextPage()}\n                    disabled={!canNextPage}\n                    className=\"page mx-2 text-white rounded-circle font-bold flex items-center justify-center bg-primary h-[30px] w-[60px] cursor-pointer\"\n                  >\n                    <ArrowCircleRightIcon className=\"w-5\" fontSize=\"sm\" />\n                  </button>{' '}\n                  <div className=\"flex flex-row justify-center w-full sm:text-[12px] items-center \">\n                    <span className=\"inline-block mx-2\">\n                      Page{' '}\n                      <strong>\n                        {pageIndex + 1} of\n                        {` ${pageOptions.length}`}\n                      </strong>{' '}\n                    </span>\n                    <span className=\"inline-block mx-2\">\n                      | Go to page:{' '}\n                      <input\n                        type=\"number\"\n                        className=\" outline-none border rounded-md appearance-none border-primary dark:bg-primary pl-1\"\n                        defaultValue={pageIndex + 1}\n                        onChange={(e) => {\n                          const pageNumber = e.target.value\n                            ? Number(e.target.value) - 1\n                            : 0;\n                          gotoPage(pageNumber);\n                        }}\n                        style={{\n                          width: '50px',\n                          height: '30px',\n                          border: 'solid 0.1rem #4aa5be',\n                          paddingLeft: '1.2rem',\n                        }}\n                      />\n                    </span>{' '}\n                    <select\n                      className=\"px-1/2 font-raleway rounded-md border border-primary dark:bg-primary\"\n                      value={pageSize}\n                      onChange={(e) => setPageSize(Number(e.target.value))}\n                      style={{ height: '30px', border: 'solid 0.1rem #4aa5be' }}\n                    >\n                      {[3, 5, 10, 25, 50, 100].map((pgSize) => (\n                        <option key={pgSize} value={pgSize}>\n                          Show {pgSize}\n                        </option>\n                      ))}\n                    </select>\n                  </div>\n                </div>\n              </td>\n            </tr>\n          </tfoot>\n        </table>\n      )}\n    </div>\n  );\n}\n\nexport default DataPagination;\n","// @ts-nocheck\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  useGlobalFilter,\n  usePagination,\n  useSortBy,\n  useTable,\n} from 'react-table';\nimport DataPagination from './DataPagination';\n\ninterface TableData {\n  data: [any];\n  columns: any;\n  title: string;\n}\n\nfunction DataTable({ data, columns, title }: TableData) {\n  // const sortedData = React.useMemo(() => [...data], []);\n  const sortedColumns = React.useMemo(() => [...columns], [columns]);\n  const sortedData = data;\n  // const sortedColumns = columns;\n  const TableInstance = useTable(\n    { data: sortedData, columns: sortedColumns, initialState: { pageSize: 3 } },\n\n    useGlobalFilter,\n    useSortBy,\n    usePagination,\n  );\n  const { t } = useTranslation();\n\n  const {\n    getTableProps,\n\n    setGlobalFilter,\n    getTableBodyProps,\n    page,\n    nextPage,\n    previousPage,\n    canPreviousPage,\n    canNextPage,\n    gotoPage,\n    pageCount,\n    setPageSize,\n    pageOptions,\n    headerGroups,\n    prepareRow,\n    state,\n  } = TableInstance;\n  // @ts-ignore\n  const { globalFilter, pageIndex, pageSize } = state;\n\n  return (\n    <div className=\"bg-white dark:bg-dark-bg shadow-lg px-5 py-8 rounded-md w-[100%] mx-auto lg:w-[80%] lg:ml-60 mb-10\">\n      <div className=\" flex items-center justify-between pb-6\">\n        <div>\n          <h2 className=\"text-gray-800 dark:text-white font-semibold text-xl\">\n            {t(title)}\n          </h2>\n          {/* <span className=\"text-xs text-gray-600\">Current cohort</span> */}\n          <input\n            defaultValue={globalFilter || ''}\n            placeholder=\"Filter\"\n            className=\"border-gray-300 dark:bg-dark-tertiary dark:text-white border py-2 mt-4 rounded outline-none px-5 font-sans text-xs w-52 md:w-96\"\n            /* istanbul ignore next */\n            onChange={(e) => setGlobalFilter(e.target.value)}\n          />\n        </div>\n      </div>\n      <div style={{ overflowX: 'auto' }}>\n        <table className=\"min-w-full leading-normal\" {...getTableProps()}>\n          <thead>\n            {headerGroups.map((headerGroup) => (\n              <tr {...headerGroup.getHeaderGroupProps()}>\n                {headerGroup.headers.map((column) => (\n                  <th\n                    className={column.isSorted ? 'sort-asc thead' : ' thead'}\n                    {...column.getHeaderProps(column.getSortByToggleProps())}\n                  >\n                    {column.render('Header')}\n                  </th>\n                ))}\n              </tr>\n            ))}\n          </thead>\n          <tbody {...getTableBodyProps()}>\n            {page.map((row) => {\n              prepareRow(row);\n\n              // eslint-disable-next-line operator-linebreak\n              const rowTheme =\n                row.index % 2 !== 0\n                  ? 'bg-light-bg dark:bg-dark-tertiary'\n                  : 'bg-white dark:bg-dark-bg';\n\n              return (\n                <tr className={` ${rowTheme}} `} {...row.getRowProps()}>\n                  {row.cells.map((cell) => (\n                    <td className=\"data-cell\" {...cell.getCellProps()}>\n                      {cell.render('Cell')}\n                    </td>\n                  ))}\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n        <DataPagination\n          pageOptions={pageOptions}\n          canNextPage={canNextPage}\n          gotoPage={gotoPage}\n          columnLength={columns.length}\n          canPreviousPage={canPreviousPage}\n          pageSize={pageSize}\n          setPageSize={setPageSize}\n          previousPage={previousPage}\n          nextPage={nextPage}\n          pageCount={pageCount}\n          pageIndex={pageIndex}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default DataTable;\n","import { gql, useMutation } from '@apollo/client';\nimport React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport Button from '../../components/Buttons';\n\nexport const AddPhase = gql`\nmutation AddPhase(\n  $name: String!\n  $description: String!\n  $orgToken: String!\n) {\n  addPhase(\n    name: $name\n    description: $description\n    orgToken: $orgToken\n  ) {\n    id\n  }\n}\n`;\n\n\nexport default function CreatePhaseModal({\n  createPhaseModel,\n  removeModel,\n  refetch,\n}: {\n  createPhaseModel: boolean;\n  removeModel: Function;\n  refetch: Function;\n}) {\n  const { t } = useTranslation();\n  const {\n    handleSubmit,\n    formState: { errors },\n    reset,\n    setValue,\n    register,\n    control,\n  } = useForm();\n  const [addPhaseMutation, { loading }] = useMutation(AddPhase, {\n    /* istanbul ignore next */\n    onError(error) {\n      toast.error(error.message.toString());\n    },\n    /* istanbul ignore next */\n    onCompleted() {\n      refetch();\n      removeModel();\n    },\n  });\n\n /* istanbul ignore next */\n  async function addPhase(data: any) {\n    /* istanbul ignore next */\n    const newData = { ...data };\n    /* istanbul ignore next */\n    /* istanbul ignore next */\n    Object.keys(newData).forEach((field) => {\n      if (!newData[field] || newData[field] === '') {\n        delete newData[field];\n      }\n    });\n    /* istanbul ignore next */\n    await addPhaseMutation({\n       /* istanbul ignore next */\n      variables: { orgToken: localStorage.getItem('orgToken'),...newData },\n       /* istanbul ignore next */\n      onCompleted() {\n        reset();\n         toast.success(\"Phase Created successful\");\n      },\n    });\n \n  }\n\n  return (\n    <div\n      className={`h-screen w-screen bg-black bg-opacity-30 backdrop-blur-sm absolute flex items-center justify-center px-4 ${\n        createPhaseModel === true ? 'block' : 'hidden'\n      }`}\n    >\n      <div className=\"bg-white dark:bg-dark-bg w-screen md:w-1/2  xl:w-4/12 rounded-lg p-4 pb-8\">\n        <div className=\"card-title w-full flex  flex-wrap justify-center items-center  \">\n          <h3 className=\"font-bold text-sm dark:text-white text-center w-11/12 uppercase\">\n            {t('Add Phase')}\n          </h3>\n          <hr className=\" bg-primary border-b my-3 w-full\" />\n        </div>\n        <div className=\"card-body\">\n          <form className=\" py-3 px-8\">\n            <div className=\"input my-5 h-9 \">\n              <div className=\"grouped-input flex items-center h-full w-full rounded-md\">\n                <input\n                  type=\"text\"\n                  className=\"border border-primary rounded outline-none px-5 dark:bg-dark-frame-bg dark:text-white font-sans text-xs py-2 w-full\"\n                  placeholder={t('name')}\n                  {...register('name', {\n                    required: `${t('The Phase name is required')}`,\n                  })}\n                />\n              </div>\n              {errors?.name && (\n                <p className=\"font-thin text-[12px] text-red-300\">\n                  {errors?.name?.message?.toString()}\n                </p>\n              )}\n            </div>\n\n            <div className=\"input my-5 h-9 \">\n              <div className=\"grouped-input flex items-center h-full w-full rounded-md\">\n                <input\n                  type=\"text\"\n                  className=\"border border-primary py-2 dark:bg-dark-frame-bg dark:text-white rounded outline-none px-5 font-sans text-xs w-full\"\n                  placeholder={t('Description')}\n                  {...register('description', {\n                    required: `${t('The Description is required')}`,\n                  })}\n                />\n              </div>\n              {errors?.description && (\n                <p className=\"font-thin text-[12px] text-red-300\">\n                  {errors?.description?.message?.toString()}\n                </p>\n              )}\n            </div>\n\n            <div className=\"w-full flex justify-between\">\n              <Button\n                variant=\"info\"\n                size=\"sm\"\n                style=\"w-[30%] md:w-1/4 text-sm font-sans\"\n                data-testid=\"remove\"\n                onClick={() => {\n                  removeModel();\n\n                /* istanbul ignore next */\n                  reset();\n                }}\n                disabled={loading}\n              >\n                {' '}\n                {t('cancel')}\n              </Button>\n              <Button\n                variant=\"primary\"\n                size=\"sm\"\n                style=\"w-[30%] md:w-1/4 text-sm font-sans p-0\"\n                /* istanbul ignore next */\n                onClick={handleSubmit(addPhase)}\n                loading={loading}\n              >\n                {' '}\n                {t('save')}\n              </Button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}","import { gql, useMutation } from '@apollo/client';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport Button from '../../components/Buttons';\nimport { Phase } from './Phases';\n\nexport const DeletePhase = gql`\n    mutation DeletePhase($deletePhaseId: ID!, $orgToken: String) {\n    deletePhase(id: $deletePhaseId, orgToken: $orgToken) {\n      id\n    }\n  }\n`;\n\n\n\nexport default function DeletePhaseModal({\n  deletePhaseModal,\n  currentPhase,\n  removeModel,\n  refetch,\n}: {\n  deletePhaseModal: boolean;\n  currentPhase: Phase | undefined;\n  removeModel: Function;\n  refetch: Function;\n}) {\n  const { t } = useTranslation();\n  const [deletePhaseMutation, { loading }] = useMutation(DeletePhase, {\n    onError(error) {\n      /* istanbul ignore next */\n      removeModel();\n      toast.error(error.message.toString());\n    },\n    onCompleted() {\n      /* istanbul ignore next */\n      refetch();\n      removeModel();\n      toast.success(\"Phase deleted successfully\");\n    },\n  });\n  const orgToken = localStorage.getItem('orgToken');\n\n  async function deletePhase() {\n    const data: any = {};\n\n    data.deletePhaseId = currentPhase?.id;\n    orgToken && (data.orgToken = orgToken);\n\n    await deletePhaseMutation({ variables: data });\n      \n  }\n\n  return (\n    <div\n      className={`h-screen w-screen bg-black fixed bg-opacity-30 backdrop-blur-sm flex items-center justify-center z-50 overflow-auto mt-10 p-4 ${\n        deletePhaseModal === true ? 'block' : 'hidden'\n      }`}\n    >\n      <div className=\"bg-white dark:bg-dark-bg w-screen md:w-1/2  xl:w-4/12 rounded-lg p-4 pb-8\">\n        <div className=\"card-title w-full flex  flex-wrap justify-center items-center  \">\n          <h3 className=\"font-bold text-xl dark:text-white text-center w-11/12\">\n            {t('Delete Phase')}\n          </h3>\n          <hr className=\" bg-primary border-b my-3 w-full\" />\n        </div>\n        <div className=\"card-body\">\n          <form className=\" py-3 px-8\">\n            <div>\n              <h2 className=\"text-base dark:text-white text-center m-4\">\n                {t('do you really want to remove this Phase?')}\n              </h2>\n            </div>\n            <div className=\"w-full flex justify-between\">\n              <Button\n                variant=\"info\"\n                size=\"sm\"\n                style=\"w-[30%] md:w-1/4 text-sm font-sans\"\n                data-testid=\"delete\"\n                onClick={() => removeModel()}\n              >\n                {t('Cancel')}\n              </Button>\n              <Button\n                variant=\"danger\"\n                size=\"sm\"\n                style=\"w-[30%] md:w-1/4 text-sm font-sans\"\n                data-testid=\"confirmDeleteBtn\"\n                onClick={() => {\n                  deletePhase();\n                }}\n              >\n                {t('Delete')}\n              </Button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { gql, useQuery } from '@apollo/client';\nimport { Icon } from '@iconify/react';\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Button from '../../components/Buttons';\nimport DataTable from '../../components/DataTable';\nimport useDocumentTitle from '../../hook/useDocumentTitle';\nimport CreatephaseModal from './CreatePhaseModal';\nimport UpdatePhaseModal from './UpdatePhaseModal';\nimport DeletePhaseModal from './DeletePhaseModal';\nimport { PartialUser } from './Cohorts';\n\n\nexport interface Phase {\n  id: string;\n  name: string;\n  description: string;\n}\n\nexport const getAllPhases = gql`\nquery Query($orgToken: String!) {\n  getAllPhases(orgToken: $orgToken) {\n    description\n    name\n    id\n  }\n}\n`;\n\nfunction ActionButtons({\n  getData,\n  setCurrentPhase,\n  setUpdatePhaseModal,\n  setDeletePhaseModal,\n  ...props\n}: any) {\n  return (\n    <div className=\"flex relative flex-row align-middle items-center\">\n      <div\n        data-testid=\"updateIcon\"\n        onClick={() => {\n          const phase = getData?.getAllPhases[props.row.index];\n          setCurrentPhase(phase);\n          setUpdatePhaseModal(true);\n        }}\n      >\n        <Icon\n          icon=\"el:file-edit-alt\"\n          className=\"mr-2\"\n          width=\"25\"\n          height=\"25\"\n          cursor=\"pointer\"\n          color=\"#148fb6\"\n        />\n      </div>\n      <div\n        data-testid=\"deleteIcon\"\n        onClick={() => {\n          const phase = getData?.getAllPhases[props.row.index];\n          setCurrentPhase(phase);\n          setDeletePhaseModal(true);\n        }}\n      >\n        <Icon\n          icon=\"mdi:close-circle-outline\"\n          width=\"30\"\n          height=\"30\"\n          cursor=\"pointer\"\n          color=\"#148fb6\"\n        />\n      </div>\n    </div>\n  );\n}\n\nfunction AdminPhases() {\n  const { t } = useTranslation();\n\n  const {\n    data: getData,\n    loading: getLoading,\n    refetch: getRefetch,\n  }: {\n    data?: {\n      getAllPhases: Phase[];\n      getAllUsers: PartialUser[];\n    };\n    loading: boolean;\n    error?: any;\n    refetch: Function;\n  } = useQuery(getAllPhases, {\n    variables: {\n      orgToken: localStorage.getItem('orgToken'),\n    },\n  });\n\n  const [createPhaseModel, setCreatePhaseModel] = useState(false);\n  const [updatePhaseModal, setUpdatePhaseModal] = useState(false);\n  const [deletePhaseModal, setDeletePhaseModal] = useState(false);\n  const [currentPhase, setCurrentPhase] = useState<Phase | undefined>(\n    undefined,\n  );\n  useDocumentTitle('Phase');\n\n  const phaseListColumns = [\n    { Header: t('name'), accessor: 'name' },\n    { Header: t('Description'), accessor: 'description' },\n    {\n      Header: t('Actions'),\n      accessor: '',\n      Cell: (props: any) =>\n        ActionButtons({\n          getData,\n          setCurrentPhase,\n          setUpdatePhaseModal,\n          setDeletePhaseModal,\n          ...props,\n        }),\n    },\n  ];\n\n  const phaseListData = getData\n    ? getData.getAllPhases.map(\n        ({\n          name,\n          description,\n        }) => ({\n          name,\n          description,\n        }),\n      )\n    : [{}];\n\n  const removeModel = () => {\n    const newState = !createPhaseModel;\n    setCreatePhaseModel(newState);\n  };\n\n  return (\n    <>\n      {/* =========================== Start:: CreatePhaseModel =============================== */}\n      <CreatephaseModal\n        createPhaseModel={createPhaseModel}\n        removeModel={removeModel}\n        refetch={getRefetch}\n      />\n\n      <UpdatePhaseModal\n        data={getData}\n        UpdatePhaseModal={updatePhaseModal}\n        currentPhase={currentPhase}\n        removeModel={() => {\n          setUpdatePhaseModal(false);\n        }}\n        refetch={getRefetch}\n      />\n\n      <DeletePhaseModal\n        deletePhaseModal={deletePhaseModal}\n        currentPhase={currentPhase}\n        removeModel={() => {\n          setDeletePhaseModal(false);\n        }}\n        refetch={getRefetch}\n      />\n\n      {/* =========================== End::  CreatePhaseModel =============================== */}\n\n      <div className=\"bg-light-bg dark:bg-dark-frame-bg min-h-screen overflow-y-auto overflow-x-hidden\">\n        <div className=\"flex items-right px-7 lg:px-60 pt-24 pb-8\">\n          <div className=\"space-x-8 lg:ml-10\">\n            <Button\n              variant=\"primary\"\n              size=\"lg\"\n              onClick={removeModel}\n              data-testid=\"removeModel\"\n            >\n              {' '}\n              {t('Phase')} {'  '}+\n            </Button>\n          </div>\n        </div>\n        <div className=\"px-3 md:px-8\">\n          {!getLoading && (\n            <DataTable\n              data={phaseListData as [any]}\n              columns={phaseListColumns}\n              title=\"Phase list\"\n            />\n          )}\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default AdminPhases;\n","import { gql, useMutation } from '@apollo/client';\nimport React, { useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport Button from '../../components/Buttons';\nimport { PartialUser } from './Cohorts';\nimport { Phase } from './Phases';\n\n\nexport const UpdatePhase = gql`\nmutation UpdatePhase(\n    $updatePhaseId: ID!, \n    $orgToken: String, \n    $name: String, \n    $description: String\n    ) {\n    updatePhase(\n        id: $updatePhaseId, \n        orgToken: $orgToken, \n        name: $name, \n        description: $description\n    ) {\n      id\n    }\n  }\n`;\n\nexport default function UpdatePhaseModal({\n  data,\n  UpdatePhaseModal,\n  currentPhase,\n  removeModel,\n  refetch,\n}: {\n  data?: {\n    getAllPhases: Phase[];\n    getAllUsers: PartialUser[];\n  };\n  UpdatePhaseModal: boolean;\n  currentPhase: Phase | undefined;\n  removeModel: Function;\n  refetch: Function;\n}) {\n  const { t } = useTranslation();\n  const {\n    handleSubmit,\n    formState: { errors },\n    reset,\n    control,\n    register,\n    setValue,\n  } = useForm();\n  /* istanbul ignore next */\n\n  const [updatePhaseMutation, { loading }] = useMutation(UpdatePhase, {\n    onError(error) {\n      toast.error(error.message.toString());\n    },\n    onCompleted() {\n      refetch();\n      removeModel();\n      \n     toast.success(\"Phase Updated successful\");\n\n    },\n  });\n\n  const orgToken = localStorage.getItem('orgToken');\n   /* istanbul ignore next */\n  const managers = data?.getAllUsers?.filter((user) => user.role === 'manager');\n /* istanbul ignore next */\n  async function updatePhase(data: any) {\n   /* istanbul ignore next */\n    const newData = { ...data };\n      /* istanbul ignore next */\n    newData.managerEmail && (newData.managerEmail = newData.managerEmail.value);\n    /* istanbul ignore next */\n    Object.keys(newData).forEach((field) => {\n      if (!newData[field] || newData[field] === '') {\n        delete newData[field];\n      }\n    });\n    /* istanbul ignore next */\n    newData.updatePhaseId = currentPhase?.id;\n     /* istanbul ignore next */\n    orgToken && (newData.orgToken = orgToken);\n    /* istanbul ignore next */\n    await updatePhaseMutation({ variables: newData });\n  }\n\n  useEffect(() => {\n    setValue('name', currentPhase?.name);\n    setValue('description', currentPhase?.description);\n  }, [currentPhase, UpdatePhaseModal]);\n\n  return (\n    <div\n      className={`h-screen w-screen bg-black fixed bg-opacity-30 backdrop-blur-sm flex items-center justify-center z-50 overflow-auto mt-10 p-4 ${\n        UpdatePhaseModal === true ? 'block' : 'hidden'\n      }`}\n    >\n      <div className=\"bg-white dark:bg-dark-bg w-screen md:w-1/2  xl:w-4/12 rounded-lg p-4 pb-8\">\n        <div className=\"card-title w-full flex  flex-wrap justify-center items-center  \">\n          <h3 className=\"font-bold text-sm dark:text-white text-center w-11/12 uppercase\">\n            {t('Update Phase')}\n          </h3>\n          <hr className=\" bg-primary border-b my-3 w-full\" />\n        </div>\n        <div className=\"card-body\">\n          <form className=\" py-3 px-8\">\n            <div className=\"input my-5 h-9 \">\n              <div className=\"grouped-input flex items-center h-full w-full rounded-md\">\n                <input\n                  type=\"text\"\n                  className=\"border border-primary rounded outline-none px-5 dark:bg-dark-frame-bg dark:text-white font-sans text-xs py-2 w-full\"\n                  placeholder={t('name')}\n                  {...register('name')}\n                />\n              </div>\n              {errors?.name && (\n                <p className=\"font-thin text-[12px] text-red-300\">\n                  {errors?.name?.message?.toString()}\n                </p>\n              )}\n            </div>\n            <div className=\"input my-5 h-9 \">\n              <div className=\"grouped-input flex items-center h-full w-full rounded-md\">\n                <input\n                  type=\"text\"\n                  className=\"border border-primary py-2 dark:bg-dark-frame-bg dark:text-white rounded outline-none px-5 font-sans text-xs w-full\"\n                  placeholder={t('Description')}\n                  {...register('description', {\n                    required: `${t('The Description is required')}`,\n                  })}\n                />\n              </div>\n              {errors?.description && (\n                <p className=\"font-thin text-[12px] text-red-300\">\n                  {errors?.description?.message?.toString()}\n                </p>\n              )}\n            </div>\n            <div className=\"w-full flex justify-between\">\n              <Button\n                variant=\"info\"\n                size=\"sm\"\n                style=\"w-[30%] md:w-1/4 text-sm font-sans\"\n                data-testid=\"remove\"\n                 /* istanbul ignore next */\n                onClick={() => {\n                   /* istanbul ignore next */\n                  removeModel();\n                  reset();\n                }}\n                disabled={loading}\n              >\n                {' '}\n                {t('cancel')}\n              </Button>\n              <Button\n                variant=\"primary\"\n                size=\"sm\"\n                style=\"w-[30%] md:w-1/4 text-sm font-sans p-0\"\n                onClick={handleSubmit(updatePhase)}\n                loading={loading}\n                data-testid=\"confirmUpdateBtn\"\n              >\n                {' '}\n                {t('save')}\n              </Button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"sourceRoot":""}