{"version":3,"file":"src_pages_TraineeRatingDashboard_tsx.js","mappings":";;;;;;;;;;;;;;;AACqC;AAE9B,MAAM,aAAa,GAAG,mDAAG;;;;;;;;;;;;CAY/B;AAED,MAAM,2BAA2B,GAAG,mDAAG;;;;CAItC,CAAC;AACF,iEAAe,2BAA2B,EAAC;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBN;AAE9B,MAAM,WAAW,GAAG,mDAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;CA2B7B,CAAC;AACK,MAAM,gBAAgB,GAAG,mDAAG,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CA6BnC;AACM,MAAM,iBAAiB,GAAG,mDAAG;;;;;;;;;;;;;;;;;;;;;;;;CAwBnC,CAAC;AAEK,MAAM,UAAU,GAAG,mDAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;CA4B5B,CAAC;AAEK,MAAM,aAAa,GAAG,mDAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAiC/B,CAAC;AAEK,MAAM,cAAc,GAAG,mDAAG;;;;;;;;;;;;;;CAchC,CAAC;AAEK,MAAM,aAAa,GAAG,mDAAG;;;;CAI/B,CAAC;AAEK,MAAM,cAAc,GAAG,mDAAG;;;;;;;;;;;;;;;;;;;;;CAqBhC,CAAC;AAEK,MAAM,SAAS,GAAG,mDAAG;;;;;;;;;;;;;;;;;;;;;CAqB3B,CAAC;AAEK,MAAM,6BAA6B,GAAG,mDAAG;;;;;;;CAO/C,CAAC;AAEK,MAAM,gBAAgB,GAAG,mDAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAiClC,CAAC;;;;;;;;;;;;;;;;;;ACrQK,MAAM,KAAK,GAAG;IACnB;QACE,EAAE,EAAE,CAAC;QACL,IAAI,EAAE,QAAQ;KACf;IACD;QACE,EAAE,EAAE,CAAC;QACL,IAAI,EAAE,GAAG;KACV;IACD;QACE,EAAE,EAAE,CAAC;QACL,IAAI,EAAE,GAAG;KACV;IACD;QACE,EAAE,EAAE,CAAC;QACL,IAAI,EAAE,GAAG;KACV;IACD;QACE,EAAE,EAAE,CAAC;QACL,IAAI,EAAE,GAAG;KACV;CACF,CAAC;AAEK,MAAM,MAAM,GAAG;IACpB;QACE,EAAE,EAAE,CAAC;QACL,IAAI,EAAE,aAAa;KACpB;IACD;QACE,EAAE,EAAE,CAAC;QACL,IAAI,EAAE,UAAU;KACjB;IACD;QACE,EAAE,EAAE,CAAC;QACL,IAAI,EAAE,UAAU;KACjB;IACD;QACE,EAAE,EAAE,CAAC;QACL,IAAI,EAAE,UAAU;KACjB;IACD;QACE,EAAE,EAAE,CAAC;QACL,IAAI,EAAE,UAAU;KACjB;CACF,CAAC;AAEK,MAAM,MAAM,GAAG;IACpB;QACE,EAAE,EAAE,CAAC;QACL,IAAI,EAAE,CAAC;KACR;IACD;QACE,EAAE,EAAE,CAAC;QACL,IAAI,EAAE,CAAC;KACR;IACD;QACE,EAAE,EAAE,CAAC;QACL,IAAI,EAAE,CAAC;KACR;IACD;QACE,EAAE,EAAE,CAAC;QACL,IAAI,EAAE,CAAC;KACR;IACD;QACE,EAAE,EAAE,CAAC;QACL,IAAI,EAAE,CAAC;KACR;CACF,CAAC;AAEK,MAAM,MAAM,GAAG;IACpB,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,aAAa,EAAE;IAC9B,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,YAAY,EAAE;IAC7B,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,cAAc,EAAE;IAC/B,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,gBAAgB,EAAE;IACjC,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE;IAC5B,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,eAAe,EAAE;CACjC,CAAC;;;;;;;;;;;;;;;;AC5EmC;AAErC,MAAM,oBAAoB,GAAG,mDAAG;;;;;;;;;;;;CAY/B,CAAC;AACF,iEAAe,oBAAoB,EAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZmC;AACG;AACC;AAC5B;AASS;AACZ;AACD;AACc;AAQ3B;AAC0C;AAEQ;AAC3B;AACL;AACW;AACpB;AACD;AACkB;AACd;AAG1C,SAAS,UAAU,CAAC,GAAG,OAAY;IACjC,0BAA0B;IAC1B,OAAO,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAC3C,CAAC;AAGD,MAAM,sBAAsB,GAAG,GAAG,EAAE;IAClC,MAAM,iBAAiB,GAAG,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;IAE3D,kEAAgB,CAAC,SAAS,CAAC,CAAC;IAC5B,MAAM,EAAE,CAAC,EAAE,GAAG,8DAAc,EAAE,CAAC;IAC/B,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,+CAAQ,CAAC,KAAK,CAAC,CAAC;IACtC,MAAM,CAAC,OAAO,EAAE,UAAU,CAAC,GAAG,+CAAQ,CAAM,EAAE,CAAC,CAAC;IAChD,MAAM,CAAC,OAAO,EAAE,UAAU,CAAC,GAAG,+CAAQ,CAAM,EAAE,CAAC,CAAC;IAChD,MAAM,CAAC,cAAc,EAAE,iBAAiB,CAAC,GAAG,+CAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;IACjE,MAAM,CAAC,YAAY,EAAE,eAAe,CAAC,GAAG,+CAAQ,CAAM,EAAE,CAAC,CAAC;IAC1D,MAAM,CAAC,cAAc,EAAE,iBAAiB,CAAC,GAAG,+CAAQ,CAAC,sDAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IAChE,MAAM,CAAC,UAAU,EAAE,aAAa,CAAC,GAAG,+CAAQ,CAAC,EAAE,UAAU,EAAE,EAAE,EAAE,CAAC,CAAC;IAEjE,MAAM,CAAC,OAAO,EAAE,UAAU,CAAC,GAAG,+CAAQ,CAAC,IAAI,CAAC,CAAC;IAC7C,MAAM,CAAC,UAAU,EAAE,aAAa,CAAC,GAAG,+CAAQ,CAAC;QAC3C,OAAO,EAAE,GAAG;QACZ,aAAa,EAAE,EAAE;QACjB,QAAQ,EAAE,GAAG;QACb,cAAc,EAAE,EAAE;QAClB,YAAY,EAAE,GAAG;QACjB,kBAAkB,EAAE,EAAE;QACtB,SAAS,EAAE,EAAE;QACb,OAAO,EAAE,EAAE;KACZ,CAAC,CAAC;IACH,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,GAAG,+CAAQ,CAAC;QAC/B,OAAO,EAAE,GAAG;QACZ,aAAa,EAAE,EAAE;QACjB,QAAQ,EAAE,GAAG;QACb,cAAc,EAAE,EAAE;QAClB,YAAY,EAAE,GAAG;QACjB,kBAAkB,EAAE,EAAE;QACtB,YAAY,EAAE,EAAE;QAChB,WAAW,EAAE,EAAE;QACf,gBAAgB,EAAE,EAAE;QACpB,MAAM,EAAE,GAAG;QACX,IAAI,EAAE,EAAE;QACR,EAAE,EAAE,EAAE;KACP,CAAC,CAAC;IACH,0BAA0B;IAC1B,IAAI,CAAC,MAAM,EAAE,SAAS,CAAC,GAAG,+CAAQ,CAAC,KAAK,CAAC,CAAC;IAC1C,MAAM,CAAC,WAAW,EAAE,cAAc,CAAC,GAAG,+CAAQ,CAAC,KAAK,CAAC,CAAC;IACtD,MAAM,CAAC,WAAW,EAAE,cAAc,CAAC,GAAG,+CAAQ,CAAC,KAAK,CAAC,CAAC;IACtD,MAAM,CAAC,OAAO,EAAE,UAAU,CAAC,GAAG,+CAAQ,CAAM,EAAE,CAAC,CAAC;IAChD,MAAM,CAAC,QAAQ,EAAE,WAAW,CAAC,GAAG,+CAAQ,CAAM,EAAE,CAAC,CAAC;IAClD,MAAM,CAAC,eAAe,EAAE,kBAAkB,CAAC,GAAG,+CAAQ,CAAM,EAAE,CAAC,CAAC;IAChE,MAAM,CAAC,cAAc,EAAE,iBAAiB,CAAC,GAAG,+CAAQ,CAAM,EAAE,CAAC,CAAC;IAC9D,MAAM,CAAC,eAAe,EAAE,kBAAkB,CAAC,GAAG,+CAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;IACnE,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,+CAAQ,CAAC,EAAE,CAAC,CAAC;IACvC,MAAM,CAAC,MAAM,EAAE,SAAS,CAAC,GAAG,+CAAQ,CAAC,KAAK,CAAC,CAAC;IAC5C,0BAA0B;IAC1B,MAAM,gBAAgB,GACpB,KAAK,KAAK,EAAE;QACV,CAAC,CAAC,OAAO;QACT,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,OAAY,EAAE,EAAE,CAC9B,OAAO,EAAE,KAAK;aACX,WAAW,EAAE;aACb,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC;aACnB,QAAQ,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,CACrD,CAAC;IACR,0BAA0B;IAC1B,MAAM,eAAe,GACnB,KAAK,KAAK,EAAE;QACV,CAAC,CAAC,OAAO;QACT,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,OAAY,EAAE,EAAE,CAC9B,OAAO,EAAE,IAAI;aACV,WAAW,EAAE;aACb,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC;aACnB,QAAQ,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,CACrD,CAAC;IAER,MAAM,UAAU,GAAG,0BAA0B,CAC7C,GAAG,EAAE;QACH,0BAA0B;QAC1B,oBAAoB;QACpB,0BAA0B;QAC1B,cAAc,CAAC,KAAK,CAAC,CAAC;QACtB,0BAA0B;QAC1B,cAAc,CAAC,KAAK,CAAC,CAAC;IACxB,CAAC,CAAC;IACF,MAAM,WAAW,GAAG,GAAG,EAAE;QACvB,0BAA0B;QAC1B,SAAS,CAAC,KAAK,CAAC,CAAC;QACjB,0BAA0B;QAC1B,cAAc,CAAC,KAAK,CAAC,CAAC;QACtB,0BAA0B;QAC1B,cAAc,CAAC,KAAK,CAAC,CAAC;IACxB,CAAC;IACD,MAAM,SAAS,GAAG,GAAG,EAAE;QACrB,SAAS,CAAC,IAAI,CAAC,CAAC;IAClB,CAAC,CAAC;IACF,MAAM,WAAW;IACf,0BAA0B;IAC1B,GAAG,EAAE;IACH,0BAA0B;IAC1B,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC;IACjB,MAAM,YAAY,GAAG,0BAA0B,CAC/C,GAAG,EAAE;QACH,0BAA0B;QAC1B,SAAS,CAAC,CAAC,MAAM,CAAC,CAAC;IACrB,CAAC,CAAC;IAEF,MAAM,YAAY,GAAG,0BAA0B,CAC/C,CAAC,CAAM,EAAE,EAAE;QACT,0BAA0B;QAC1B,CAAC,CAAC,cAAc,EAAE,CAAC;QACnB,0BAA0B;QAC1B,aAAa,EAAE,CAAC;QAChB,0BAA0B;QAC1B,YAAY,EAAE,CAAC;QACf,0BAA0B;IAC5B,CAAC,CAAC;IAEF,MAAM,YAAY,GAAG,CAAC,CAAM,EAAE,EAAE;QAC9B,0BAA0B;QAC1B,CAAC,CAAC,cAAc,EAAE,CAAC;QACnB,0BAA0B;QAC1B,aAAa,EAAE,CAAC;QAChB,0BAA0B;QAC1B,YAAY,EAAE,CAAC;QACf,0BAA0B;QAC1B,UAAU,EAAE,CAAC;IACf,CAAC,CAAC;IACF,MAAM,kBAAkB,GAAG,CAAC,CAAM,EAAE,EAAE;QAClC,0BAA0B;QAC5B,aAAa,CAAC,CAAC,cAAc,EAAE,EAAE;YAC/B,0BAA0B;YAC1B,OAAO;gBACL,GAAG,cAAc;gBACjB,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK;aAChC,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC,CAAC;IACF,MAAM,OAAO,GAAG,eAAe,CAAC;IAChC,0BAA0B;IAE1B,MAAM,OAAO,GAAG;QACd,EAAE,MAAM,EAAE,GAAG,CAAC,CAAC,OAAO,CAAC,EAAE,EAAE,QAAQ,EAAE,aAAa,EAAE;QACpD,EAAE,MAAM,EAAE,GAAG,CAAC,CAAC,OAAO,CAAC,EAAE,EAAE,QAAQ,EAAE,qBAAqB,EAAE;QAC5D,EAAE,MAAM,EAAE,GAAG,CAAC,CAAC,QAAQ,CAAC,EAAE,EAAE,QAAQ,EAAE,QAAQ,EAAE;QAChD,EAAE,MAAM,EAAE,GAAG,CAAC,CAAC,UAAU,CAAC,EAAE,EAAE,QAAQ,EAAE,UAAU,EAAE;QACpD,EAAE,MAAM,EAAE,GAAG,CAAC,CAAC,SAAS,CAAC,EAAE,EAAE,QAAQ,EAAE,SAAS,EAAE;QAClD,EAAE,MAAM,EAAE,GAAG,CAAC,CAAC,qBAAqB,CAAC,EAAE,EAAE,QAAQ,EAAE,qBAAqB,EAAE;QAE1E,EAAE,MAAM,EAAE,GAAG,CAAC,CAAC,SAAS,CAAC,EAAE,EAAE,QAAQ,EAAG,SAAS,EAAE;QACnD;YACE,MAAM,EAAE,GAAG,CAAC,CAAC,SAAS,CAAC,EAAE;YACzB,QAAQ,EAAE,EAAE;YACZ,IAAI,EAAE,CAAC,EAAE,GAAG,EAAO,EAAE,EAAE,CAAC,CACtB,oEAAK,SAAS,EAAC,eAAe;gBAC5B,oEAAK,SAAS,EAAC,gBAAgB;oBAC7B,2DAAC,iDAAI,IACH,IAAI,EAAC,aAAa,EAClB,KAAK,EAAC,SAAS,EACf,OAAO,EAAE,GAAG,EAAE;4BACZ,cAAc,CAAC,CAAC,WAAW,CAAC,CAAC;4BAC7B,OAAO,CAAC;gCACN,GAAG,IAAI;gCACP,OAAO,EAAE,GAAG,CAAC,QAAQ,CAAC,OAAO;gCAC7B,aAAa,EAAE,GAAG,CAAC,QAAQ,CAAC,aAAa;gCACzC,QAAQ,EAAE,GAAG,CAAC,QAAQ,CAAC,QAAQ;gCAC/B,cAAc,EAAE,GAAG,CAAC,QAAQ,CAAC,cAAc;gCAC3C,YAAY,EAAE,GAAG,CAAC,QAAQ,CAAC,mBAAmB;gCAC9C,kBAAkB,EAAE,GAAG,CAAC,QAAQ,CAAC,kBAAkB;gCACnD,MAAM,EAAE,GAAG,CAAC,QAAQ,CAAC,MAAM;gCAC3B,IAAI,EAAE,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK;gCAC7B,EAAE,EAAE,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;6BACzB,CAAC,CAAC;wBAEL,CAAC,GACD,CACE,CACF,CACP;SACF;QACD;YACE,MAAM,EAAE,GAAG,CAAC,CAAC,SAAS,CAAC,EAAE;YACzB,QAAQ,EAAE,EAAE;YACZ,IAAI,EAAE,CAAC,EAAE,GAAG,EAAO,EAAE,EAAE,CAAC,CACtB,oEAAK,SAAS,EAAC,eAAe;gBAC5B,oEAAK,SAAS,EAAC,gBAAgB;oBAC7B,2DAAC,iDAAI,IACH,IAAI,EAAC,6BAA6B,EAClC,KAAK,EAAC,IAAI,EACV,MAAM,EAAC,IAAI,EACX,KAAK,EAAC,SAAS,EACf,OAAO,EAAE,GAAG,EAAE;4BACZ,cAAc,CAAC,CAAC,WAAW,CAAC,CAAC;4BAC7B,cAAc,CAAC,CAAC,WAAW,CAAC,CAAC;4BAC7B,OAAO,CAAC;gCACN,GAAG,IAAI;gCACP,OAAO,EAAE,GAAG,CAAC,QAAQ,CAAC,OAAO;gCAC7B,aAAa,EAAE,GAAG,CAAC,QAAQ,CAAC,aAAa;gCACzC,WAAW,EAAE,GAAG,CAAC,QAAQ,CAAC,WAAW;gCACrC,QAAQ,EAAE,GAAG,CAAC,QAAQ,CAAC,QAAQ;gCAC/B,cAAc,EAAE,GAAG,CAAC,QAAQ,CAAC,cAAc;gCAC3C,YAAY,EAAE,GAAG,CAAC,QAAQ,CAAC,YAAY;gCACvC,YAAY,EAAE,GAAG,CAAC,QAAQ,CAAC,mBAAmB;gCAC9C,kBAAkB,EAAE,GAAG,CAAC,QAAQ,CAAC,kBAAkB;gCACnD,gBAAgB,EAAE,GAAG,CAAC,QAAQ,CAAC,gBAAgB;gCAC/C,MAAM,EAAE,GAAG,CAAC,QAAQ,CAAC,MAAM;gCAC3B,IAAI,EAAE,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK;gCAC7B,EAAE,EAAE,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;6BACzB,CAAC,CAAC;wBACL,CAAC,GACD,CACE,CACF,CACP;SACF;KACF,CAAC;IACF,0BAA0B;IAC1B,MAAM,CAAC,aAAa,CAAC,GAAG,4DAAW,CAAC,0DAAU,EAAE;QAC9C,SAAS,EAAE;YACT,MAAM,EAAE,cAAc,EAAE,EAAE;YAC1B,IAAI,EAAE,UAAU,CAAC,SAAS;YAC1B,MAAM,EAAE,cAAc,CAAC,IAAI;YAC3B,QAAQ,EAAE,UAAU,CAAC,QAAQ,CAAC,QAAQ,EAAE;YACxC,cAAc,EAAE,UAAU,CAAC,cAAc,CAAC,QAAQ,EAAE;YACpD,OAAO,EAAE,UAAU,CAAC,OAAO,CAAC,QAAQ,EAAE;YACtC,aAAa,EAAE,UAAU,CAAC,aAAa,CAAC,QAAQ,EAAE;YAClD,kBAAkB,EAAE,UAAU,CAAC,YAAY,CAAC,QAAQ,EAAE;YACtD,kBAAkB,EAAE,UAAU,CAAC,kBAAkB,CAAC,QAAQ,EAAE;YAC5D,QAAQ,EAAE,iBAAiB;SAC5B;QACD,OAAO,EAAE,CAAC,GAAG,EAAE,EAAE;YACf,iDAAK,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,IAAI,sBAAsB,CAAC,CAAC;YACnD,SAAS,EAAE,CAAC;QACd,CAAC;QACD,WAAW,EAAE,CAAC,EAAE,aAAa,EAAE,EAAE,EAAE;YACjC,YAAY,EAAE,CAAC;YACf,WAAW,EAAE,CAAC;YACd,iDAAK,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC;QACrC,CAAC;KACF,CAAC,CAAC;IACH,0BAA0B;IAC1B,MAAM,CAAC,aAAa,CAAC,GAAG,4DAAW,CAAC,6DAAa,EAAE;QACjD,SAAS,EAAE;YACT,IAAI,EAAE,IAAI,CAAC,EAAE;YACb,MAAM,EAAE,IAAI,CAAC,MAAM;YACnB,QAAQ,EAAE,IAAI,EAAE,QAAQ;YACxB,cAAc,EAAE,IAAI,EAAE,cAAc;YACpC,OAAO,EAAE,IAAI,EAAE,OAAO;YACtB,aAAa,EAAE,IAAI,EAAE,aAAa;YAClC,kBAAkB,EAAE,IAAI,EAAE,YAAY;YACtC,kBAAkB,EAAE,IAAI,EAAE,kBAAkB;YAC5C,QAAQ,EAAE,iBAAiB;SAC5B;QACD,OAAO,EAAE,CAAC,GAAG,EAAE,EAAE;YACf,iDAAK,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,IAAI,sBAAsB,CAAC,CAAC;YACnD,cAAc,CAAC,IAAI,CAAC,CAAC;QACvB,CAAC;QACD,WAAW,EAAE,CAAC,IAAI,EAAE,EAAE;YACpB,iDAAK,CAAC,OAAO,CAAC,uBAAuB,CAAC,CAAC;QACzC,CAAC;KACF,CAAC,CAAC;IACH,MAAM,CAAC,YAAY,CAAC,GAAG,6DAAY,CAAC,iEAAa,EAAE,EAAE,CAAC;IAEtD,MAAM,CAAC,UAAU,CAAC,GAAG,6DAAY,CAAC,2DAAW,EAAE;QAC7C,SAAS,EAAE;YACT,QAAQ,EAAE,iBAAiB;SAC5B;KACF,CAAC,CAAC;IACH,MAAM,CAAC,cAAc,CAAC,GAAG,6DAAY,CAAC,gEAAgB,EAAE;QACtD,SAAS,EAAE;YACT,UAAU,EAAE,cAAc,EAAE,IAAI;SACjC;KACF,CAAC,CAAC;IAGH,yEAAyE;IACzE,iBAAiB;IACjB,iCAAiC;IACjC,wBAAwB;IACxB,MAAM;IACN,QAAQ;IAER,MAAM,CAAC,UAAU,CAAC,GAAG,6DAAY,CAAC,gFAAiB,EAAE;QACnD,SAAS,EAAE;YACT,QAAQ,EAAE,iBAAiB;SAC5B;KACF,CAAC,CAAC;IAEH,MAAM,CAAC,QAAQ,CAAC,GAAG,6DAAY,CAAC,wFAAyB,EAAE;QACzD,SAAS,EAAE;YACT,QAAQ,EAAE,iBAAiB;YAC3B,MAAM,EAAE,UAAU;SACnB;KACF,CAAC,CAAC;IAEH,MAAM,EAAE,IAAI,EAAE,GAAG,yDAAQ,CAAC,4DAAoB,CAAC,CAAC;IAEhD,gDAAS,CAAC,GAAG,EAAE;QACb,UAAU,CAAC;YACT,WAAW,EAAE,cAAc;YAC3B,0BAA0B;YAC1B,WAAW,EAAE,CAAC,IAAI,EAAE,EAAE;gBACpB,0BAA0B;gBAC1B,UAAU,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;YAEjC,CAAC;YACD,OAAO,EAAE,0BAA0B,CACnC,CAAC,KAAK,EAAE,EAAE;gBACR,0BAA0B;gBAC1B,iDAAK,CAAC,KAAK,CAAC,KAAK,EAAE,OAAO,IAAI,yBAAyB,CAAC,CAAC;YAC3D,CAAC;SACF,CAAC,CAAC;QAEH,YAAY,CAAC;YACX,WAAW,EAAE,cAAc;YAC3B,WAAW,EAAE,CAAC,IAAI,EAAE,EAAE;gBACpB,0BAA0B;gBAC1B,iBAAiB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC;YAEtD,CAAC;YACH,OAAO,EAAE,CAAC,KAAK,EAAE,EAAE;gBACjB,0BAA0B;gBACxB,iDAAK,CAAC,KAAK,CAAC,KAAK,EAAE,OAAO,IAAI,yBAAyB,CAAC,CAAC;YAC3D,CAAC;SACF,CAAC;QAEF,UAAU,CAAC;YACT,WAAW,EAAE,cAAc;YAC3B,0BAA0B;YAC1B,WAAW,EAAE,CAAC,IAAI,EAAE,EAAE;gBACpB,0BAA0B;gBAC1B,MAAM,OAAO,GAAG,IAAI,EAAE,UAAU,CAAC;gBACjC,0BAA0B;gBAC1B,IAAI,EAAE,UAAU,EAAE,MAAM,KAAK,CAAC;oBAC5B,CAAC,CAAC,UAAU,CAAC,OAAO,CAAC;oBACrB,CAAC,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;YAC1B,CAAC;YACD,OAAO,EAAE,CAAC,KAAK,EAAE,EAAE;gBACnB,0BAA0B;gBACxB,iDAAK,CAAC,KAAK,CAAC,KAAK,EAAE,OAAO,IAAI,yBAAyB,CAAC,CAAC;YAC3D,CAAC;SACF,CAAC,CAAC;IACL,CAAC,EAAE,CAAC,MAAM,EAAE,aAAa,CAAC,CAAC,CAAC;IAE5B,0BAA0B;IAE1B,MAAM,aAAa,GAAG,IAAI,EAAE,iBAAiB,EAAE,MAAM,CACnD,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,cAAc,CAC7B,CAAC;IAEF,SAAS,iBAAiB;QACxB,0BAA0B;QAC1B,cAAc,CAAC;YACb,WAAW,EAAE,cAAc;YAC3B,WAAW,EAAE,CAAC,IAAI,EAAE,EAAE;gBACpB,0BAA0B;gBAC1B,kBAAkB,CAAC,IAAI,EAAE,mBAAmB,CAAC,CAAC;YAEhD,CAAC;YACD,OAAO,EAAE,CAAC,KAAK,EAAE,EAAE;gBACnB,0BAA0B;gBACxB,iDAAK,CAAC,KAAK,CAAC,KAAK,EAAE,OAAO,IAAI,yBAAyB,CAAC,CAAC;YAC3D,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IAED,OAAO,CACL;QACE,oEAAK,SAAS,EAAC,0DAA0D;YACvE,oEAAK,SAAS,EAAC,eAAe;gBAC5B,2DAAC,2DAAO,IAAC,MAAM,EAAE,WAAW,EAAE,KAAK,EAAC,gBAAgB,GAAG;gBACvD,oEAAK,SAAS,EAAC,QAAQ;oBACrB;wBACE,oEAAK,SAAS,EAAC,gFAAgF;4BAC7F,oEAAK,SAAS,EAAC,yGAAyG;gCAEtH,oEAAK,SAAS,EAAC,4BAA4B;oCACzC,2DAAC,uDAAO,IACN,KAAK,EAAE,cAAc,EACrB,QAAQ;wCACN,0BAA0B;wCAC1B,CAAC,CAAC,EAAE,EAAE;4CACJ,0BAA0B;4CAC1B,iBAAiB,CAAC,CAAC,CAAC,CAAC;4CACrB,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;4CACtB,UAAU,CAAC,KAAK,CAAC,CAAC;4CAClB,QAAQ,CAAC;gDACP,WAAW,EAAE,cAAc;gDAC3B,0BAA0B;gDAC1B,WAAW,EAAE,CAAC,IAAI,EAAE,EAAE;oDAClB,UAAU,CAAC,IAAI,EAAE,iBAAiB,CAAC;oDACrC,0BAA0B;gDAE5B,CAAC;gDACD,OAAO,EAAE,0BAA0B,CACnC,CAAC,KAAK,EAAE,EAAE;oDACR,0BAA0B;oDAC1B,iDAAK,CAAC,KAAK,CACT,KAAK,EAAE,OAAO,IAAI,sBAAsB,CACzC,CAAC;gDACJ,CAAC;6CACF,CAAC,CAAC;4CACH,iBAAiB,EAAE;wCACrB,CAAC,IAGF,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,CACb;wCACE,2DAAC,uDAAO,CAAC,KAAK,IAAC,SAAS,EAAC,uEAAuE,IAC7F,CAAC,CAAC,QAAQ,CAAC,CACE;wCAChB,oEAAK,SAAS,EAAC,eAAe;4CAC5B,2DAAC,uDAAO,CAAC,MAAM,IACb,SAAS,EAAC,2MAA2M,iBACzM,YAAY;gDAExB,qEAAM,SAAS,EAAC,mBAAmB;oDACjC,qEAAM,SAAS,EAAC,gCAAgC,IAC7C,cAAc,EAAE,IAAI,CAChB,CACF;gDACP,qEAAM,SAAS,EAAC,4EAA4E;oDAC1F,2DAAC,+DAAY,IACX,SAAS,EAAC,oBAAoB,iBAClB,MAAM,GAClB,CACG,CACQ;4CACjB,2DAAC,0DAAU,IACT,IAAI,EAAE,IAAI,EACV,EAAE,EAAE,2CAAQ,EACZ,KAAK,EAAC,iCAAiC,EACvC,SAAS,EAAC,aAAa,EACvB,OAAO,EAAC,WAAW;gDAEnB,2DAAC,uDAAO,CAAC,OAAO,IAAC,SAAS,EAAC,uKAAuK,IAC/L,OAAO,EAAE,GAAG,CAAC,CAAC,MAAW,EAAE,EAAE,CAAC,CAC7B,2DAAC,uDAAO,CAAC,MAAM,IACb,GAAG,EAAE,MAAM,EAAE,EAAE,EACf,SAAS,EAAE,CAAC,EAAE,MAAM,EAAE,EAAE,EAAE,CACxB,UAAU,CACR,MAAM;wDACJ,CAAC,CAAC,uBAAuB;wDACzB,CAAC,CAAC,eAAe,EACnB,oDAAoD,CACrD,EAEH,KAAK,EAAE,MAAM,IAEZ,CAAC,EAAE,QAAQ,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC,CACzB;oDACE,oEAAK,SAAS,EAAC,mBAAmB;wDAChC,qEACE,SAAS,EAAE,UAAU,CACnB,QAAQ;gEACN,CAAC,CAAC,eAAe;gEACjB,CAAC,CAAC,aAAa,EACjB,qBAAqB,CACtB,IAEA,MAAM,EAAE,IAAI,CACR,CACH;oDACL,QAAQ,CAAC,CAAC,CAAC,CACV,qEACE,SAAS,EAAE,UAAU,CACnB,MAAM;4DACJ,CAAC,CAAC,YAAY;4DACd,CAAC,CAAC,cAAc,EAClB,mDAAmD,CACpD;wDAED,2DAAC,+DAAS,IACR,SAAS,EAAC,SAAS,iBACP,MAAM,GAClB,CACG,CACR,CAAC,CAAC,CAAC,IAAI,CACP,CACJ,CACc,CAClB,CAAC,CACc,CACP,CACT,CACL,CACJ,CACO,CACN;gCAIN,oEAAK,SAAS,EAAC,MAAM;oCACnB,uEACE,IAAI,EAAC,QAAQ,EACb,OAAO,EAAE,SAAS,iBACN,iBAAiB,EAC7B,SAAS,EAAC,kMAAkM;wCAE3M,CAAC,CAAC,gBAAgB,CAAC;wCACpB,2DAAC,+DAAQ,IAAC,SAAS,EAAC,UAAU,GAAG,CAC1B,CACL;gCAEN,2DAAC,0DAAU,IACT,MAAM,QACN,IAAI,EAAE,MAAM,EACZ,EAAE,EAAE,2CAAQ,iBACA,kBAAkB;oCAE9B,2DAAC,sDAAM,IACL,EAAE,EAAC,KAAK,EACR,SAAS,EAAC,eAAe,EACzB,OAAO,EAAE,UAAU;wCAEnB,2DAAC,0DAAU,CAAC,KAAK,IACf,EAAE,EAAE,2CAAQ,EACZ,KAAK,EAAC,uBAAuB,EAC7B,SAAS,EAAC,WAAW,EACrB,OAAO,EAAC,aAAa,EACrB,KAAK,EAAC,sBAAsB,EAC5B,SAAS,EAAC,aAAa,EACvB,OAAO,EAAC,WAAW;4CAEnB,oEAAK,SAAS,EAAC,sCAAsC,GAAG,CACvC;wCACnB,oEAAK,SAAS,EAAC,+BAA+B;4CAC5C,oEAAK,SAAS,EAAC,8DAA8D;gDAC3E,2DAAC,0DAAU,CAAC,KAAK,IACf,EAAE,EAAE,2CAAQ,EACZ,KAAK,EAAC,uBAAuB,EAC7B,SAAS,EAAC,oBAAoB,EAC9B,OAAO,EAAC,uBAAuB,EAC/B,KAAK,EAAC,sBAAsB,EAC5B,SAAS,EAAC,uBAAuB,EACjC,OAAO,EAAC,oBAAoB;oDAE5B,2DAAC,sDAAM,CAAC,KAAK,IAAC,SAAS,EAAC,mKAAmK;wDACzL,qEAAM,QAAQ,EAAE,YAAY;4DAC1B,2DAAC,sDAAM,CAAC,KAAK,IACX,EAAE,EAAC,IAAI,EACP,SAAS,EAAC,sEAAsE,IAE/E,CAAC,CAAC,wBAAwB,CAAC,CACf;4DAEf,oEAAK,SAAS,EAAC,iCAAiC;gEAC9C,2DAAC,wDAAQ,IACP,KAAK,EAAE,YAAY,EACnB,QAAQ,EAAE,CAAC,CAAC,EAAE,EAAE;wEACd,0BAA0B;wEAC1B,eAAe,CACd,CAAC,CACD;wEACD,0BAA0B;wEAC1B,aAAa,CAAC;4EACZ,GAAG,UAAU;4EACb,SAAS,EAAE,CAAC,CAAC,EAAE;yEAChB,CAAC,CAAC;oEACL,CAAC,iBACW,eAAe;oEAE3B,oEAAK,SAAS,EAAC,wCAAwC;wEACrD,2DAAC,wDAAQ,CAAC,KAAK,IAAC,SAAS,EAAC,0BAA0B,IACjD,CAAC,CAAC,SAAS,CAAC,CACE;wEACjB,oEAAK,SAAS,EAAC,uBAAuB;4EACpC,oEAAK,SAAS,EAAC,2MAA2M;gFACxN,2DAAC,wDAAQ,CAAC,KAAK,IACb,SAAS,EAAC,gJAAgJ,EAC1J,YAAY,EAAE,CAAC,OAAY,EAAE,EAAE,CAC7B,OAAO,EAAE,KAAK,EAEhB,QAAQ,EAAE,CAAC,KAAK,EAAE,EAAE,CAClB,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,iBAElB,mBAAmB,GAC/B;gFACF,2DAAC,wDAAQ,CAAC,MAAM,IACd,SAAS,EAAC,mDAAmD,iBACjD,aAAa;oFAEzB,2DAAC,+DAAY,IACX,SAAS,EAAC,oBAAoB,iBAClB,MAAM,GAClB,CACc,CACd;4EACN,2DAAC,0DAAU,IACT,EAAE,EAAE,2CAAQ,EACZ,KAAK,EAAC,iCAAiC,EACvC,SAAS,EAAC,aAAa,EACvB,OAAO,EAAC,WAAW,EACnB,UAAU,EAAE,GAAG,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC;gFAE9B,2DAAC,wDAAQ,CAAC,OAAO,IAAC,SAAS,EAAC,sKAAsK;oFAChM,2DAAC,wDAAQ,CAAC,MAAM,IACd,GAAG,EAAE,OAAO,CAAC,EAAE,EACf,SAAS,EAAE,+EAA+E,EAC1F,KAAK,EAAE,OAAO,CAAC,EAAE,EACjB,QAAQ,EAAE,IAAI;wFAEd,qEACE,SAAS,EAAE,4BAA4B,IAEtC,CAAC,CAAC,gBAAgB,CAAC,CACf,CACS;oFACjB,gBAAgB,EAAE,MAAM,KAAK,CAAC;wFAC/B,KAAK,KAAK,EAAE,CAAC,CAAC,CAAC,CACb,oEACE,SAAS,EAAC,6DAA6D,iBAC3D,aAAa,IAExB,CAAC,CAAC,mBAAmB,CAAC,CACnB,CACP,CAAC,CAAC,CAAC,CACF,gBAAgB,EAAE,GAAG,CACnB,CAAC,OAAY,EAAE,EAAE,CAAC,CAChB,2DAAC,wDAAQ,CAAC,MAAM,mBACF,eAAe,EAC3B,GAAG,EAAE,OAAO,EAAE,EAAE,EAChB,SAAS,EAAE,CAAC,EAAE,MAAM,EAAE,EAAE,EAAE,CACxB,uDACE,MAAM;4FACJ,CAAC,CAAC,uBAAuB;4FACzB,CAAC,CAAC,eACN,EAAE,EAEJ,KAAK,EAAE,OAAO,IAEb,CAAC,EAAE,QAAQ,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC,CACzB;wFACE,qEACE,SAAS,EAAE,kBACT,QAAQ;gGACN,CAAC,CAAC,aAAa;gGACf,CAAC,CAAC,aACN,EAAE,IAED,OAAO,EAAE,KAAK,CACV;wFACN,QAAQ,CAAC,CAAC,CAAC,CACV,qEACE,SAAS,EAAE,oDACT,MAAM;gGACJ,CAAC,CAAC,YAAY;gGACd,CAAC,CAAC,cACN,EAAE;4FAEF,2DAAC,+DAAS,IACR,SAAS,EAAC,SAAS,iBACP,MAAM,GAClB,CACG,CACR,CAAC,CAAC,CAAC,IAAI,CACP,CACJ,CACe,CACnB,CACF,CACF,CACgB,CACR,CACT,CACF,CACG;gEAMX,oEAAK,SAAS,EAAC,gDAAgD;oEAC7D,2DAAC,uDAAO,IACN,KAAK,EAAE,cAAc,EACrB,QAAQ,EAAE,iBAAiB,IAE1B,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,CACb;wEACE,2DAAC,uDAAO,CAAC,KAAK,IAAC,SAAS,EAAC,8BAA8B,IACpD,CAAC,CAAC,SAAS,CAAC,CACC;wEAChB,oEAAK,SAAS,EAAC,sBAAsB;4EACnC,2DAAC,uDAAO,CAAC,MAAM,mBACD,YAAY,EACxB,SAAS,EAAC,+LAA+L;gFAEzM,qEAAM,SAAS,EAAC,mBAAmB;oFACjC,qEAAM,SAAS,EAAC,gCAAgC,IAC7C,cAAc,CAAC,IAAI,CACf,CACF;gFACP,qEAAM,SAAS,EAAC,4EAA4E;oFAC1F,2DAAC,+DAAY,IACX,SAAS,EAAC,oBAAoB,iBAClB,MAAM,GAClB,CACG,CACQ;4EACjB,2DAAC,0DAAU,IACT,IAAI,EAAE,IAAI,EACV,EAAE,EAAE,2CAAQ,EACZ,KAAK,EAAC,iCAAiC,EACvC,SAAS,EAAC,aAAa,EACvB,OAAO,EAAC,WAAW;gFAEnB,2DAAC,uDAAO,CAAC,OAAO,IAAC,SAAS,EAAC,8JAA8J,IACtL,sDAAM,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,CACtB,2DAAC,uDAAO,CAAC,MAAM,IACb,GAAG,EAAE,MAAM,CAAC,EAAE,EACd,SAAS,EAAE,CAAC,EAAE,MAAM,EAAE,EAAE,EAAE,CACxB,UAAU,CACR,MAAM;wFACJ,CAAC,CAAC,uBAAuB;wFACzB,CAAC,CAAC,eAAe,EACnB,oDAAoD,CACrD,EAEH,KAAK,EAAE,MAAM,IAEZ,CAAC,EAAE,QAAQ,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC,CACzB;oFACE,oEAAK,SAAS,EAAC,mBAAmB;wFAChC,qEACE,SAAS,EAAE,UAAU,CACnB,QAAQ;gGACN,CAAC,CAAC,eAAe;gGACjB,CAAC,CAAC,aAAa,EACjB,qBAAqB,CACtB,IAEA,MAAM,CAAC,IAAI,CACP,CACH;oFACL,QAAQ,CAAC,CAAC,CAAC,CACV,qEACE,SAAS,EAAE,UAAU,CACnB,MAAM;4FACJ,CAAC,CAAC,YAAY;4FACd,CAAC,CAAC,cAAc,EAClB,mDAAmD,CACpD;wFAED,2DAAC,+DAAS,IACR,SAAS,EAAC,SAAS,iBACP,MAAM,GAClB,CACG,CACR,CAAC,CAAC,CAAC,IAAI,CACP,CACJ,CACc,CAClB,CAAC,CACc,CACP,CACT,CACL,CACJ,CACO,CACN,CAGF;4DAEN,oEAAK,SAAS,EAAC,8FAA8F;gEAC3G,oEAAK,SAAS,EAAC,gFAAgF;oEAC7F,2DAAC,2DAAM,IACL,OAAO,EAAC,SAAS,EACjB,IAAI,EAAC,IAAI,EACT,KAAK,EAAC,oFAAoF,IAEzF,CAAC,CAAC,UAAU,CAAC,CACP;oEACT,oEAAK,SAAS,EAAC,6DAA6D;wEAC1E,uEACE,IAAI,EAAC,SAAS,EACd,KAAK,EAAE,UAAU,CAAC,OAAO,EACzB,QAAQ,EAAE,CAAC,CAAC,EAAE,EAAE,CACd,aAAa,CAAC;gFACZ,GAAG,UAAU;gFACb,OAAO,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK;6EACxB,CAAC,EAEJ,EAAE,EAAC,eAAe,EAClB,SAAS,EAAC,iRAAiR;4EAE3R,uEAAQ,KAAK,EAAC,IAAI,EAAC,QAAQ,UACxB,CAAC,CAAC,eAAe,CAAC,CACZ;4EACT,0HACC,cAAc,EAAE,GAAG,CAClB,CAAC,KAAU,EAAE,EAAE,CAAC,2EAAS,KAAK,CAAU,CACzC,CACE,CACI,CACL;oEACN,yEACE,QAAQ,EAAE,CAAC,CAAC,EAAE,EAAE,CACd,aAAa,CAAC;4EACZ,GAAG,UAAU;4EACb,aAAa,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK;yEAC9B,CAAC,EAEJ,EAAE,EAAC,EAAE,EACL,IAAI,EAAE,CAAC,EACP,SAAS,EAAC,sMAAsM,EAChN,WAAW,EAAE,CAAC,CAAC,wBAAwB,CAAC,EACxC,IAAI,EAAC,oBAAoB,iBACb,4BAA4B,GACxC,CACE;gEACN,oEAAK,SAAS,EAAC,iFAAiF;oEAC9F,2DAAC,2DAAM,IACL,OAAO,EAAC,SAAS,EACjB,IAAI,EAAC,IAAI,EACT,KAAK,EAAC,oFAAoF,IAEzF,CAAC,CAAC,UAAU,CAAC,CACP;oEACT,oEAAK,SAAS,EAAC,6DAA6D;wEAE1E,uEACE,IAAI,EAAC,UAAU,EACf,EAAE,EAAC,gBAAgB,EACnB,KAAK,EAAE,UAAU,CAAC,QAAQ,EAC1B,QAAQ,EAAE,CAAC,CAAC,EAAE,EAAE,CACd,aAAa,CAAC;gFACZ,GAAG,UAAU;gFACb,QAAQ,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK;6EACzB,CAAC,EAEJ,SAAS,EAAC,iRAAiR;4EAG3R,uEAAQ,KAAK,EAAC,IAAI,EAAC,QAAQ,UACxB,CAAC,CAAC,eAAe,CAAC,CAEZ;4EACT,0HACC,cAAc,EAAE,GAAG,CAClB,CAAC,KAAU,EAAE,EAAE,CAAC,2EAAS,KAAK,CAAU,CACzC,CACE,CACI,CACL;oEACN,yEACE,IAAI,EAAC,qBAAqB,EAC1B,EAAE,EAAC,EAAE,EACL,QAAQ,EAAE,CAAC,CAAC,EAAE,EAAE,CACd,aAAa,CAAC;4EACZ,GAAG,UAAU;4EACb,cAAc,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK;yEAC/B,CAAC,EAEJ,IAAI,EAAE,CAAC,EACP,SAAS,EAAC,uMAAuM,EACjN,WAAW,EAAE,CAAC,CAAC,wBAAwB,CAAC,GACxC,CACE;gEACN,oEAAK,SAAS,EAAC,gFAAgF;oEAC7F,2DAAC,2DAAM,IACL,OAAO,EAAC,SAAS,EACjB,IAAI,EAAC,IAAI,EACT,KAAK,EAAC,oFAAoF,IAEzF,CAAC,CAAC,iBAAiB,CAAC,CACd;oEACT,oEAAK,SAAS,EAAC,6DAA6D;wEAC1E,uEACE,IAAI,EAAC,cAAc,EACnB,EAAE,EAAC,eAAe,EAClB,KAAK,EAAE,UAAU,CAAC,YAAY,EAC9B,QAAQ,EAAE,kBAAkB,EAC5B,SAAS,EAAC,iRAAiR;4EAE3R,uEAAQ,KAAK,EAAC,IAAI,EAAC,QAAQ,UACxB,CAAC,CAAC,eAAe,CAAC,CACZ;4EACT,0HACC,cAAc,EAAE,GAAG,CAClB,CAAC,KAAU,EAAE,EAAE,CAAC,2EAAS,KAAK,CAAU,CACzC,CACE,CACI,CACL;oEACN,yEACE,IAAI,EAAC,0BAA0B,EAC/B,EAAE,EAAC,EAAE,EACL,QAAQ,EAAE,CAAC,CAAC,EAAE,EAAE,CACd,aAAa,CAAC;4EACZ,GAAG,UAAU;4EACb,kBAAkB,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK;yEACnC,CAAC,EAEJ,IAAI,EAAE,CAAC,EACP,SAAS,EAAC,sMAAsM,EAChN,WAAW,EAAE,CAAC,CACZ,4BAA4B,CAC7B,GACD,CACE,CACF;4DACN,oEAAK,SAAS,EAAC,cAAc;gEAC3B,uEACE,IAAI,EAAC,QAAQ,EACb,SAAS,EAAC,yOAAyO,EACnP,OAAO,EAAE,WAAW,IAEnB,CAAC,CAAC,QAAQ,CAAC,CACL;gEACT,uEACE,IAAI,EAAC,QAAQ,EACb,SAAS,EAAC,qPAAqP,EAC/P,OAAO,EAAE,UAAU,EACnB,QAAQ,EAAE,OAAO,IAEhB,CAAC,CAAC,cAAc,CAAC,CACX,CACL,CACD,CACM,CACE,CACf,CACF,CACC,CACE;gCAIb,2DAAC,0DAAU,IACT,MAAM,QACN,IAAI,EAAE,WAAW,EACjB,EAAE,EAAE,2CAAQ,iBACA,kBAAkB;oCAE9B,2DAAC,sDAAM,IACL,EAAE,EAAC,KAAK,EACR,SAAS,EAAC,eAAe,EACzB,OAAO,EAAE,UAAU;wCAEnB,2DAAC,0DAAU,CAAC,KAAK,IACf,EAAE,EAAE,2CAAQ,EACZ,KAAK,EAAC,uBAAuB,EAC7B,SAAS,EAAC,WAAW,EACrB,OAAO,EAAC,aAAa,EACrB,KAAK,EAAC,sBAAsB,EAC5B,SAAS,EAAC,aAAa,EACvB,OAAO,EAAC,WAAW;4CAEnB,oEAAK,SAAS,EAAC,sCAAsC,GAAG,CACvC;wCACnB,oEAAK,SAAS,EAAC,+BAA+B;4CAC5C,oEAAK,SAAS,EAAC,8DAA8D;gDAC3E,2DAAC,0DAAU,CAAC,KAAK,IACf,EAAE,EAAE,2CAAQ,EACZ,KAAK,EAAC,uBAAuB,EAC7B,SAAS,EAAC,oBAAoB,EAC9B,OAAO,EAAC,uBAAuB,EAC/B,KAAK,EAAC,sBAAsB,EAC5B,SAAS,EAAC,uBAAuB,EACjC,OAAO,EAAC,oBAAoB;oDAE5B,2DAAC,sDAAM,CAAC,KAAK,IAAC,SAAS,EAAC,mKAAmK;wDACzL,qEAAM,QAAQ,EAAE,YAAY;4DAC1B,2DAAC,sDAAM,CAAC,KAAK,IACX,EAAE,EAAC,IAAI,EACP,SAAS,EAAC,sEAAsE,IAE/E,CAAC,CAAC,eAAe,CAAC,CACN;4DACf,oEAAK,SAAS,EAAC,8FAA8F;gEAC3G,oEAAK,SAAS,EAAC,gFAAgF;oEAC7F,2DAAC,2DAAM,IACL,OAAO,EAAC,SAAS,EACjB,IAAI,EAAC,IAAI,EACT,KAAK,EAAC,oFAAoF,IAEzF,CAAC,CAAC,SAAS,CAAC,CACN;oEACT,oEAAK,SAAS,EAAC,6DAA6D;wEAC1E,uEACE,IAAI,EAAC,SAAS,EACd,KAAK,EAAE,IAAI,CAAC,OAAO,EACnB,QAAQ,EAAE,CAAC,CAAC,EAAE,EAAE;gFACd,OAAO,CAAC;oFACN,GAAG,IAAI;oFACP,OAAO,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK;iFACxB,CAAC,CAAC;4EACL,CAAC,EACD,EAAE,EAAC,eAAe,EAClB,SAAS,EAAC,iRAAiR;4EAE3R,uEAAQ,KAAK,EAAC,IAAI,EAAC,QAAQ,UACxB,CAAC,CAAC,eAAe,CAAC,CACZ;4EACT,0HACC,cAAc,EAAE,GAAG,CAClB,CAAC,KAAU,EAAE,EAAE,CAAC,2EAAS,KAAK,CAAU,CACzC,CACE,CACI,CACL;oEACN,yEACE,KAAK,EAAE,IAAI,CAAC,aAAa,EACzB,QAAQ,EAAE,CAAC,CAAC,EAAE,EAAE,CACd,OAAO,CAAC;4EACN,GAAG,IAAI;4EACP,aAAa,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK;yEAC9B,CAAC,EAEJ,EAAE,EAAC,EAAE,EACL,IAAI,EAAE,CAAC,EACP,SAAS,EAAC,sMAAsM,EAChN,WAAW,EAAC,wBAAwB,EACpC,IAAI,EAAC,oBAAoB,iBACb,4BAA4B,GACxC;oEAAC,GAAG,CACF;gEACN,oEAAK,SAAS,EAAC,iFAAiF;oEAC9F,2DAAC,2DAAM,IACL,OAAO,EAAC,SAAS,EACjB,IAAI,EAAC,IAAI,EACT,KAAK,EAAC,oFAAoF,IAEzF,CAAC,CAAC,UAAU,CAAC,CACP;oEACT,oEAAK,SAAS,EAAC,6DAA6D;wEAC1E,uEACE,IAAI,EAAC,UAAU,EACf,EAAE,EAAC,gBAAgB,EACnB,KAAK,EAAE,IAAI,CAAC,QAAQ,EACpB,QAAQ,EAAE,CAAC,CAAC,EAAE,EAAE,CACd,OAAO,CAAC;gFACN,GAAG,IAAI;gFACP,QAAQ,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK;6EACzB,CAAC,EAEJ,SAAS,EAAC,iRAAiR;4EAE3R,uEAAQ,KAAK,EAAC,IAAI,EAAC,QAAQ,UACxB,CAAC,CAAC,eAAe,CAAC,CACZ;4EACT,0HACC,cAAc,EAAE,GAAG,CAClB,CAAC,KAAU,EAAE,EAAE,CAAC,2EAAS,KAAK,CAAU,CACzC,CACE,CACI,CACL;oEACN,yEACE,IAAI,EAAC,qBAAqB,EAC1B,EAAE,EAAC,EAAE,EACL,KAAK,EAAE,IAAI,CAAC,cAAc,EAC1B,QAAQ,EAAE,CAAC,CAAC,EAAE,EAAE,CACd,OAAO,CAAC;4EACN,GAAG,IAAI;4EACP,cAAc,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK;yEAC/B,CAAC,EAEJ,IAAI,EAAE,CAAC,EACP,SAAS,EAAC,uMAAuM,EACjN,WAAW,EAAC,wBAAwB,GACpC,CACE;gEACN,oEAAK,SAAS,EAAC,gFAAgF;oEAC7F,2DAAC,2DAAM,IACL,OAAO,EAAC,SAAS,EACjB,IAAI,EAAC,IAAI,EACT,KAAK,EAAC,oFAAoF,IAEzF,CAAC,CAAC,iBAAiB,CAAC,CACd;oEACT,oEAAK,SAAS,EAAC,6DAA6D;wEAC1E,uEACE,IAAI,EAAC,cAAc,EACnB,EAAE,EAAC,eAAe,EAClB,KAAK,EAAE,IAAI,CAAC,YAAY,EACxB,QAAQ,EAAE,CAAC,CAAC,EAAE,EAAE,CACd,OAAO,CAAC;gFACN,GAAG,IAAI;gFACP,YAAY,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK;6EAC7B,CAAC,EAEJ,SAAS,EAAC,iRAAiR;4EAE3R,uEAAQ,KAAK,EAAC,IAAI,EAAC,QAAQ,UACxB,CAAC,CAAC,eAAe,CAAC,CACZ;4EACT,0HACC,cAAc,EAAE,GAAG,CAClB,CAAC,KAAU,EAAE,EAAE,CAAC,2EAAS,KAAK,CAAU,CACzC,CACE,CACI,CACL;oEACN,yEACE,IAAI,EAAC,0BAA0B,EAC/B,EAAE,EAAC,EAAE,EACL,KAAK,EAAE,IAAI,CAAC,kBAAkB,EAC9B,QAAQ,EAAE,CAAC,CAAC,EAAE,EAAE,CACd,OAAO,CAAC;4EACN,GAAG,IAAI;4EACP,kBAAkB,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK;yEACnC,CAAC,EAEJ,IAAI,EAAE,CAAC,EACP,SAAS,EAAC,sMAAsM,EAChN,WAAW,EAAC,4BAA4B,GACxC,CACE,CACF;4DACN,oEAAK,SAAS,EAAC,cAAc;gEAC3B,uEACE,IAAI,EAAC,QAAQ,EACb,SAAS,EAAC,qPAAqP,IAE9P,CAAC,CAAC,MAAM,CAAC,CACH;gEACT,uEACE,IAAI,EAAC,QAAQ,EACb,SAAS,EAAC,yOAAyO,EACnP,OAAO,EAAE,WAAW,IAEnB,CAAC,CAAC,QAAQ,CAAC,CACL,CACL,CACD,CACM,CACE,CACf,CACF,CACC,CACE;gCAIb,2DAAC,0DAAU,IACT,MAAM,QACN,IAAI,EAAE,WAAW,EACjB,EAAE,EAAE,2CAAQ,iBACA,kBAAkB;oCAE9B,2DAAC,sDAAM,IACL,EAAE,EAAC,KAAK,EACR,SAAS,EAAC,eAAe,EACzB,OAAO,EAAE,UAAU;wCAEnB,2DAAC,0DAAU,CAAC,KAAK,IACf,EAAE,EAAE,2CAAQ,EACZ,KAAK,EAAC,uBAAuB,EAC7B,SAAS,EAAC,WAAW,EACrB,OAAO,EAAC,aAAa,EACrB,KAAK,EAAC,sBAAsB,EAC5B,SAAS,EAAC,aAAa,EACvB,OAAO,EAAC,WAAW;4CAEnB,oEAAK,SAAS,EAAC,sCAAsC,GAAG,CACvC;wCACnB,oEAAK,SAAS,EAAC,+BAA+B;4CAC5C,oEAAK,SAAS,EAAC,8DAA8D;gDAC3E,2DAAC,0DAAU,CAAC,KAAK,IACf,EAAE,EAAE,2CAAQ,EACZ,KAAK,EAAC,uBAAuB,EAC7B,SAAS,EAAC,oBAAoB,EAC9B,OAAO,EAAC,uBAAuB,EAC/B,KAAK,EAAC,sBAAsB,EAC5B,SAAS,EAAC,uBAAuB,EACjC,OAAO,EAAC,oBAAoB;oDAE5B,2DAAC,sDAAM,CAAC,KAAK,IAAC,SAAS,EAAC,mKAAmK;wDACzL,qEAAM,QAAQ,EAAE,YAAY;4DAC1B,2DAAC,sDAAM,CAAC,KAAK,IACX,EAAE,EAAC,IAAI,EACP,SAAS,EAAC,mFAAmF,IAE5F,CAAC,CAAC,wBAAwB,CAAC,CACf;4DACf,oEAAK,SAAS,EAAC,8FAA8F;gEAC3G,oEAAK,SAAS,EAAC,gFAAgF;oEAC7F,yEACE,KAAK,EAAE,IAAI,CAAC,aAAa,EACzB,EAAE,EAAC,EAAE,EACL,IAAI,EAAE,CAAC,EACP,SAAS,EAAC,sMAAsM,EAChN,WAAW,EAAC,2BAA2B,EACvC,IAAI,EAAC,oBAAoB,iBACb,4BAA4B,GACxC;oEAEF,oEAAK,SAAS,EAAC,kNAAkN;wEAC/N,yEACE,SAAS,EAAC,6KAA6K,EACvL,IAAI,EAAE,CAAC,EACP,WAAW,EAAC,eAAe,EAC3B,KAAK,EAAE,IAAI,CAAC,WAAW,GACvB,CACE,CACF;gEACN,oEAAK,SAAS,EAAC,iFAAiF;oEAC9F,yEACE,IAAI,EAAC,qBAAqB,EAC1B,EAAE,EAAC,EAAE,EACL,KAAK,EAAE,IAAI,CAAC,cAAc,EAC1B,IAAI,EAAE,CAAC,EACP,SAAS,EAAC,uMAAuM,EACjN,WAAW,EAAC,4BAA4B,GACxC;oEACF,oEAAK,SAAS,EAAC,kNAAkN;wEAC/N,yEACE,SAAS,EAAC,6KAA6K,EACvL,KAAK,EAAE,IAAI,CAAC,YAAY,EACxB,IAAI,EAAE,CAAC,EACP,WAAW,EAAC,eAAe,GAC3B,CACE,CACF;gEACN,oEAAK,SAAS,EAAC,gFAAgF;oEAC7F,yEACE,IAAI,EAAC,0BAA0B,EAC/B,EAAE,EAAC,EAAE,EACL,KAAK,EAAE,IAAI,CAAC,kBAAkB,EAC9B,IAAI,EAAE,CAAC,EACP,SAAS,EAAC,sMAAsM,EAChN,WAAW,EAAC,+BAA+B,GAC3C;oEACF,oEAAK,SAAS,EAAC,kNAAkN;wEAC/N,yEACE,KAAK,EAAE,IAAI,CAAC,gBAAgB,EAC5B,WAAW,EAAC,eAAe,EAC3B,SAAS,EAAC,6KAA6K,EACvL,IAAI,EAAE,CAAC,GACP,CACE,CACF,CACF;4DACN,oEAAK,SAAS,EAAC,cAAc;gEAC3B,uEACE,IAAI,EAAC,QAAQ,EACb,SAAS,EAAC,wOAAwO,EAClP,OAAO,EAAE,UAAU,IAElB,CAAC,CAAC,OAAO,CAAC,CACJ,CACL,CACD,CACM,CACE,CACf,CACF,CACC,CACE,CAET;4BACN,oEAAK,SAAS,EAAC,QAAQ;gCACrB;oCACE,oEAAK,SAAS,EAAC,kFAAkF;wCAC/F,oEAAK,SAAS,EAAC,oBAAoB,IAChC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAEX,oEAAK,SAAS,EAAC,oCAAoC;4CACjD;;gDAAK,CAAC,CAAC,uBAAuB,CAAC,CAAK,CAGhC,CAEP,CAAC,CAAC,CAAC,CACF,2DAAC,6DAAS,IACR,IAAI,EAAE,OAAO,EACb,OAAO,EAAE,OAAO,EAChB,KAAK,EAAE,CAAC,CAAC,qBAAqB,CAAC,GAC/B,CACH,CACG,CACF,CACF,CACF,CACF,CACF,CACF,CACF,CACF,CACL,CACJ,CAAC;AACJ,CAAC,CAAC;AACF,iEAAe,sBAAsB,EAAC","sources":["webpack://atlp-pulse-fn/./src/Mutations/MakeDefault.tsx","webpack://atlp-pulse-fn/./src/Mutations/Ratings.tsx","webpack://atlp-pulse-fn/./src/dummyData/ratings.ts","webpack://atlp-pulse-fn/./src/pages/GradingSystemQuery.ts","webpack://atlp-pulse-fn/./src/pages/TraineeRatingDashboard.tsx"],"sourcesContent":["\nimport { gql } from '@apollo/client';\n\nexport const DEFAULT_GRADE = gql`\nquery GetDefaultGrading {\n  getDefaultGrading {\n    id\n    name\n    grade\n    description\n    percentage\n    userId\n    defaultGrading\n  }\n}\n`\n\nconst MAKE_DEFAULT_GRADING_SYSTEM = gql`\nmutation MakeRatingdefault($makeRatingdefaultId: ID) {\n  makeRatingdefault(id: $makeRatingdefaultId)\n}\n`;\nexport default MAKE_DEFAULT_GRADING_SYSTEM;\n","import { gql } from '@apollo/client';\n\nexport const GET_RATINGS = gql`\n  query Query($orgToken: String) {\n    fetchRatings(orgToken: $orgToken) {\n      user {\n        id\n        email\n      }\n      sprint\n      quantity\n      bodyQuantity\n      quantityRemark\n      quality\n      bodyProfessional\n      qualityRemark\n      professional_Skills\n      professionalRemark\n      bodyQuality\n      coordinator\n      average\n      cohort {\n        name\n        phase {\n          name\n        }\n      }\n    }\n  }\n`;\nexport const RATING_BY_COHORT = gql `\nquery GetAllCohorts( $cohortName: String) {\n  fetchRatingByCohort(  CohortName: $cohortName) {\n    sprint\n    quantity\n    approved\n    coordinator\n    average\n    cohort {\n      name\n      id\n      phase {\n        name\n      }\n    }\n    user {\n      id\n      email\n    }\n    quantityRemark\n    bodyQuantity\n    quality\n    qualityRemark\n    bodyQuality\n    professional_Skills\n    professionalRemark\n    bodyProfessional\n  }\n}\n`\nexport const FETCH_ALL_RATINGS = gql`\n  query FetchAllRatings($orgToken: String) {\n    fetchAllRatings(orgToken: $orgToken) {\n      user {\n        id\n        email\n      }\n      sprint\n      quantity\n      quantityRemark\n      quality\n      qualityRemark\n      professional_Skills\n      professionalRemark\n      average\n      cohort {\n        name\n        phase {\n          name\n        }\n      }\n      coordinator\n    }\n  }\n`;\n\nexport const ADD_RATING = gql`\nmutation AddRatings($user: String!, $sprint: Int!, $quantity: String!, $quality: String!, $cohort: String!, $professionalSkills: String!, $orgToken: String!, $quantityRemark: String, $bodyQuality: String, $qualityRemark: String, $bodyQuantity: String, $professionalRemark: String, $bodyProfessional: String) {\n  addRatings(user: $user, sprint: $sprint, quantity: $quantity, quality: $quality, cohort: $cohort, professional_Skills: $professionalSkills, orgToken: $orgToken, quantityRemark: $quantityRemark, bodyQuality: $bodyQuality, qualityRemark: $qualityRemark, bodyQuantity: $bodyQuantity, professionalRemark: $professionalRemark, bodyProfessional: $bodyProfessional) {\n    user {\n      id\n      email\n    }\n    sprint\n    cohort {\n      name\n      id\n      phase {\n        name\n      }\n    }\n    quantity\n    quantityRemark\n    bodyQuantity\n    quality\n    qualityRemark\n    bodyQuality\n    professional_Skills\n    professionalRemark\n    bodyProfessional\n    approved\n    coordinator\n  }\n}\n`;\n\nexport const UPDATE_RATING = gql`\n  mutation Mutation(\n    $user: String!\n    $sprint: Int!\n    $quantity: [String]\n    $quantityRemark: [String]\n    $quality: [String]\n    $qualityRemark: [String]\n    $professionalSkills: [String]\n    $professionalRemark: [String]\n    $orgToken: String!\n  ) {\n    updateRating(\n      user: $user\n      sprint: $sprint\n      quantity: $quantity\n      quantityRemark: $quantityRemark\n      quality: $quality\n      qualityRemark: $qualityRemark\n      professional_Skills: $professionalSkills\n      professionalRemark: $professionalRemark\n      orgToken: $orgToken\n    ) {\n      user\n      sprint\n      quantity\n      quantityRemark\n      quality\n      qualityRemark\n      professional_Skills\n      professionalRemark\n    }\n  }\n`;\n\nexport const APPROVE_RATING = gql`\n  mutation Mutation($user: String!, $sprint: Int!) {\n    approveRating(user: $user, sprint: $sprint) {\n      user\n      sprint\n      quantity\n      quantityRemark\n      qualityRemark\n      professionalRemark\n      professional_Skills\n      approved\n      quality\n    }\n  }\n`;\n\nexport const REJECT_RATING = gql`\n  mutation Mutation($user: String!, $sprint: Int!) {\n    rejectRating(user: $user, sprint: $sprint)\n  }\n`;\n\nexport const TRAINEE_RATING = gql`\n  query Query {\n    fetchRatingsTrainee {\n      user {\n        id\n      }\n      sprint\n      quantity\n      quantityRemark\n      quality\n      qualityRemark\n      professional_Skills\n      professionalRemark\n      average\n      cohort {\n        phase {\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport const GET_USERS = gql`\n  query GetAllUsers($cohortName: ID!) {\n    fetchCohortsCoordinator(cohortName: $cohortName) {\n      name\n      phase {\n        name\n      }\n      coordinator {\n        id\n      }\n      members {\n        id\n        role\n        email\n      }\n      program {\n        name\n      }\n      id\n    }\n  }\n`;\n\nexport const GET_COORDINATOR_COHORTS_QUERY = gql`\n  query GetCoordinatorCohorts($orgToken: String) {\n    getCoordinatorCohorts(orgToken: $orgToken) {\n      name\n      id\n    }\n  }\n`;\n\nexport const GET_ALL_TRAINEES = gql`\n  query GetAllUsers($orgToken: String) {\n  getAllUsers(orgToken: $orgToken) {\n    role\n    email\n    team {\n      name\n      cohort {\n        endDateb\n        startDate\n        phase {\n          name\n        }\n        name\n        program {\n          organization {\n            name\n          }\n          name\n          manager {\n            role\n            email\n            profile {\n              name\n              firstName\n              lastName\n            }\n          }\n        }\n      }\n    }\n  }\n}\n`;","export const phase = [\n  {\n    id: 1,\n    name: 'Select',\n  },\n  {\n    id: 2,\n    name: '1',\n  },\n  {\n    id: 3,\n    name: '2',\n  },\n  {\n    id: 4,\n    name: '3',\n  },\n  {\n    id: 5,\n    name: '4',\n  },\n];\n\nexport const cohort = [\n  {\n    id: 1,\n    name: 'All Cohorts',\n  },\n  {\n    id: 2,\n    name: 'Cohort 1',\n  },\n  {\n    id: 3,\n    name: 'Cohort 2',\n  },\n  {\n    id: 4,\n    name: 'Cohort 3',\n  },\n  {\n    id: 5,\n    name: 'Cohort 4',\n  },\n];\n\nexport const sprint = [\n  {\n    id: 1,\n    name: 1,\n  },\n  {\n    id: 2,\n    name: 2,\n  },\n  {\n    id: 3,\n    name: 3,\n  },\n  {\n    id: 4,\n    name: 4,\n  },\n  {\n    id: 5,\n    name: 5,\n  },\n];\n\nexport const people = [\n  { id: 1, name: 'Shema Kevin' },\n  { id: 2, name: 'Keza Alice' },\n  { id: 3, name: 'Mutoni Aline' },\n  { id: 4, name: 'Abawe Merchior' },\n  { id: 5, name: 'Tanya Fox' },\n  { id: 6, name: 'Mugisha Danny' },\n];\n","import { gql } from '@apollo/client';\n\nconst GRADING_SYSTEM_QUERY = gql`\nquery Query($orgToken: String!) {\n    getRatingSystems(orgToken: $orgToken) {\n      description\n      grade\n      id\n      defaultGrading\n      name\n      percentage\n      userId\n    }\n  }\n`;\nexport default GRADING_SYSTEM_QUERY;\n","/* eslint-disable */\nimport gql from 'graphql-tag';\nimport { ApolloClient, InMemoryCache } from '@apollo/client';\nimport React, { useState, Fragment, useEffect, Suspense } from 'react';\nimport { Listbox, Combobox, Transition, Dialog } from '@headlessui/react';\nimport { CheckIcon, SelectorIcon, PlusIcon } from '@heroicons/react/solid';\nimport { useTranslation } from 'react-i18next';\nimport Square from '../Skeletons/Square';\nimport Skeleton from '../components/Skeleton';\nimport {\n  ADD_REPLY,\n  GET_REPLIES,\n  GET_REPLIES_BY_USER,\n} from '../Mutations/replyMutation';\nimport { REMOVE_REPLY } from '../Mutations/replyMutation';\nimport useDocumentTitle from '../hook/useDocumentTitle';\nimport Sidebar from '../components/Sidebar';\nimport Button from '../components/Buttons';\nimport { DEFAULT_GRADE } from '../Mutations/MakeDefault';\nimport {\n  GET_RATINGS,\n  ADD_RATING,\n  UPDATE_RATING,\n  GET_USERS,\n  RATING_BY_COHORT,\n  FETCH_ALL_RATINGS,\n} from '../Mutations/Ratings';\nimport { GET_COHORTS_QUERY } from '../Mutations/manageStudentMutations';\n\nimport { GET_COHORT_TRAINEES_QUERY } from '../Mutations/manageStudentMutations';\nimport { phase, sprint } from '../dummyData/ratings';\nimport DataTable from '../components/DataTable';\nimport { useLazyQuery, useMutation } from '@apollo/client';\nimport { toast } from 'react-toastify';\nimport { Icon } from '@iconify/react';\nimport GRADING_SYSTEM_QUERY from './GradingSystemQuery';\nimport { useQuery } from '@apollo/client';\nimport GradingSystem from './GradingSystem';\n\nfunction classNames(...classes: any) {\n  /* istanbul ignore next */\n  return classes.filter(Boolean).join(' ');\n}\n\n\nconst TraineeRatingDashboard = () => {\n  const organizationToken = localStorage.getItem('orgToken');\n\n  useDocumentTitle('Ratings');\n  const { t } = useTranslation();\n  const [nav, setNav] = useState(false);\n  const [trainee, setTrainee] = useState<any>([]);\n  const [cohorts, setCohorts] = useState<any>([]);\n  const [selectedCohort, setSelectedCohort] = useState(cohorts[0]);\n  const [selectedUser, setSelectedUser] = useState<any>([]);\n  const [selectedSprint, setSelectedSprint] = useState(sprint[0]);\n  const [cohortName, setCohortName] = useState({ cohortName: '' });\n\n  const [disable, setDisable] = useState(true);\n  const [ratingData, setRatingData] = useState({\n    quality: '0',\n    qualityRemark: '',\n    quantity: '0',\n    quantityRemark: '',\n    professional: '0',\n    professionalRemark: '',\n    userEmail: '',\n    average: '',\n  });\n  const [rows, setRows] = useState({\n    quality: '0',\n    qualityremark: '',\n    quantity: '0',\n    quantityremark: '',\n    professional: '0',\n    professionalRemark: '',\n    bodyQuantity: '',\n    bodyQuality: '',\n    bodyProfessional: '',\n    sprint: '0',\n    user: '',\n    id: '',\n  });\n  /* istanbul ignore next */\n  let [isOpen, setIsOpen] = useState(false);\n  const [showActions, setShowActions] = useState(false);\n  const [showRemarks, setShowRemarks] = useState(false);\n  const [ratings, setRatings] = useState<any>([]);\n  const [trainees, setTrainees] = useState<any>([]);\n  const [ratingsByCohort, setRatingsByCohort] = useState<any>([]);\n  const [defaultGrading, setDefaultGrading] = useState<any>([]);\n  const [selectedTrainee, setSelectedTrainee] = useState(trainee[0]);\n  const [query, setQuery] = useState('');\n  const [toggle, setToggle] = useState(false);\n  /* istanbul ignore next */\n  const filteredTrainees =\n    query === ''\n      ? trainee\n      : trainee.filter((trainee: any) =>\n          trainee?.email\n            .toLowerCase()\n            .replace(/\\s+/g, '')\n            .includes(query.toLowerCase().replace(/\\s+/g, '')),\n        );\n  /* istanbul ignore next */\n  const filteredcohorts =\n    query === ''\n      ? cohorts\n      : cohorts.filter((cohorts: any) =>\n          cohorts?.name\n            .toLowerCase()\n            .replace(/\\s+/g, '')\n            .includes(query.toLowerCase().replace(/\\s+/g, '')),\n        );\n\n  const closeModal = /* istanbul ignore next */ \n  () => {\n    /* istanbul ignore next */\n    // setIsOpen(false);\n    /* istanbul ignore next */\n    setShowActions(false);\n    /* istanbul ignore next */\n    setShowRemarks(false);\n  };\n  const closeCancel = () => {\n    /* istanbul ignore next */\n    setIsOpen(false);\n    /* istanbul ignore next */\n    setShowActions(false);\n    /* istanbul ignore next */\n    setShowRemarks(false);\n  }\n  const openModal = () => {\n    setIsOpen(true);\n  };\n  const handleClick =\n    /* istanbul ignore next */\n    () =>\n      /* istanbul ignore next */\n      setNav(!nav);\n  const handleToggle = /* istanbul ignore next */ \n  () => {\n    /* istanbul ignore next */\n    setToggle(!toggle);\n  };\n\n  const handleSubmit = /* istanbul ignore next */ \n  (e: any) => {\n    /* istanbul ignore next */\n    e.preventDefault();\n    /* istanbul ignore next */\n    createRatings();\n    /* istanbul ignore next */\n    handleToggle();\n    /* istanbul ignore next */\n  };\n\n  const handleUpdate = (e: any) => {\n    /* istanbul ignore next */\n    e.preventDefault();\n    /* istanbul ignore next */\n    updateRatings();\n    /* istanbul ignore next */\n    handleToggle();\n    /* istanbul ignore next */\n    closeModal();\n  };\n  const handleRatingChange = (e: any) => {\n      /* istanbul ignore next */\n    setRatingData((prevRatingData) => {\n      /* istanbul ignore next */\n      return {\n        ...prevRatingData,\n        [e.target.name]: e.target.value,\n      };\n    });\n  };\n  const vardata = ratingsByCohort;\n  /* istanbul ignore next */\n \n  const columns = [\n    { Header: `${t('Email')}`, accessor: 'user[email]' },\n    { Header: `${t('Phase')}`, accessor: 'cohort[phase[name]]' },\n    { Header: `${t('Sprint')}`, accessor: 'sprint' },\n    { Header: `${t('Quantity')}`, accessor: 'quantity' },\n    { Header: `${t('Quality')}`, accessor: 'quality' },\n    { Header: `${t('Professional skills')}`, accessor: 'professional_Skills' },\n   \n    { Header: `${t('Average')}`, accessor:  'average' },\n    {\n      Header: `${t('Actions')}`,\n      accessor: '',\n      Cell: ({ row }: any) => (\n        <div className=\"flex flex-row\">\n          <div className=\"cursor-pointer\">\n            <Icon\n              icon=\"bx:edit-alt\"\n              color=\"#148fb6\"\n              onClick={() => {\n                setShowActions(!showActions);\n                setRows({\n                  ...rows,\n                  quality: row.original.quality,\n                  qualityremark: row.original.qualityRemark,\n                  quantity: row.original.quantity,\n                  quantityremark: row.original.quantityRemark,\n                  professional: row.original.professional_Skills,\n                  professionalRemark: row.original.professionalRemark,\n                  sprint: row.original.sprint,\n                  user: row.original.user.email,\n                  id: row.original.user.id,\n                });\n                \n              }}\n            />\n          </div>\n        </div>\n      ),\n    },\n    {\n      Header: `${t('Remarks')}`,\n      accessor: '',\n      Cell: ({ row }: any) => (\n        <div className=\"flex flex-row\">\n          <div className=\"cursor-pointer\">\n            <Icon\n              icon=\"ant-design:comment-outlined\"\n              width=\"25\"\n              height=\"25\"\n              color=\"#148fb6\"\n              onClick={() => {\n                setShowRemarks(!showRemarks);\n                setShowActions(!showActions);\n                setRows({\n                  ...rows,\n                  quality: row.original.quality,\n                  qualityremark: row.original.qualityRemark,\n                  bodyQuality: row.original.bodyQuality,\n                  quantity: row.original.quantity,\n                  quantityremark: row.original.quantityRemark,\n                  bodyQuantity: row.original.bodyQuantity,\n                  professional: row.original.professional_Skills,\n                  professionalRemark: row.original.professionalRemark,\n                  bodyProfessional: row.original.bodyProfessional,\n                  sprint: row.original.sprint,\n                  user: row.original.user.email,\n                  id: row.original.user.id,\n                });\n              }}\n            />\n          </div>\n        </div>\n      ),\n    },\n  ];\n  /* istanbul ignore next */\n  const [createRatings] = useMutation(ADD_RATING, {\n    variables: {\n      cohort: selectedCohort?.id,\n      user: ratingData.userEmail,\n      sprint: selectedSprint.name,\n      quantity: ratingData.quantity.toString(),\n      quantityRemark: ratingData.quantityRemark.toString(),\n      quality: ratingData.quality.toString(),\n      qualityRemark: ratingData.qualityRemark.toString(),\n      professionalSkills: ratingData.professional.toString(),\n      professionalRemark: ratingData.professionalRemark.toString(),\n      orgToken: organizationToken,\n    },\n    onError: (err) => {\n      toast.error(err.message || 'Something went wrong');\n      openModal();\n    },\n    onCompleted: ({ createRatings }) => {\n      handleToggle();\n      closeCancel();\n      toast.success('Successfully done');\n    },\n  });\n  /* istanbul ignore next */\n  const [updateRatings] = useMutation(UPDATE_RATING, {\n    variables: {\n      user: rows.id,\n      sprint: rows.sprint,\n      quantity: rows?.quantity,\n      quantityRemark: rows?.quantityremark,\n      quality: rows?.quality,\n      qualityRemark: rows?.qualityremark,\n      professionalSkills: rows?.professional,\n      professionalRemark: rows?.professionalRemark,\n      orgToken: organizationToken,\n    },\n    onError: (err) => {\n      toast.error(err.message || 'something went wrong');\n      setShowActions(true);\n    },\n    onCompleted: (data) => {\n      toast.success('Successfully updated!');\n    },\n  });\n  const [DefaultGrade] = useLazyQuery(DEFAULT_GRADE, {})\n\n  const [getRatings] = useLazyQuery(GET_RATINGS, {\n    variables: {\n      orgToken: organizationToken,\n    },\n  });\n  const [RatingByCohort] = useLazyQuery(RATING_BY_COHORT, {\n    variables: {\n      cohortName: selectedCohort?.name,\n    },\n  });\n\n\n  // const [getTraineesCohorts] = useLazyQuery(GET_COHORT_TRAINEES_QUERY, {\n  //   variables: {\n  //   orgToken: organizationToken,\n  //   cohort: cohortName,\n  //   }\n  //   });\n  \n  const [getCohorts] = useLazyQuery(GET_COHORTS_QUERY, {\n    variables: {\n      orgToken: organizationToken,\n    },\n  });\n\n  const [getUsers] = useLazyQuery(GET_COHORT_TRAINEES_QUERY, {\n    variables: {\n      orgToken: organizationToken,\n      cohort: cohortName,\n    },\n  });\n\n  const { data } = useQuery(GRADING_SYSTEM_QUERY);\n\n  useEffect(() => {\n    getRatings({\n      fetchPolicy: 'network-only',\n      /* istanbul ignore next */\n      onCompleted: (data) => {\n        /* istanbul ignore next */\n        setRatings(data?.fetchRatings);\n        \n      },\n      onError: /* istanbul ignore next */ \n      (error) => {\n        /* istanbul ignore next */\n        toast.error(error?.message || 'Failed to load the data');\n      },\n    });\n \n    DefaultGrade({\n      fetchPolicy: 'network-only',\n      onCompleted: (data) => {\n        /* istanbul ignore next */\n        setDefaultGrading(data?.getDefaultGrading[0]?.grade)\n        \n      },\n    onError: (error) => {\n      /* istanbul ignore next */\n        toast.error(error?.message || 'Failed to load the data');\n      },\n    })\n\n    getCohorts({\n      fetchPolicy: 'network-only',\n      /* istanbul ignore next */\n      onCompleted: (data) => {\n        /* istanbul ignore next */\n        const cohorts = data?.getCohorts;\n        /* istanbul ignore next */\n        data?.getCohorts?.length !== 0\n          ? setCohorts(cohorts)\n          : setCohorts(cohorts);\n      },\n      onError: (error) => {\n      /* istanbul ignore next */\n        toast.error(error?.message || 'Failed to load the data');\n      },\n    });\n  }, [toggle, updateRatings]);\n\n  /* istanbul ignore next */\n\n  const defaultRating = data?.getDefaultGrading?.filter(\n    (x: any) => x.defaultGrading,\n  );\n\n  function getRatingByCohort() {\n    /* istanbul ignore next */\n    RatingByCohort({\n      fetchPolicy: 'network-only',\n      onCompleted: (data) => {\n        /* istanbul ignore next */\n        setRatingsByCohort(data?.fetchRatingByCohort);\n        \n      },\n      onError: (error) => {\n      /* istanbul ignore next */\n        toast.error(error?.message || 'Failed to load the data');\n      },\n    });\n  }\n\n  return (\n    <>\n      <div className=\"flex flex-col h-screen bg-light-bg dark:bg-dark-frame-bg\">\n        <div className=\"flex flex-row\">\n          <Sidebar toggle={handleClick} style=\"hidden lg:flex\" />\n          <div className=\"w-full\">\n            <div>\n              <div className=\"bg-light-bg dark:bg-dark-frame-bg max-h-full overflow-y-auto overflow-x-hidden\">\n                <div className=\"flex flex-col w-3/5 mx-auto md:flex-row relative  justify-between px-2 md:px-5 lg:px-10 pt-24 pb-8 mt-4\">\n                  {/* SELECT COHORT DROPDOWN START */}\n                  <div className=\"flex flex-col md:ml-a w-40\">\n                    <Listbox\n                      value={selectedCohort}\n                      onChange={\n                        /* istanbul ignore next */ \n                        (e) => {\n                          /* istanbul ignore next */\n                          setSelectedCohort(e);\n                          setCohortName(e.name);\n                          setDisable(false);\n                          getUsers({\n                            fetchPolicy: 'network-only',\n                            /* istanbul ignore next */\n                            onCompleted: (data) => {\n                                setTrainee(data?.getCohortTrainees)\n                              /* istanbul ignore next */\n                              \n                            },\n                            onError: /* istanbul ignore next */ \n                            (error) => {\n                              /* istanbul ignore next */\n                              toast.error(\n                                error?.message || 'Something went wrong',\n                              );\n                            },\n                          });\n                          getRatingByCohort()\n                        }\n                      }\n                    >\n                      {({ open }) => (\n                        <>\n                          <Listbox.Label className=\"block text-lg font-medium text-gray-700 dark:text-dark-text-fill mt-2\">\n                            {t('Cohort')}\n                          </Listbox.Label>\n                          <div className=\"relative mt-1\">\n                            <Listbox.Button\n                              className=\"relative md:w-full p-30 h-8 cursor-default rounded-md border border-primary bg-primary py-2 pl-3 pr-10 text-left shadow-sm focus:border-white focus:outline-none focus:ring-1 focus:ring-white sm:text-sm\"\n                              data-testid=\"cohortList\"\n                            >\n                              <span className=\"flex items-center\">\n                                <span className=\"ml-3 block truncate text-white\">\n                                  {selectedCohort?.name}\n                                </span>\n                              </span>\n                              <span className=\"pointer-events-none absolute inset-y-0 right-0 ml-3 flex items-center pr-2\">\n                                <SelectorIcon\n                                  className=\"h-5 w-5 text-white\"\n                                  aria-hidden=\"true\"\n                                />\n                              </span>\n                            </Listbox.Button>\n                            <Transition\n                              show={open}\n                              as={Fragment}\n                              leave=\"transition ease-in duration-100\"\n                              leaveFrom=\"opacity-100\"\n                              leaveTo=\"opacity-0\"\n                            >\n                              <Listbox.Options className=\"absolute z-10 mt-1 max-h-56 w-1/2 md:w-full overflow-auto rounded-md bg-white py-1 text-base shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none sm:text-sm\">\n                                {cohorts?.map((cohort: any) => (\n                                  <Listbox.Option\n                                    key={cohort?.id}\n                                    className={({ active }) =>\n                                      classNames(\n                                        active\n                                          ? 'text-white bg-primary'\n                                          : 'text-gray-900',\n                                        'relative cursor-default select-none py-2 pl-3 pr-9',\n                                      )\n                                    }\n                                    value={cohort}\n                                  >\n                                    {({ selected, active }) => (\n                                      <>\n                                        <div className=\"flex items-center\">\n                                          <span\n                                            className={classNames(\n                                              selected\n                                                ? 'font-semibold'\n                                                : 'font-normal',\n                                              'ml-3 block truncate',\n                                            )}\n                                          >\n                                            {cohort?.name}\n                                          </span>\n                                        </div>\n                                        {selected ? (\n                                          <span\n                                            className={classNames(\n                                              active\n                                                ? 'text-white'\n                                                : 'text-primary',\n                                              'absolute inset-y-0 right-0 flex items-center pr-4',\n                                            )}\n                                          >\n                                            <CheckIcon\n                                              className=\"h-5 w-5\"\n                                              aria-hidden=\"true\"\n                                            />\n                                          </span>\n                                        ) : null}\n                                      </>\n                                    )}\n                                  </Listbox.Option>\n                                ))}\n                              </Listbox.Options>\n                            </Transition>\n                          </div>\n                        </>\n                      )}\n                    </Listbox>\n                  </div>\n\n                  {/* SELECT COHORT DROPDOWN END */}\n\n                  <div className=\"mt-8\">\n                    <button\n                      type=\"button\"\n                      onClick={openModal}\n                      data-testid=\"addRatingButton\"\n                      className=\"rounded-md w-40 text-base flex flex-row bg-primary p-3 font-medium text-white hover:bg-opacity-30 focus:outline-none focus-visible:ring-2 focus-visible:ring-white focus-visible:ring-opacity-75\"\n                    >\n                      {t('Add New Rating')}\n                      <PlusIcon className=\"w-4 mt-1\" />\n                    </button>\n                  </div>\n                  {/* ADD NEW RATINGS MODAL START*/}\n                  <Transition\n                    appear\n                    show={isOpen}\n                    as={Fragment}\n                    data-testid=\"modalTransistion\"\n                  >\n                    <Dialog\n                      as=\"div\"\n                      className=\"relative z-10\"\n                      onClose={closeModal}\n                    >\n                      <Transition.Child\n                        as={Fragment}\n                        enter=\"ease-out duration-300\"\n                        enterFrom=\"opacity-0\"\n                        enterTo=\"opacity-100\"\n                        leave=\"ease-in duration-200\"\n                        leaveFrom=\"opacity-100\"\n                        leaveTo=\"opacity-0\"\n                      >\n                        <div className=\"fixed inset-0 bg-black bg-opacity-50\" />\n                      </Transition.Child>\n                      <div className=\"fixed inset-0 overflow-y-auto\">\n                        <div className=\"flex min-h-full  items-center justify-center p-4 text-center\">\n                          <Transition.Child\n                            as={Fragment}\n                            enter=\"ease-out duration-300\"\n                            enterFrom=\"opacity-0 scale-95\"\n                            enterTo=\"opacity-100 scale-100\"\n                            leave=\"ease-in duration-200\"\n                            leaveFrom=\"opacity-100 scale-100\"\n                            leaveTo=\"opacity-0 scale-95\"\n                          >\n                            <Dialog.Panel className=\"w-full overflow-auto lg:mx-60 xl:mx-96 h-[800px] md:h-[600px] transform  rounded-2xl bg-white dark:bg-dark-bg p-6 text-left align-middle shadow-xl transition-all\">\n                              <form onSubmit={handleSubmit}>\n                                <Dialog.Title\n                                  as=\"h3\"\n                                  className=\"text-lg font-medium leading-6 text-gray-900 dark:text-dark-text-fill\"\n                                >\n                                  {t('Add New Trainee Rating')}\n                                </Dialog.Title>\n                                {/* SELECT TRAINEE DROPDOWN START */}\n                                <div className=\"mt-10 md:mt-12 grid grid-cols-4\">\n                                  <Combobox\n                                    value={selectedUser}\n                                    onChange={(e) => {\n                                      /* istanbul ignore next */\n                                      setSelectedUser(\n                                       e\n                                      )\n                                      /* istanbul ignore next */\n                                      setRatingData({\n                                        ...ratingData,\n                                        userEmail: e.id,\n                                      });\n                                    }}\n                                    data-testid=\"traineesCombo\"\n                                  >\n                                    <div className=\"flex flex-col col-span-6 md:col-span-1\">\n                                      <Combobox.Label className=\"text-lg  font-bold pr-2 \">\n                                        {t('Trainee')}\n                                      </Combobox.Label>\n                                      <div className=\"relative mt-0 md:mt-4\">\n                                        <div className=\"relative w-full cursor-default overflow-hidden rounded-lg bg-primary text-left shadow-md focus:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-offset-primary sm:text-sm\">\n                                          <Combobox.Input\n                                            className=\"w-full border-none py-2 pl-3 pr-10 text-sm leading-5 bg-primary text-white focus:border-white focus:outline-none focus:ring-1 focus:ring-white\"\n                                            displayValue={(trainee: any) =>\n                                              trainee?.email\n                                            }\n                                            onChange={(event) =>\n                                              setQuery(event.target.value)\n                                            }\n                                            data-testid=\"traineeComboInput\"\n                                          />\n                                          <Combobox.Button\n                                            className=\"absolute inset-y-0 right-0 flex items-center pr-2\"\n                                            data-testid=\"traineeList\"\n                                          >\n                                            <SelectorIcon\n                                              className=\"h-5 w-5 text-white\"\n                                              aria-hidden=\"true\"\n                                            />\n                                          </Combobox.Button>\n                                        </div>\n                                        <Transition\n                                          as={Fragment}\n                                          leave=\"transition ease-in duration-100\"\n                                          leaveFrom=\"opacity-100\"\n                                          leaveTo=\"opacity-0\"\n                                          afterLeave={() => setQuery('')}\n                                        >\n                                          <Combobox.Options className=\"z-20 absolute mt-1 ml-auto max-h-60 w-full overflow-auto rounded-md bg-white py-1 text-base shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none sm:text-sm\">\n                                            <Combobox.Option\n                                              key={trainee.id}\n                                              className={`relative cursor-default select-none py-2 pl-10 pr-4 bg-gray-200 text-gray-900`}\n                                              value={trainee.id}\n                                              disabled={true}\n                                            >\n                                              <span\n                                                className={`block truncate font-medium`}\n                                              >\n                                                {t('Select Trainee')}\n                                              </span>\n                                            </Combobox.Option>\n                                            {filteredTrainees?.length === 0 &&\n                                            query !== '' ? (\n                                              <div\n                                                className=\"relative cursor-default select-none py-2 px-4 text-gray-700\"\n                                                data-testid=\"notFoundDiv\"\n                                              >\n                                                {t('No trainee found.')}\n                                              </div>\n                                            ) : (\n                                              filteredTrainees?.map(\n                                                (trainee: any) => (\n                                                  <Combobox.Option\n                                                    data-testid=\"traineeOption\"\n                                                    key={trainee?.id}\n                                                    className={({ active }) =>\n                                                      `relative cursor-default select-none py-2 pl-10 pr-4 ${\n                                                        active\n                                                          ? 'bg-primary text-white'\n                                                          : 'text-gray-900'\n                                                      }`\n                                                    }\n                                                    value={trainee}\n                                                  >\n                                                    {({ selected, active }) => (\n                                                      <>\n                                                        <span\n                                                          className={`block truncate ${\n                                                            selected\n                                                              ? 'font-medium'\n                                                              : 'font-normal'\n                                                          }`}\n                                                        >\n                                                          {trainee?.email}\n                                                        </span>\n                                                        {selected ? (\n                                                          <span\n                                                            className={`absolute inset-y-0 left-0 flex items-center pl-3 ${\n                                                              active\n                                                                ? 'text-white'\n                                                                : 'text-primary'\n                                                            }`}\n                                                          >\n                                                            <CheckIcon\n                                                              className=\"h-5 w-5\"\n                                                              aria-hidden=\"true\"\n                                                            />\n                                                          </span>\n                                                        ) : null}\n                                                      </>\n                                                    )}\n                                                  </Combobox.Option>\n                                                ),\n                                              )\n                                            )}\n                                          </Combobox.Options>\n                                        </Transition>\n                                      </div>\n                                    </div>\n                                  </Combobox>\n                                  {/* SELECT TRAINEE DROPDOWN END */}\n\n                                  \n\n                                  {/* SELECT SPRINT  DROPDOWN START */}\n                                  <div className=\"flex flex-col ml-auto col-span-0 md:col-span-3\">\n                                    <Listbox\n                                      value={selectedSprint}\n                                      onChange={setSelectedSprint}\n                                    >\n                                      {({ open }) => (\n                                        <>\n                                          <Listbox.Label className=\"block text-lg font-bold mt-2\">\n                                            {t(' Sprint')}\n                                          </Listbox.Label>\n                                          <div className=\"relative mt-1 w-full\">\n                                            <Listbox.Button\n                                              data-testid=\"sprintList\"\n                                              className=\"relative w-full cursor-default rounded-md border border-primary bg-primary py-2 pl-3 pr-10 text-left shadow-sm focus:border-white focus:outline-none focus:ring-1 focus:ring-white sm:text-sm\"\n                                            >\n                                              <span className=\"flex items-center\">\n                                                <span className=\"ml-3 block truncate text-white\">\n                                                  {selectedSprint.name}\n                                                </span>\n                                              </span>\n                                              <span className=\"pointer-events-none absolute inset-y-0 right-0 ml-3 flex items-center pr-2\">\n                                                <SelectorIcon\n                                                  className=\"h-5 w-5 text-white\"\n                                                  aria-hidden=\"true\"\n                                                />\n                                              </span>\n                                            </Listbox.Button>\n                                            <Transition\n                                              show={open}\n                                              as={Fragment}\n                                              leave=\"transition ease-in duration-100\"\n                                              leaveFrom=\"opacity-100\"\n                                              leaveTo=\"opacity-0\"\n                                            >\n                                              <Listbox.Options className=\"absolute z-10 mt-1 max-h-56 w-full overflow-auto rounded-md bg-white py-1 text-base shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none sm:text-sm\">\n                                                {sprint.map((sprint) => (\n                                                  <Listbox.Option\n                                                    key={sprint.id}\n                                                    className={({ active }) =>\n                                                      classNames(\n                                                        active\n                                                          ? 'text-white bg-primary'\n                                                          : 'text-gray-900',\n                                                        'relative cursor-default select-none py-2 pl-3 pr-9',\n                                                      )\n                                                    }\n                                                    value={sprint}\n                                                  >\n                                                    {({ selected, active }) => (\n                                                      <>\n                                                        <div className=\"flex items-center\">\n                                                          <span\n                                                            className={classNames(\n                                                              selected\n                                                                ? 'font-semibold'\n                                                                : 'font-normal',\n                                                              'ml-3 block truncate',\n                                                            )}\n                                                          >\n                                                            {sprint.name}\n                                                          </span>\n                                                        </div>\n                                                        {selected ? (\n                                                          <span\n                                                            className={classNames(\n                                                              active\n                                                                ? 'text-white'\n                                                                : 'text-primary',\n                                                              'absolute inset-y-0 right-0 flex items-center pr-4',\n                                                            )}\n                                                          >\n                                                            <CheckIcon\n                                                              className=\"h-5 w-5\"\n                                                              aria-hidden=\"true\"\n                                                            />\n                                                          </span>\n                                                        ) : null}\n                                                      </>\n                                                    )}\n                                                  </Listbox.Option>\n                                                ))}\n                                              </Listbox.Options>\n                                            </Transition>\n                                          </div>\n                                        </>\n                                      )}\n                                    </Listbox>\n                                  </div>\n\n                                  {/* SELECT SPRINT DROPDOWN END. */}\n                                </div>\n                                \n                                <div className=\"bg-gray-100 dark:bg-dark-frame-bg rounded-md p-2 my-2 mt-6 md:mt-8 flex flex-col md:flex-row\">\n                                  <div className=\"mx-0 md:mx-2 my-1 w-full flex flex-col md:flex-col justify-start items-center \">\n                                    <Button\n                                      variant=\"default\"\n                                      size=\"md\"\n                                      style=\"text-center w-full rounded-lg bg-gray-700 text-white focus:outline-none p-1 md:p-2\"\n                                    >\n                                      {t(' Quality')}\n                                    </Button>\n                                    <div className=\"flex flex-col justify-start items-start w-full my-0 md:my-2\">\n                                      <select\n                                        name=\"quality\"\n                                        value={ratingData.quality}\n                                        onChange={(e) =>\n                                          setRatingData({\n                                            ...ratingData,\n                                            quality: e.target.value,\n                                          })\n                                        }\n                                        id=\"qualityRating\"\n                                        className=\"rounded-md appearance-none relative block w-full px-3 py-2 border dark:bg-dark-bg border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-1 focus:ring-primary focus:border-primary focus:z-10 sm:text-sm  dark:text-dark-text-fill dark:border-white \"\n                                      >\n                                        <option value=\"-1\" disabled>\n                                          {t('Select rating')}\n                                        </option>\n                                        <>\n                                        {defaultGrading?.map(\n                                          (grade: any) => <option>{grade}</option>\n                                        )}\n                                        </>\n                                      </select>\n                                    </div>\n                                    <textarea\n                                      onChange={(e) =>\n                                        setRatingData({\n                                          ...ratingData,\n                                          qualityRemark: e.target.value,\n                                        })\n                                      }\n                                      id=\"\"\n                                      rows={5}\n                                      className=\"rounded-md w-full my-1 md:my-3  p-3 border dark:bg-dark-bg sm:text-sm  dark:text-dark-text-fill dark:border-white focus:outline-none focus:ring-1 focus:ring-primary focus:border-primary focus:z-10\"\n                                      placeholder={t('Quality ratings remark')}\n                                      name=\"qualityDescription\"\n                                      data-testid=\"qualityDescriptionTextArea\"\n                                    />\n                                  </div>\n                                  <div className=\"mx-0 md:mx-2  my-1 w-full flex flex-col md:flex-col justify-start items-center \">\n                                    <Button\n                                      variant=\"default\"\n                                      size=\"md\"\n                                      style=\"text-center w-full rounded-lg bg-gray-700 text-white focus:outline-none p-1 md:p-2\"\n                                    >\n                                      {t('Quantity')}\n                                    </Button>\n                                    <div className=\"flex flex-col justify-start items-start w-full my-0 md:my-2\">\n                                    \n                                      <select\n                                        name=\"quantity\"\n                                        id=\"quantityRating\"\n                                        value={ratingData.quantity}\n                                        onChange={(e) =>\n                                          setRatingData({\n                                            ...ratingData,\n                                            quantity: e.target.value,\n                                          })\n                                        }\n                                        className=\"rounded-md appearance-none relative block w-full px-3 py-2 border dark:bg-dark-bg border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-1 focus:ring-primary focus:border-primary focus:z-10 sm:text-sm  dark:text-dark-text-fill dark:border-white \"\n                                      >\n                                        \n                                        <option value=\"-1\" disabled>\n                                          {t('Select rating')}\n                                         \n                                        </option>\n                                        <>\n                                        {defaultGrading?.map(\n                                          (grade: any) => <option>{grade}</option>\n                                        )}\n                                        </>\n                                      </select>\n                                    </div>\n                                    <textarea\n                                      name=\"quantityDescription\"\n                                      id=\"\"\n                                      onChange={(e) =>\n                                        setRatingData({\n                                          ...ratingData,\n                                          quantityRemark: e.target.value,\n                                        })\n                                      }\n                                      rows={5}\n                                      className=\"rounded-md w-full  my-1 md:my-3  p-3 border dark:bg-dark-bg focus:outline-none focus:ring-1 focus:ring-primary focus:border-primary focus:z-10 sm:text-sm  dark:text-dark-text-fill dark:border-white\"\n                                      placeholder={t('Quantity rating remark')}\n                                    />\n                                  </div>\n                                  <div className=\"mx-0 md:mx-2 my-1 w-full flex flex-col md:flex-col justify-start items-center \">\n                                    <Button\n                                      variant=\"default\"\n                                      size=\"md\"\n                                      style=\"text-center w-full rounded-lg bg-gray-700 text-white focus:outline-none p-1 md:p-2\"\n                                    >\n                                      {t('Professionalism')}\n                                    </Button>\n                                    <div className=\"flex flex-col justify-start items-start w-full my-0 md:my-2\">\n                                      <select\n                                        name=\"professional\"\n                                        id=\"qualityRating\"\n                                        value={ratingData.professional}\n                                        onChange={handleRatingChange}\n                                        className=\"rounded-md appearance-none relative block w-full px-3 py-2 border dark:bg-dark-bg border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-1 focus:ring-primary focus:border-primary focus:z-10 sm:text-sm  dark:text-dark-text-fill dark:border-white \"\n                                      >\n                                        <option value=\"-1\" disabled>\n                                          {t('Select rating')}\n                                        </option>\n                                        <>\n                                        {defaultGrading?.map(\n                                          (grade: any) => <option>{grade}</option>\n                                        )}\n                                        </>\n                                      </select>\n                                    </div>\n                                    <textarea\n                                      name=\"proffessionalDescription\"\n                                      id=\"\"\n                                      onChange={(e) =>\n                                        setRatingData({\n                                          ...ratingData,\n                                          professionalRemark: e.target.value,\n                                        })\n                                      }\n                                      rows={5}\n                                      className=\"rounded-md w-full my-1 md:my-3  p-3 border dark:bg-dark-bg focus:outline-none focus:ring-1 focus:ring-primary focus:border-primary focus:z-10 sm:text-sm  dark:text-dark-text-fill dark:border-white\"\n                                      placeholder={t(\n                                        'Professional rating remark',\n                                      )}\n                                    />\n                                  </div>\n                                </div>\n                                <div className=\"mt-4 md:mt-8\">\n                                  <button\n                                    type=\"button\"\n                                    className=\"inline-flex justify-center rounded-md border border-transparent bg-gray-400 px-4 py-2 text-sm font-medium text-white hover:bg-opacity-40 focus:outline-none focus-visible:ring-2 focus-visible:ring-primary focus-visible:ring-offset-2\"\n                                    onClick={closeCancel}\n                                  >\n                                    {t('Cancel')}\n                                  </button>\n                                  <button\n                                    type=\"submit\"\n                                    className=\"inline-flex justify-center float-right rounded-md border border-transparent  bg-primary px-4 py-2 text-sm font-medium text-white hover:bg-opacity-40 focus:outline-none focus-visible:ring-2 focus-visible:ring-primary focus-visible:ring-offset-2\"\n                                    onClick={closeModal}\n                                    disabled={disable}\n                                  >\n                                    {t('Save ratings')}\n                                  </button>\n                                </div>\n                              </form>\n                            </Dialog.Panel>\n                          </Transition.Child>\n                        </div>\n                      </div>\n                    </Dialog>\n                  </Transition>\n                  {/* ADD NEW RATING MODAL END */}\n\n                  {/* UPDATE MODAL START */}\n                  <Transition\n                    appear\n                    show={showActions}\n                    as={Fragment}\n                    data-testid=\"modalTransistion\"\n                  >\n                    <Dialog\n                      as=\"div\"\n                      className=\"relative z-10\"\n                      onClose={closeModal}\n                    >\n                      <Transition.Child\n                        as={Fragment}\n                        enter=\"ease-out duration-300\"\n                        enterFrom=\"opacity-0\"\n                        enterTo=\"opacity-100\"\n                        leave=\"ease-in duration-200\"\n                        leaveFrom=\"opacity-100\"\n                        leaveTo=\"opacity-0\"\n                      >\n                        <div className=\"fixed inset-0 bg-black bg-opacity-50\" />\n                      </Transition.Child>\n                      <div className=\"fixed inset-0 overflow-y-auto\">\n                        <div className=\"flex min-h-full  items-center justify-center p-4 text-center\">\n                          <Transition.Child\n                            as={Fragment}\n                            enter=\"ease-out duration-300\"\n                            enterFrom=\"opacity-0 scale-95\"\n                            enterTo=\"opacity-100 scale-100\"\n                            leave=\"ease-in duration-200\"\n                            leaveFrom=\"opacity-100 scale-100\"\n                            leaveTo=\"opacity-0 scale-95\"\n                          >\n                            <Dialog.Panel className=\"w-full overflow-auto lg:mx-60 xl:mx-96 h-[800px] md:h-[500px] transform  rounded-2xl bg-white dark:bg-dark-bg p-6 text-left align-middle shadow-xl transition-all\">\n                              <form onSubmit={handleUpdate}>\n                                <Dialog.Title\n                                  as=\"h3\"\n                                  className=\"text-lg font-medium leading-6 text-gray-900 dark:text-dark-text-fill\"\n                                >\n                                  {t('Update rating')}\n                                </Dialog.Title>\n                                <div className=\"bg-gray-100 dark:bg-dark-frame-bg rounded-md p-2 my-2 mt-6 md:mt-8 flex flex-col md:flex-row\">\n                                  <div className=\"mx-0 md:mx-2 my-1 w-full flex flex-col md:flex-col justify-start items-center \">\n                                    <Button\n                                      variant=\"default\"\n                                      size=\"md\"\n                                      style=\"text-center w-full rounded-lg bg-gray-700 text-white focus:outline-none p-1 md:p-2\"\n                                    >\n                                      {t('Quality')}\n                                    </Button>\n                                    <div className=\"flex flex-col justify-start items-start w-full my-0 md:my-2\">\n                                      <select\n                                        name=\"quality\"\n                                        value={rows.quality}\n                                        onChange={(e) => {\n                                          setRows({\n                                            ...rows,\n                                            quality: e.target.value,\n                                          });\n                                        }}\n                                        id=\"qualityRating\"\n                                        className=\"rounded-md appearance-none relative block w-full px-3 py-2 border dark:bg-dark-bg border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-1 focus:ring-primary focus:border-primary focus:z-10 sm:text-sm  dark:text-dark-text-fill dark:border-white \"\n                                      >\n                                        <option value=\"-1\" disabled>\n                                          {t('Select rating')}\n                                        </option>\n                                        <>\n                                        {defaultGrading?.map(\n                                          (grade: any) => <option>{grade}</option>\n                                        )}\n                                        </>\n                                      </select>\n                                    </div>\n                                    <textarea\n                                      value={rows.qualityremark}\n                                      onChange={(e) =>\n                                        setRows({\n                                          ...rows,\n                                          qualityremark: e.target.value,\n                                        })\n                                      }\n                                      id=\"\"\n                                      rows={5}\n                                      className=\"rounded-md w-full my-1 md:my-3  p-3 border dark:bg-dark-bg sm:text-sm  dark:text-dark-text-fill dark:border-white focus:outline-none focus:ring-1 focus:ring-primary focus:border-primary focus:z-10\"\n                                      placeholder=\"Quality ratings remark\"\n                                      name=\"qualityDescription\"\n                                      data-testid=\"qualityDescriptionTextArea\"\n                                    />{' '}\n                                  </div>\n                                  <div className=\"mx-0 md:mx-2  my-1 w-full flex flex-col md:flex-col justify-start items-center \">\n                                    <Button\n                                      variant=\"default\"\n                                      size=\"md\"\n                                      style=\"text-center w-full rounded-lg bg-gray-700 text-white focus:outline-none p-1 md:p-2\"\n                                    >\n                                      {t('Quantity')}\n                                    </Button>\n                                    <div className=\"flex flex-col justify-start items-start w-full my-0 md:my-2\">\n                                      <select\n                                        name=\"quantity\"\n                                        id=\"quantityRating\"\n                                        value={rows.quantity}\n                                        onChange={(e) =>\n                                          setRows({\n                                            ...rows,\n                                            quantity: e.target.value,\n                                          })\n                                        }\n                                        className=\"rounded-md appearance-none relative block w-full px-3 py-2 border dark:bg-dark-bg border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-1 focus:ring-primary focus:border-primary focus:z-10 sm:text-sm  dark:text-dark-text-fill dark:border-white \"\n                                      >\n                                        <option value=\"-1\" disabled>\n                                          {t('Select rating')}\n                                        </option>\n                                        <>\n                                        {defaultGrading?.map(\n                                          (grade: any) => <option>{grade}</option>\n                                        )}\n                                        </>\n                                      </select>\n                                    </div>\n                                    <textarea\n                                      name=\"quantityDescription\"\n                                      id=\"\"\n                                      value={rows.quantityremark}\n                                      onChange={(e) =>\n                                        setRows({\n                                          ...rows,\n                                          quantityremark: e.target.value,\n                                        })\n                                      }\n                                      rows={5}\n                                      className=\"rounded-md w-full  my-1 md:my-3  p-3 border dark:bg-dark-bg focus:outline-none focus:ring-1 focus:ring-primary focus:border-primary focus:z-10 sm:text-sm  dark:text-dark-text-fill dark:border-white\"\n                                      placeholder=\"Quantity rating remark\"\n                                    />\n                                  </div>\n                                  <div className=\"mx-0 md:mx-2 my-1 w-full flex flex-col md:flex-col justify-start items-center \">\n                                    <Button\n                                      variant=\"default\"\n                                      size=\"md\"\n                                      style=\"text-center w-full rounded-lg bg-gray-700 text-white focus:outline-none p-1 md:p-2\"\n                                    >\n                                      {t('Professionalism')}\n                                    </Button>\n                                    <div className=\"flex flex-col justify-start items-start w-full my-0 md:my-2\">\n                                      <select\n                                        name=\"professional\"\n                                        id=\"qualityRating\"\n                                        value={rows.professional}\n                                        onChange={(e) =>\n                                          setRows({\n                                            ...rows,\n                                            professional: e.target.value,\n                                          })\n                                        }\n                                        className=\"rounded-md appearance-none relative block w-full px-3 py-2 border dark:bg-dark-bg border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-1 focus:ring-primary focus:border-primary focus:z-10 sm:text-sm  dark:text-dark-text-fill dark:border-white \"\n                                      >\n                                        <option value=\"-1\" disabled>\n                                          {t('Select rating')}\n                                        </option>\n                                        <>\n                                        {defaultGrading?.map(\n                                          (grade: any) => <option>{grade}</option>\n                                        )}\n                                        </>\n                                      </select>\n                                    </div>\n                                    <textarea\n                                      name=\"proffessionalDescription\"\n                                      id=\"\"\n                                      value={rows.professionalRemark}\n                                      onChange={(e) =>\n                                        setRows({\n                                          ...rows,\n                                          professionalRemark: e.target.value,\n                                        })\n                                      }\n                                      rows={5}\n                                      className=\"rounded-md w-full my-1 md:my-3  p-3 border dark:bg-dark-bg focus:outline-none focus:ring-1 focus:ring-primary focus:border-primary focus:z-10 sm:text-sm  dark:text-dark-text-fill dark:border-white\"\n                                      placeholder=\"Professional rating remark\"\n                                    />\n                                  </div>\n                                </div>\n                                <div className=\"mt-4 md:mt-8\">\n                                  <button\n                                    type=\"submit\"\n                                    className=\"inline-flex justify-center float-right rounded-md border border-transparent  bg-primary px-4 py-2 text-sm font-medium text-white hover:bg-opacity-40 focus:outline-none focus-visible:ring-2 focus-visible:ring-primary focus-visible:ring-offset-2\"\n                                  >\n                                    {t('Save')}\n                                  </button>\n                                  <button\n                                    type=\"button\"\n                                    className=\"inline-flex justify-center rounded-md border border-transparent bg-gray-400 px-4 py-2 text-sm font-medium text-white hover:bg-opacity-40 focus:outline-none focus-visible:ring-2 focus-visible:ring-primary focus-visible:ring-offset-2\"\n                                    onClick={closeCancel}\n                                  >\n                                    {t('Cancel')}\n                                  </button>\n                                </div>\n                              </form>\n                            </Dialog.Panel>\n                          </Transition.Child>\n                        </div>\n                      </div>\n                    </Dialog>\n                  </Transition>\n                  {/* UPDATE MODAL END */}\n\n                  {/* REMARKS MODEL START */}\n                  <Transition\n                    appear\n                    show={showRemarks}\n                    as={Fragment}\n                    data-testid=\"modalTransistion\"\n                  >\n                    <Dialog\n                      as=\"div\"\n                      className=\"relative z-10\"\n                      onClose={closeModal}\n                    >\n                      <Transition.Child\n                        as={Fragment}\n                        enter=\"ease-out duration-300\"\n                        enterFrom=\"opacity-0\"\n                        enterTo=\"opacity-100\"\n                        leave=\"ease-in duration-200\"\n                        leaveFrom=\"opacity-100\"\n                        leaveTo=\"opacity-0\"\n                      >\n                        <div className=\"fixed inset-0 bg-black bg-opacity-50\" />\n                      </Transition.Child>\n                      <div className=\"fixed inset-0 overflow-y-auto\">\n                        <div className=\"flex min-h-full  items-center justify-center p-4 text-center\">\n                          <Transition.Child\n                            as={Fragment}\n                            enter=\"ease-out duration-300\"\n                            enterFrom=\"opacity-0 scale-95\"\n                            enterTo=\"opacity-100 scale-100\"\n                            leave=\"ease-in duration-200\"\n                            leaveFrom=\"opacity-100 scale-100\"\n                            leaveTo=\"opacity-0 scale-95\"\n                          >\n                            <Dialog.Panel className=\"w-full overflow-auto lg:mx-60 xl:mx-96 h-[800px] md:h-[460px] transform  rounded-2xl bg-white dark:bg-dark-bg p-6 text-left align-middle shadow-xl transition-all\">\n                              <form onSubmit={handleUpdate}>\n                                <Dialog.Title\n                                  as=\"h3\"\n                                  className=\"text-lg font-medium leading-6 text-gray-900 dark:text-dark-text-fill items-center\"\n                                >\n                                  {t('Remarking Conversation')}\n                                </Dialog.Title>\n                                <div className=\"bg-gray-100 dark:bg-dark-frame-bg rounded-md p-2 my-2 mt-6 md:mt-8 flex flex-col md:flex-row\">\n                                  <div className=\"mx-0 md:mx-2 my-1 w-full flex flex-col md:flex-col justify-start items-center \">\n                                    <textarea\n                                      value={rows.qualityremark}\n                                      id=\"\"\n                                      rows={5}\n                                      className=\"rounded-md w-full my-1 md:my-3  p-3 border dark:bg-dark-bg sm:text-sm  dark:text-dark-text-fill dark:border-white focus:outline-none focus:ring-1 focus:ring-primary focus:border-primary focus:z-10\"\n                                      placeholder=\"No quality ratings remark\"\n                                      name=\"qualityDescription\"\n                                      data-testid=\"qualityDescriptionTextArea\"\n                                    />\n\n                                    <div className=\"rounded-md relative w-full bg-white border-none border dark:bg-dark-bg sm:text-sm  dark:text-dark-text-fill dark:border-white focus:outline-none focus:ring-1 focus:ring-primary focus:border-primary focus:z-10\">\n                                      <textarea\n                                        className=\"rounded-md w-full h-full p-3 border dark:bg-dark-bg sm:text-sm  dark:text-dark-text-fill focus:outline-none focus:ring-1 focus:ring-primary focus:border-primary focus:z-10\"\n                                        rows={2}\n                                        placeholder=\"No reply here\"\n                                        value={rows.bodyQuality}\n                                      />\n                                    </div>\n                                  </div>\n                                  <div className=\"mx-0 md:mx-2  my-1 w-full flex flex-col md:flex-col justify-start items-center \">\n                                    <textarea\n                                      name=\"quantityDescription\"\n                                      id=\"\"\n                                      value={rows.quantityremark}\n                                      rows={5}\n                                      className=\"rounded-md w-full  my-1 md:my-3  p-3 border dark:bg-dark-bg focus:outline-none focus:ring-1 focus:ring-primary focus:border-primary focus:z-10 sm:text-sm  dark:text-dark-text-fill dark:border-white\"\n                                      placeholder=\" No quantity rating remark\"\n                                    />\n                                    <div className=\"rounded-md relative w-full bg-white border-none border dark:bg-dark-bg sm:text-sm  dark:text-dark-text-fill dark:border-white focus:outline-none focus:ring-1 focus:ring-primary focus:border-primary focus:z-10\">\n                                      <textarea\n                                        className=\"rounded-md w-full h-full p-3 border dark:bg-dark-bg sm:text-sm  dark:text-dark-text-fill focus:outline-none focus:ring-1 focus:ring-primary focus:border-primary focus:z-10\"\n                                        value={rows.bodyQuantity}\n                                        rows={2}\n                                        placeholder=\"No reply here\"\n                                      />\n                                    </div>\n                                  </div>\n                                  <div className=\"mx-0 md:mx-2 my-1 w-full flex flex-col md:flex-col justify-start items-center \">\n                                    <textarea\n                                      name=\"proffessionalDescription\"\n                                      id=\"\"\n                                      value={rows.professionalRemark}\n                                      rows={5}\n                                      className=\"rounded-md w-full my-1 md:my-3  p-3 border dark:bg-dark-bg focus:outline-none focus:ring-1 focus:ring-primary focus:border-primary focus:z-10 sm:text-sm  dark:text-dark-text-fill dark:border-white\"\n                                      placeholder=\"No professional rating remark\"\n                                    />\n                                    <div className=\"rounded-md relative w-full bg-white border-none border dark:bg-dark-bg sm:text-sm  dark:text-dark-text-fill dark:border-white focus:outline-none focus:ring-1 focus:ring-primary focus:border-primary focus:z-10\">\n                                      <textarea\n                                        value={rows.bodyProfessional}\n                                        placeholder=\"No reply here\"\n                                        className=\"rounded-md w-full h-full p-3 border dark:bg-dark-bg sm:text-sm  dark:text-dark-text-fill focus:outline-none focus:ring-1 focus:ring-primary focus:border-primary focus:z-10\"\n                                        rows={2}\n                                      />\n                                    </div>\n                                  </div>\n                                </div>\n                                <div className=\"mt-4 md:mt-8\">\n                                  <button\n                                    type=\"button\"\n                                    className=\"inline-flex justify-center rounded-md border border-transparent bg-red-400 px-4 py-2 text-sm font-medium text-white hover:bg-opacity-40 focus:outline-none focus-visible:ring-2 focus-visible:ring-primary focus-visible:ring-offset-2\"\n                                    onClick={closeModal}\n                                  >\n                                    {t('Close')}\n                                  </button>\n                                </div>\n                              </form>\n                            </Dialog.Panel>\n                          </Transition.Child>\n                        </div>\n                      </div>\n                    </Dialog>\n                  </Transition>\n                  {/* REMARKS MODEL END */}\n                </div>\n                <div className=\"w-full\">\n                  <div>\n                    <div className=\"bg-light-bg dark:bg-dark-frame-bg min-h-screen overflow-y-auto overflow-x-hidden\">\n                      <div className=\"px-3 md:px-8 mt-10\">\n                        {data == 0 ? (\n                          \n                          <div className=\"text-center mt-7 text-lg uppercase\">\n                            <p> {t('No ratings data found')}</p>\n\n                            {/* <Square /> */}\n                          </div>\n                          \n                        ) : (\n                          <DataTable\n                            data={vardata}\n                            columns={columns}\n                            title={t('Performance Ratings')}\n                          />\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\nexport default TraineeRatingDashboard;\n"],"names":[],"sourceRoot":""}