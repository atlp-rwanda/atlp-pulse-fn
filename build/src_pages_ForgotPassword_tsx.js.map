{"version":3,"file":"src_pages_ForgotPassword_tsx.js","mappings":"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","sources":["webpack://atlp-pulse-fn/./src/Mutations/resetPassword.tsx","webpack://atlp-pulse-fn/./src/pages/ForgotPassword.tsx"],"sourcesContent":["import { gql } from '@apollo/client';\n\nexport const FORGOT_PASSWORD = gql`\n  mutation ResetUserPassword(\n    $password: String!\n    $confirmPassword: String!\n    $token: String!\n  ) {\n    resetUserPassword(\n      password: $password\n      confirmPassword: $confirmPassword\n      token: $token\n    )\n  }\n`;\nexport const RESET_PASSWORD_EMAIL = gql`\n  mutation ForgotPassword($email: String!) {\n    forgotPassword(email: $email)\n  }\n`;\nexport const VERIFY_RESET_PASSWORD_TOKEN = gql`\n  query Query($token: String!) {\n    verifyResetPasswordToken(token: $token)\n  }\n`;\n","import React, { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { FaPen, FaAddressBook, FaLock } from 'react-icons/fa';\nimport { useForm } from 'react-hook-form';\nimport { useMutation, useLazyQuery } from '@apollo/client';\nimport { toast } from 'react-toastify';\nimport Button from '../components/Buttons';\nimport useDocumentTitle from '../hook/useDocumentTitle';\nimport ButtonLoading from '../components/ButtonLoading';\nimport {\n  FORGOT_PASSWORD,\n  VERIFY_RESET_PASSWORD_TOKEN,\n} from '../Mutations/resetPassword';\n\nexport default function ForgotPassword() {\n  const navigate = useNavigate();\n  const token: any = window.location.href.substring(\n    window.location.href.lastIndexOf('/') + 1,\n  );\n  const originalToken: any = token.replaceAll('*', '.');\n  const [passwordShown, setPasswordShown] = useState(false);\n  const [buttonLoading, setButtonLoading] = useState(false);\n  const tooglePassword = () => {\n    setPasswordShown(!passwordShown);\n  };\n  useDocumentTitle('Forgot Password');\n  const { t } = useTranslation();\n\n  const [name, setName] = useState('');\n\n  const {\n    reset,\n    register,\n    handleSubmit,\n    formState: { errors },\n    setError,\n  }: any = useForm();\n\n  const [ResetPassword, { loading }] = useMutation(FORGOT_PASSWORD, {\n    onCompleted: (data) => {\n      setTimeout(() => {\n        setButtonLoading(false);\n        toast.success(t('You have Successfully reset your password!'));\n        navigate('/login/org');\n      }, 2000);\n    },\n    onError: (err) => {\n      setTimeout(() => {\n        setButtonLoading(false);\n        toast.error(err.message);\n      }, 1000);\n    },\n  });\n\n  const [VerifyResetPassword] = useLazyQuery(VERIFY_RESET_PASSWORD_TOKEN, {\n    variables: {\n      token: originalToken,\n    },\n    onError: (err: any) => {\n      navigate('/pageNotFound');\n    },\n  });\n\n  const onSubmit = async (userInput: any) => {\n    setButtonLoading(true);\n    setTimeout(async () => {\n      try {\n        await ResetPassword({\n          variables: {\n            password: userInput.password,\n            confirmPassword: userInput.confirmPassword,\n            token: originalToken,\n          },\n        });\n\n        return;\n      } catch (error: any) {\n        toast.error(error.message);\n      }\n    }, 2000);\n  };\n\n  useEffect(() => {\n    VerifyResetPassword();\n  }, []);\n\n  return (\n    <div className=\"md:flex md:flex-col md:items-center md:justify-center w-full min-h-screen -mt-3 -mb-16 xl:-mt-14  xl:-mb-28 text-left dark:bg-dark-frame-bg bg-gray-100 sm:flex sm:flex-row sm:items-center sm:justify-center\">\n      <div className=\"bg-white sm:rounded-2xl py-8 md:py-0 md:shadow-2xl md:flex xl:w-3/4 md:w-[90%] md:max-w-4xl sm:w-full px-2 md:px-0 mx-20 md:mx-0 sm:shadow-none dark:shadow-2xl \">\n        <div className=\"2xl:w-3/5 md:justify-center md:w-screen md:pl-14 lg:pl-48 xl:pl-24 py-20 md:py-8 sm:w-full sm:p-2 dark:bg-dark-bg dark:rounded-tl-xl dark:rounded-bl-xl\">\n          <div className=\"\">\n            <h2 className=\"text-2xl ml-4 md:ml-32 lg:text-3xl pb-6 font-bold text-primary dark:text-dark-text-fill \">\n              {t('Reset your password')}\n            </h2>\n            <form onSubmit={handleSubmit(onSubmit)}>\n              <div\n                className=\"flex flex-col items-left md:justify-center\"\n                data-testid=\"dataid\"\n              >\n                <label className=\"tracking-wide text-gray-700 dark:text-white font-normal\">\n                  {t('Enter new password')}\n                </label>\n                <div className=\"rounded border border-primary dark:border-white w-full md:w-3/4 p-2 flex items-center mb-6 dark:bg-dark-bg \">\n                  <FaLock className=\"text-gray-400 mr-2\" />\n                  <input\n                    data-testid=\"password\"\n                    type={passwordShown ? 'text' : 'password'}\n                    {...register('password', {\n                      required: 'Password is required',\n                    })}\n                    placeholder={t('Password')}\n                    className=\"bg-white outline-none text-sm flex-1 dark:border-white dark:bg-dark-bg dark:text-white\"\n                  />\n                </div>\n                <div className=\"-mt-6\">\n                  {errors.email && (\n                    <small className=\"text-red-600\">\n                      {errors.email.message}\n                    </small>\n                  )}\n                </div>\n                <label className=\"tracking-wide mt-3 text-gray-700 dark:text-white font-normal mb-2\">\n                  {t('Re-write your password')}\n                </label>\n                <div className=\"rounded border border-primary dark:border-white w-full md:w-3/4 p-2 flex items-center mb-6 dark:bg-dark-bg \">\n                  <FaPen className=\"text-gray-400 mr-2\" />\n                  <input\n                    type={passwordShown ? 'text' : 'password'}\n                    data-testid=\"input1\"\n                    {...register('confirmPassword', {\n                      required: 'Password confirmation is Required',\n                    })}\n                    value={name}\n                    onChange={(e) => {\n                      setName(e.target.value);\n                    }}\n                    placeholder={t('Confirm password')}\n                    className=\"bg-white outline-none text-sm flex-1 dark:border-white dark:bg-dark-bg dark:text-white\"\n                  />\n                </div>\n                <div className=\"-mt-6\">\n                  {errors.name && (\n                    <small className=\"text-red-600\">\n                      {errors.name.message}\n                    </small>\n                  )}\n                </div>\n                <div className=\"-mt-4\">\n                  {errors.description && (\n                    <small className=\"text-red-600\">\n                      {errors.description.message}\n                    </small>\n                  )}\n                </div>\n                <br />\n                <div className=\"w-full md:w-3/4 p-2 flex items-center mb-6 justify-center\">\n                  {loading ? (\n                    <ButtonLoading style=\"rounded-full inline-block\" />\n                  ) : (\n                    <Button\n                      type=\"submit\"\n                      variant=\"primary\"\n                      size=\"lg\"\n                      style=\"w-2/4 ml-0 hover:bg-cyan-700 text-sm\"\n                    >\n                      {' '}\n                      {t('Confirm')}\n                    </Button>\n                  )}\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"sourceRoot":""}