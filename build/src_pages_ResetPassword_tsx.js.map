{"version":3,"file":"src_pages_ResetPassword_tsx.js","mappings":"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","sources":["webpack://atlp-pulse-fn/./src/Mutations/resetPassword.tsx","webpack://atlp-pulse-fn/./src/pages/ResetPassword.tsx"],"sourcesContent":["import { gql } from '@apollo/client';\n\nexport const FORGOT_PASSWORD = gql`\n  mutation ResetUserPassword(\n    $password: String!\n    $confirmPassword: String!\n    $token: String!\n  ) {\n    resetUserPassword(\n      password: $password\n      confirmPassword: $confirmPassword\n      token: $token\n    )\n  }\n`;\nexport const RESET_PASSWORD_EMAIL = gql`\n  mutation ForgotPassword($email: String!) {\n    forgotPassword(email: $email)\n  }\n`;\nexport const VERIFY_RESET_PASSWORD_TOKEN = gql`\n  query Query($token: String!) {\n    verifyResetPasswordToken(token: $token)\n  }\n`;\n","import React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { useMutation } from '@apollo/client';\nimport { toast } from 'react-toastify';\nimport e from 'express';\nimport Button from '../components/Buttons';\nimport useDocumentTitle from '../hook/useDocumentTitle';\nimport { RESET_PASSWORD_EMAIL } from '../Mutations/resetPassword';\nimport ButtonLoading from '../components/ButtonLoading';\n\nfunction ResetPassword() {\n  useDocumentTitle('Reset Password');\n  const { t } = useTranslation();\n\n  const navigate = useNavigate();\n  const [ResetPasswordEmail, { loading }] = useMutation(RESET_PASSWORD_EMAIL, {\n    onCompleted: (data) => {\n      setTimeout(() => {\n        toast.success(t('Check your email to proceed!'));\n        navigate('/');\n      }, 2000);\n    },\n    onError: (err) => {\n      setTimeout(() => {\n        toast.error(err.message);\n      }, 1000);\n    },\n  });\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    setError,\n  }: any = useForm();\n\n  const onSubmit = async (Input: any) => {\n    // Input.presentDefault()\n    await ResetPasswordEmail({\n      variables: {\n        email: Input.email,\n      },\n    });\n  };\n  return (\n    <div className=\"grow bg-neutral-100 dark:bg-dark-frame-bg flex flex-col justify-center font-sans\">\n      <div className=\"max-w-lg w-full mx-auto my-28 bg-white dark:bg-dark-bg p-14 md:shadow-xl sm:shadow-none md:rounded-xl sm:rounded-none\">\n        <div className=\"text-center  text-black-600 text-2xl font-bold dark:text-dark-text-fill \">\n          {t('Reset Password')}\n        </div>\n        <div className=\"text-md  text-black-600 mt-2 text-center font-semibold dark:text-dark-text-fill sm:text-xs\">\n          {t('You will receive an email to proceed with resetting password')}\n        </div>\n        <form\n          onSubmit={handleSubmit(onSubmit)}\n          action=\"#none\"\n          className=\"space-y-6 mt-4\"\n        >\n          <div>\n            <input\n              type=\"text\"\n              data-testid=\"email\"\n              {...register('email', {\n                required: 'Email is required',\n              })}\n              placeholder={t('Enter your email address')}\n              className=\"w-full p-2 border border-primary rounded mt-1 dark:bg-dark-bg\"\n            />\n          </div>\n          <div className=\"-mt-6\">\n            {errors.name && (\n              <small className=\"text-red-600\">{errors.name.message}</small>\n            )}\n          </div>\n          <div>\n            {loading ? (\n              <ButtonLoading style=\"rounded-full inline-block\" />\n            ) : (\n              <Button\n                type=\"submit\"\n                // onClick={handleSubmit(onSubmit)}\n                variant=\"primary\"\n                data-testid=\"loginForm\"\n                size=\"lg\"\n                style=\"w-full ml-0 hover:bg-cyan-700 text-sm\"\n              >\n                {' '}\n                {t('Continue')}\n              </Button>\n            )}\n          </div>\n\n          <div className=\"w-full text-sm  text-light-text dark:text-dark-text-fill\">\n            {t('New to DevPulse?')}\n            <Link to=\"/register\">\n              <a href=\"#link\" className=\"text-primary\">\n                {t('Sign Up')}\n              </a>\n            </Link>\n          </div>\n\n          <div className=\"w-full text-sm  text-light-text dark:text-dark-text-fill\">\n            {t('Donâ€™t know your organization URL?')}\n            <a href=\"#link\" className=\"text-primary\">\n              {t('Find your organizations')}\n            </a>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default ResetPassword;\n"],"names":[],"sourceRoot":""}