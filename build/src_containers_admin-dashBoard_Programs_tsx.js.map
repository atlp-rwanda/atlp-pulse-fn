{"version":3,"file":"src_containers_admin-dashBoard_Programs_tsx.js","mappings":"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","sources":["webpack://atlp-pulse-fn/./src/components/ControlledSelect.tsx","webpack://atlp-pulse-fn/./src/components/DataPagination.tsx","webpack://atlp-pulse-fn/./src/components/DataTable.tsx","webpack://atlp-pulse-fn/./src/containers/admin-dashBoard/CreateProgramModal.tsx","webpack://atlp-pulse-fn/./src/containers/admin-dashBoard/DeleteProgramModal.tsx","webpack://atlp-pulse-fn/./src/containers/admin-dashBoard/Programs.tsx","webpack://atlp-pulse-fn/./src/containers/admin-dashBoard/UpdateProgramModal.tsx"],"sourcesContent":["/* eslint-disable react/require-default-props */\nimport React, { useState } from 'react';\nimport {\n  Control,\n  Controller,\n  RegisterOptions,\n  UseFormRegisterReturn,\n} from 'react-hook-form';\nimport Select from 'react-select';\n\nconst customStyles = {\n  option: (provided: any, state: any) => ({\n    ...provided,\n    borderBottom: '1px dotted pink',\n    color: state.isSelected ? 'red' : '#148FB6',\n  }),\n  valueLabel: (styles: any) => ({\n    ...styles,\n    text: 'white',\n  }),\n  control: (styles: any) => ({\n    ...styles,\n    height: 20,\n    // height: '30px',\n    width: '100%',\n    backgroundColor: '#374151',\n    borderColor: 'rgb(20 143 182)',\n    text: 'white',\n  }),\n  singleValue: (provided: any, state: any) => {\n    const opacity = state.isDisabled ? 0.5 : 1;\n    const transition = 'opacity 300ms';\n\n    return { ...provided, opacity, transition };\n  },\n};\n\nfunction CustomSelect({\n  placeholder,\n  name,\n  value,\n  defaultValue,\n  options,\n  onChange,\n  ...props\n}: any) {\n  return (\n    <Select\n      value={defaultValue?defaultValue: value}\n      className=\"my-react-select-container\"\n      classNamePrefix=\"my-react-select\"\n      styles={customStyles}\n      onChange={onChange}\n      options={options}\n      placeholder={placeholder}\n      isSearchable\n      {...props}\n    />\n  );\n}\n\nexport default function ControlledSelect({\n  options,\n  defaultValue,\n  placeholder = 'Select...',\n  register,\n  noRegister,\n  ...props\n}: {\n  options?: { value?: any; label?: any }[];\n  defaultValue?: any;\n  placeholder?: string;\n  register?: { control: Control; name: string; rules?: { [a: string]: any } };\n  noRegister?: { onChange: (e?: any) => void };\n}) {\n  let onChange: () => void;\n  let name: string = '';\n  let control: Control = [] as unknown as Control;\n  let rules: { [a: string]: any } | undefined;\n\n  noRegister && ({ onChange } = noRegister);\n  register && ({ control, name, rules } = register);\n\n  return register ? (\n    <Controller\n      name={name}\n      control={control}\n      rules={rules}\n      render={({ field: { value, onChange } }) => (\n        <CustomSelect\n          placeholder={placeholder}\n          options={options}\n          value={value}\n          onChange={onChange}\n          {...props}\n        />\n      )}\n    />\n  ) : (\n    <CustomSelect\n      placeholder={placeholder}\n      defaultValue={defaultValue!}\n      name={name!}\n      onChange={onChange!}\n      options={options}\n      {...props}\n    />\n  );\n}\n","import {\n  ArrowCircleLeftIcon,\n  ArrowCircleRightIcon,\n} from '@heroicons/react/outline';\nimport React from 'react';\n\nfunction DataPagination({\n  pageOptions,\n  columnLength,\n  canNextPage,\n  canPreviousPage,\n  pageSize,\n  setPageSize,\n  gotoPage,\n  previousPage,\n  nextPage,\n  pageIndex,\n}: any) {\n  /* istanbul ignore next */\n  return (\n    <div>\n      {pageOptions.length >= 0 && (\n        <table className=\"w-full mt-2\">\n          <tfoot className=\"w-full py-2\">\n            <tr className=\"w-full py-2\">\n              <td colSpan={columnLength}>\n                <div className=\"w-full justify-center flex mx-auto flex-row items-center overflow-x-auto\">\n                  <button\n                    type=\"button\"\n                    className=\"page mx-2 text-white rounded-circle appearance-none font-bold flex items-center justify-center bg-primary h-[30px] w-[60px] cursor-pointer\"\n                    onClick={() => previousPage()}\n                    disabled={!canPreviousPage}\n                  >\n                    <ArrowCircleLeftIcon className=\"w-5\" fontSize=\"sm\" />\n                  </button>{' '}\n                  <button\n                    type=\"button\"\n                    onClick={() => nextPage()}\n                    disabled={!canNextPage}\n                    className=\"page mx-2 text-white rounded-circle font-bold flex items-center justify-center bg-primary h-[30px] w-[60px] cursor-pointer\"\n                  >\n                    <ArrowCircleRightIcon className=\"w-5\" fontSize=\"sm\" />\n                  </button>{' '}\n                  <div className=\"flex flex-row justify-center w-full sm:text-[12px] items-center \">\n                    <span className=\"inline-block mx-2\">\n                      Page{' '}\n                      <strong>\n                        {pageIndex + 1} of\n                        {` ${pageOptions.length}`}\n                      </strong>{' '}\n                    </span>\n                    <span className=\"inline-block mx-2\">\n                      | Go to page:{' '}\n                      <input\n                        type=\"number\"\n                        className=\" outline-none border rounded-md appearance-none border-primary dark:bg-primary pl-1\"\n                        defaultValue={pageIndex + 1}\n                        onChange={(e) => {\n                          const pageNumber = e.target.value\n                            ? Number(e.target.value) - 1\n                            : 0;\n                          gotoPage(pageNumber);\n                        }}\n                        style={{\n                          width: '50px',\n                          height: '30px',\n                          border: 'solid 0.1rem #4aa5be',\n                          paddingLeft: '1.2rem',\n                        }}\n                      />\n                    </span>{' '}\n                    <select\n                      className=\"px-1/2 font-raleway rounded-md border border-primary dark:bg-primary\"\n                      value={pageSize}\n                      onChange={(e) => setPageSize(Number(e.target.value))}\n                      style={{ height: '30px', border: 'solid 0.1rem #4aa5be' }}\n                    >\n                      {[3, 5, 10, 25, 50, 100].map((pgSize) => (\n                        <option key={pgSize} value={pgSize}>\n                          Show {pgSize}\n                        </option>\n                      ))}\n                    </select>\n                  </div>\n                </div>\n              </td>\n            </tr>\n          </tfoot>\n        </table>\n      )}\n    </div>\n  );\n}\n\nexport default DataPagination;\n","// @ts-nocheck\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  useGlobalFilter,\n  usePagination,\n  useSortBy,\n  useTable,\n} from 'react-table';\nimport DataPagination from './DataPagination';\n\ninterface TableData {\n  data: [any];\n  columns: any;\n  title: string;\n}\n\nfunction DataTable({ data, columns, title }: TableData) {\n  // const sortedData = React.useMemo(() => [...data], []);\n  const sortedColumns = React.useMemo(() => [...columns], [columns]);\n  const sortedData = data;\n  // const sortedColumns = columns;\n  const TableInstance = useTable(\n    { data: sortedData, columns: sortedColumns, initialState: { pageSize: 3 } },\n\n    useGlobalFilter,\n    useSortBy,\n    usePagination,\n  );\n  const { t } = useTranslation();\n\n  const {\n    getTableProps,\n\n    setGlobalFilter,\n    getTableBodyProps,\n    page,\n    nextPage,\n    previousPage,\n    canPreviousPage,\n    canNextPage,\n    gotoPage,\n    pageCount,\n    setPageSize,\n    pageOptions,\n    headerGroups,\n    prepareRow,\n    state,\n  } = TableInstance;\n  // @ts-ignore\n  const { globalFilter, pageIndex, pageSize } = state;\n\n  return (\n    <div className=\"bg-white dark:bg-dark-bg shadow-lg px-5 py-8 rounded-md w-[100%] mx-auto lg:w-[80%] lg:ml-60 mb-10\">\n      <div className=\" flex items-center justify-between pb-6\">\n        <div>\n          <h2 className=\"text-gray-800 dark:text-white font-semibold text-xl\">\n            {t(title)}\n          </h2>\n          {/* <span className=\"text-xs text-gray-600\">Current cohort</span> */}\n          <input\n            defaultValue={globalFilter || ''}\n            placeholder=\"Filter\"\n            className=\"border-gray-300 dark:bg-dark-tertiary dark:text-white border py-2 mt-4 rounded outline-none px-5 font-sans text-xs w-52 md:w-96\"\n            /* istanbul ignore next */\n            onChange={(e) => setGlobalFilter(e.target.value)}\n          />\n        </div>\n      </div>\n      <div style={{ overflowX: 'auto' }}>\n        <table className=\"min-w-full leading-normal\" {...getTableProps()}>\n          <thead>\n            {headerGroups.map((headerGroup) => (\n              <tr {...headerGroup.getHeaderGroupProps()}>\n                {headerGroup.headers.map((column) => (\n                  <th\n                    className={column.isSorted ? 'sort-asc thead' : ' thead'}\n                    {...column.getHeaderProps(column.getSortByToggleProps())}\n                  >\n                    {column.render('Header')}\n                  </th>\n                ))}\n              </tr>\n            ))}\n          </thead>\n          <tbody {...getTableBodyProps()}>\n            {page.map((row) => {\n              prepareRow(row);\n\n              // eslint-disable-next-line operator-linebreak\n              const rowTheme =\n                row.index % 2 !== 0\n                  ? 'bg-light-bg dark:bg-dark-tertiary'\n                  : 'bg-white dark:bg-dark-bg';\n\n              return (\n                <tr className={` ${rowTheme}} `} {...row.getRowProps()}>\n                  {row.cells.map((cell) => (\n                    <td className=\"data-cell\" {...cell.getCellProps()}>\n                      {cell.render('Cell')}\n                    </td>\n                  ))}\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n        <DataPagination\n          pageOptions={pageOptions}\n          canNextPage={canNextPage}\n          gotoPage={gotoPage}\n          columnLength={columns.length}\n          canPreviousPage={canPreviousPage}\n          pageSize={pageSize}\n          setPageSize={setPageSize}\n          previousPage={previousPage}\n          nextPage={nextPage}\n          pageCount={pageCount}\n          pageIndex={pageIndex}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default DataTable;\n","import { gql, useMutation } from '@apollo/client';\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport Button from '../../components/Buttons';\nimport ControlledSelect from '../../components/ControlledSelect';\nimport { PartialUser } from './Cohorts';\nimport { Program } from './Programs';\n\nexport const AddProgram = gql`\n  mutation AddProgram(\n    $name: String!\n    $description: String!\n    $managerEmail: String!\n    $orgToken: String!\n  ) {\n    addProgram(\n      name: $name\n      description: $description\n      managerEmail: $managerEmail\n      orgToken: $orgToken\n    ) {\n      id\n    }\n  }\n`;\n\nexport default function CreateProgramModal({\n  data,\n  createProgramModel,\n  removeModel,\n  refetch,\n}: {\n  data?: {\n    getAllPrograms: Program[];\n    getAllUsers: PartialUser[];\n  };\n  createProgramModel: boolean;\n  removeModel: Function;\n  refetch: Function;\n}) {\n  const { t } = useTranslation();\n  const {\n    handleSubmit,\n    formState: { errors },\n    reset,\n    setValue,\n    register,\n    control,\n  } = useForm();\n  const [addProgramMutation, { loading }] = useMutation(AddProgram, {\n    /* istanbul ignore next */\n    onError(error) {\n      toast.error(error.message.toString());\n    },\n    /* istanbul ignore next */\n    onCompleted() {\n      refetch();\n      removeModel();\n    },\n  });\n /* istanbul ignore next */\n  const managers = data?.getAllUsers?.filter(\n     /* istanbul ignore next */\n    (user) => user.role === 'manager');\n /* istanbul ignore next */\n  async function addProgram(data: any) {\n    /* istanbul ignore next */\n    const newData = { ...data };\n    /* istanbul ignore next */\n    newData.managerEmail && (newData.managerEmail = newData.managerEmail.value);\n    /* istanbul ignore next */\n    Object.keys(newData).forEach((field) => {\n      if (!newData[field] || newData[field] === '') {\n        delete newData[field];\n      }\n    });\n    /* istanbul ignore next */\n    await addProgramMutation({\n      variables: { orgToken: localStorage.getItem('orgToken'), ...newData },\n      onCompleted() {\n        reset();\n        setValue('managerEmail', { value: undefined, label: undefined });\n      },\n    });\n  }\n\n  return (\n    <div\n      className={`h-screen w-screen bg-black bg-opacity-30 backdrop-blur-sm absolute flex items-center justify-center px-4 ${\n        createProgramModel === true ? 'block' : 'hidden'\n      }`}\n    >\n      <div className=\"bg-white dark:bg-dark-bg w-screen md:w-1/2  xl:w-4/12 rounded-lg p-4 pb-8\">\n        <div className=\"card-title w-full flex  flex-wrap justify-center items-center  \">\n          <h3 className=\"font-bold text-sm dark:text-white text-center w-11/12 uppercase\">\n            {t('Add Program')}\n          </h3>\n          <hr className=\" bg-primary border-b my-3 w-full\" />\n        </div>\n        <div className=\"card-body\">\n          <form className=\" py-3 px-8\">\n            <div className=\"input my-5 h-9 \">\n              <div className=\"grouped-input flex items-center h-full w-full rounded-md\">\n                <input\n                  type=\"text\"\n                  className=\"border border-primary rounded outline-none px-5 dark:bg-dark-frame-bg dark:text-white font-sans text-xs py-2 w-full\"\n                  placeholder={t('name')}\n                  {...register('name', {\n                    required: `${t('The Program name is required')}`,\n                  })}\n                />\n              </div>\n              {errors?.name && (\n                <p className=\"font-thin text-[12px] text-red-300\">\n                  {errors?.name?.message?.toString()}\n                </p>\n              )}\n            </div>\n            <div className=\"input my-5 h-9 \">\n              <div className=\"grouped-input flex items-center h-full w-full rounded-md\">\n                <ControlledSelect\n                  placeholder={t('Manager Email')}\n                  register={{\n                    control,\n                    name: 'managerEmail',\n                    rules: {\n                      required: `${t('The Manager email is required')}`,\n                    },\n                  }}\n                  options={managers?.map(\n                     /* istanbul ignore next */\n                    ({ email }) => ({\n                    value: email,\n                    label: email,\n                  }))}\n                />\n              </div>\n              {errors?.managerEmail && (\n                <p className=\"font-thin text-[12px] text-red-300\">\n                  {errors?.managerEmail?.message?.toString()}\n                </p>\n              )}\n            </div>\n            <div className=\"input my-5 h-9 \">\n              <div className=\"grouped-input flex items-center h-full w-full rounded-md\">\n                <input\n                  type=\"text\"\n                  className=\"border border-primary py-2 dark:bg-dark-frame-bg dark:text-white rounded outline-none px-5 font-sans text-xs w-full\"\n                  placeholder={t('Description')}\n                  {...register('description', {\n                    required: `${t('The Description is required')}`,\n                  })}\n                />\n              </div>\n              {errors?.description && (\n                <p className=\"font-thin text-[12px] text-red-300\">\n                  {errors?.description?.message?.toString()}\n                </p>\n              )}\n            </div>\n            \n            <div className=\"w-full flex justify-between\">\n              <Button\n                variant=\"info\"\n                size=\"sm\"\n                /* istanbul ignore next */\n                style=\"w-[30%] md:w-1/4 text-sm font-sans\"\n                data-testid=\"remove\"\n                onClick={\n                   /* istanbul ignore next */\n                  () => {\n                  removeModel();\n                  reset();\n                }}\n                disabled={loading}\n              >\n                {' '}\n                {t('cancel')}\n              </Button>\n              <Button\n                variant=\"primary\"\n                size=\"sm\"\n                style=\"w-[30%] md:w-1/4 text-sm font-sans p-0\"\n                /* istanbul ignore next */\n                onClick={handleSubmit(addProgram)}\n                loading={loading}\n              >\n                {' '}\n                {t('save')}\n              </Button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}","import { gql, useMutation } from '@apollo/client';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport Button from '../../components/Buttons';\nimport { Program } from './Programs';\n\nexport const DeleteProgram = gql`\n  mutation DeleteProgram($deleteProgramId: ID!, $orgToken: String) {\n    deleteProgram(id: $deleteProgramId, orgToken: $orgToken) {\n      id\n    }\n  }\n`;\n\nexport default function DeleteProgramModal({\n  deleteProgramModal,\n  currentProgram,\n  removeModel,\n  refetch,\n}: {\n  deleteProgramModal: boolean;\n  currentProgram: Program | undefined;\n  removeModel: Function;\n  refetch: Function;\n}) {\n  const { t } = useTranslation();\n  const [deleteProgramMutation, { loading }] = useMutation(DeleteProgram, {\n    onError(error) {\n      /* istanbul ignore next */\n      toast.error(error.message.toString());\n    },\n    onCompleted() {\n      /* istanbul ignore next */\n      refetch();\n      removeModel();\n      toast.success(\"Program deleted\");\n\n    },\n  });\n  const orgToken = localStorage.getItem('orgToken');\n\n  async function deleteProgram() {\n    const data: any = {};\n\n    data.deleteProgramId = currentProgram?.id;\n    orgToken && (data.orgToken = orgToken);\n\n    await deleteProgramMutation({ variables: data });\n  }\n\n  return (\n    <div\n      className={`h-screen w-screen bg-black fixed bg-opacity-30 backdrop-blur-sm flex items-center justify-center z-50 overflow-auto mt-10 p-4 ${\n        deleteProgramModal === true ? 'block' : 'hidden'\n      }`}\n    >\n      <div className=\"bg-white dark:bg-dark-bg w-screen md:w-1/2  xl:w-4/12 rounded-lg p-4 pb-8\">\n        <div className=\"card-title w-full flex  flex-wrap justify-center items-center  \">\n          <h3 className=\"font-bold text-xl dark:text-white text-center w-11/12\">\n            {t('Delete Program')}\n          </h3>\n          <hr className=\" bg-primary border-b my-3 w-full\" />\n        </div>\n        <div className=\"card-body\">\n          <form className=\" py-3 px-8\">\n            <div>\n              <h2 className=\"text-base dark:text-white text-center m-4\">\n                {t('reallyRemoveProgram')}\n              </h2>\n            </div>\n            <div className=\"w-full flex justify-between\">\n              <Button\n                variant=\"info\"\n                size=\"sm\"\n                style=\"w-[30%] md:w-1/4 text-sm font-sans\"\n                data-testid=\"delete\"\n                onClick={() => removeModel()}\n              >\n                {t('Cancel')}\n              </Button>\n              <Button\n                variant=\"danger\"\n                size=\"sm\"\n                style=\"w-[30%] md:w-1/4 text-sm font-sans\"\n                data-testid=\"confirmDeleteBtn\"\n                onClick={() => {\n                  deleteProgram();\n                }}\n              >\n                {t('Delete')}\n              </Button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { gql, useQuery } from '@apollo/client';\nimport { Icon } from '@iconify/react';\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Button from '../../components/Buttons';\nimport DataTable from '../../components/DataTable';\nimport useDocumentTitle from '../../hook/useDocumentTitle';\nimport { PartialUser } from './Cohorts';\nimport CreateProgramModal from './CreateProgramModal';\nimport DeleteProgramModal from './DeleteProgramModal';\nimport UpdateProgramModal from './UpdateProgramModal';\n\nexport interface Program {\n  id: string;\n  name: string;\n  description: string;\n  manager: {\n    email: string;\n  };\n  organization: {\n    name: string;\n  };\n  cohorts: [{ name: string }];\n}\n\nexport const getAllPrograms = gql`\n  query GetAllPrograms($orgToken: String) {\n    getAllPrograms(orgToken: $orgToken) {\n      id\n      name\n      cohorts {\n        name\n      }\n      manager {\n        email\n      }\n      organization {\n        name\n      }\n      description\n    }\n    getAllUsers(orgToken: $orgToken) {\n      id\n      email\n      role\n    }\n  }\n`;\n\nfunction ActionButtons({\n  getData,\n  setCurrentProgram,\n  setUpdateProgramModal,\n  setDeleteProgramModal,\n  ...props\n}: any) {\n  return (\n    <div className=\"flex relative flex-row align-middle justify-center items-center\">\n      <div\n        data-testid=\"updateIcon\"\n        onClick={() => {\n          const program = getData?.getAllPrograms[props.row.index];\n          setCurrentProgram(program);\n          setUpdateProgramModal(true);\n        }}\n      >\n        <Icon\n          icon=\"el:file-edit-alt\"\n          className=\"mr-2\"\n          width=\"25\"\n          height=\"25\"\n          cursor=\"pointer\"\n          color=\"#148fb6\"\n        />\n      </div>\n      <div\n        data-testid=\"deleteIcon\"\n        /* istanbul ignore next */\n        onClick={() => {\n          /* istanbul ignore next */\n          const program = getData?.getAllPrograms[props.row.index];\n          setCurrentProgram(program);\n          setDeleteProgramModal(true);\n        }}\n      >\n        <Icon\n          icon=\"mdi:close-circle-outline\"\n          width=\"30\"\n          height=\"30\"\n          cursor=\"pointer\"\n          color=\"#148fb6\"\n        />\n      </div>\n    </div>\n  );\n}\n\nfunction AdminPrograms() {\n  const { t } = useTranslation();\n\n  const {\n    data: getData,\n    loading: getLoading,\n    refetch: getRefetch,\n  }: {\n    data?: {\n      getAllPrograms: Program[];\n      getAllUsers: PartialUser[];\n    };\n    loading: boolean;\n    error?: any;\n    refetch: Function;\n  } = useQuery(getAllPrograms, {\n    variables: {\n      orgToken: localStorage.getItem('orgToken'),\n    },\n  });\n\n  const [createProgramModel, setCreateProgramModel] = useState(false);\n  const [updateProgramModal, setUpdateProgramModal] = useState(false);\n  const [deleteProgramModal, setDeleteProgramModal] = useState(false);\n  const [currentProgram, setCurrentProgram] = useState<Program | undefined>(\n    undefined,\n  );\n  useDocumentTitle('Programs');\n\n  const programListColumns = [\n    { Header: t('name'), accessor: 'name' },\n    { Header: t('number of cohorts'), accessor: 'numberOfCohorts' },\n    { Header: t('Manager'), accessor: 'manager' },\n    { Header: t('Organization'), accessor: 'organization' },\n    { Header: t('Description'), accessor: 'description' },\n    {\n      Header: t('Actions'),\n      accessor: '',\n      Cell: (props: any) =>\n        ActionButtons({\n          getData,\n          setCurrentProgram,\n          setUpdateProgramModal,\n          setDeleteProgramModal,\n          ...props,\n        }),\n    },\n  ];\n  /* istanbul ignore next */\n  const programListData = getData\n    ? getData.getAllPrograms.map(\n        ({\n          name,\n          cohorts,\n          manager,\n          organization: { name: orgName },\n          description,\n        }) => ({\n          name,\n          numberOfCohorts: cohorts.length,\n          manager: manager ? manager.email : 'Not Assigned',\n          organization: orgName,\n          description,\n        }),\n      )\n    : [{}];\n  /* istanbul ignore next */\n  const removeModel = () => {\n    const newState = !createProgramModel;\n    setCreateProgramModel(newState);\n  };\n\n  return (\n    <>\n      {/* =========================== Start:: CreateProgramModel =============================== */}\n      <CreateProgramModal\n        data={getData}\n        createProgramModel={createProgramModel}\n        removeModel={removeModel}\n        refetch={getRefetch}\n      />\n      <UpdateProgramModal\n        data={getData}\n        updateProgramModal={updateProgramModal}\n        /* istanbul ignore next */\n        currentProgram={currentProgram}\n        removeModel={() => {\n          setUpdateProgramModal(false);\n        }}\n        refetch={getRefetch}\n      />\n      <DeleteProgramModal\n        deleteProgramModal={deleteProgramModal}\n        /* istanbul ignore next */\n        currentProgram={currentProgram}\n        removeModel={() => {\n          setDeleteProgramModal(false);\n        }}\n        refetch={getRefetch}\n      />\n      {/* =========================== End::  CreateProgramModel =============================== */}\n\n      <div className=\"bg-light-bg dark:bg-dark-frame-bg min-h-screen overflow-y-auto overflow-x-hidden\">\n        <div className=\"flex items-left px-7 lg:px-60 pt-24 pb-8\">\n          <div className=\"space-x-8 lg:ml-10\">\n            <Button\n              variant=\"primary\"\n              size=\"lg\"\n              onClick={removeModel}\n              data-testid=\"removeModel\"\n            >\n              {' '}\n              {t('Program')} {'  '}+\n            </Button>\n          </div>\n        </div>\n        <div className=\"px-3 md:px-8\">\n          {!getLoading && (\n            <DataTable\n              data={programListData as [any]}\n              columns={programListColumns}\n              title=\"Program list\"\n            />\n          )}\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default AdminPrograms;\n","import { gql, useMutation } from '@apollo/client';\nimport React, { useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport Button from '../../components/Buttons';\nimport ControlledSelect from '../../components/ControlledSelect';\nimport { PartialUser } from './Cohorts';\nimport { Program } from './Programs';\n\nexport const UpdateProgram = gql`\n  mutation UpdateProgram(\n    $updateProgramId: ID!\n    $orgToken: String\n    $name: String\n    $description: String\n    $managerEmail: String!\n  ) {\n    updateProgram(\n      id: $updateProgramId\n      name: $name\n      description: $description\n      orgToken: $orgToken\n      managerEmail: $managerEmail\n    ) {\n      id\n    }\n  }\n`;\nexport default function UpdateProgramModal({\n  data,\n  updateProgramModal,\n  currentProgram,\n  removeModel,\n  refetch,\n}: {\n  data?: {\n    getAllPrograms: Program[];\n    getAllUsers: PartialUser[];\n  };\n  updateProgramModal: boolean;\n  currentProgram: Program | undefined;\n  removeModel: Function;\n  refetch: Function;\n}) {\n  const { t } = useTranslation();\n  const {\n    handleSubmit,\n    formState: { errors },\n    reset,\n    control,\n    register,\n    setValue,\n  } = useForm();\n  /* istanbul ignore next */\n  const [updateProgramMutation, { loading }] = useMutation(UpdateProgram, {\n    onError(error) {\n      toast.error(error.message.toString());\n    },\n    onCompleted() {\n      refetch();\n      removeModel();\n    },\n  });\n  const orgToken = localStorage.getItem('orgToken');\n  const managers = data?.getAllUsers?.filter(\n    /* istanbul ignore next */\n    (user) => user.role === 'manager',\n  );\n  /* istanbul ignore next */\n  async function updateProgram(data: any) {\n    const newData = { ...data };\n    /* istanbul ignore next */\n\n    newData.managerEmail && (newData.managerEmail = newData.managerEmail.value);\n    /* istanbul ignore next */\n\n    Object.keys(newData).forEach((field) => {\n      /* istanbul ignore if */\n      if (!newData[field] || newData[field] === '') {\n        delete newData[field];\n      }\n    });\n    /* istanbul ignore next */\n\n    newData.updateProgramId = currentProgram?.id;\n    /* istanbul ignore next */\n    orgToken && (newData.orgToken = orgToken);\n    /* istanbul ignore next */\n\n    await updateProgramMutation({ variables: newData });\n  }\n\n  useEffect(() => {\n    setValue('name', currentProgram?.name);\n    setValue('managerEmail', {\n      value: currentProgram?.manager?.email,\n      label: currentProgram?.manager?.email,\n    });\n    setValue('description', currentProgram?.description);\n  }, [currentProgram, updateProgramModal]);\n  return (\n    <div\n      className={`h-screen w-screen bg-black fixed bg-opacity-30 backdrop-blur-sm flex items-center justify-center z-50 overflow-auto mt-10 p-4 ${\n        updateProgramModal === true ? 'block' : 'hidden'\n      }`}\n    >\n      <div className=\"bg-white dark:bg-dark-bg w-screen md:w-1/2  xl:w-4/12 rounded-lg p-4 pb-8\">\n        <div className=\"card-title w-full flex  flex-wrap justify-center items-center  \">\n          <h3 className=\"font-bold text-sm dark:text-white text-center w-11/12 uppercase\">\n            {t('Update Program')}\n          </h3>\n          <hr className=\" bg-primary border-b my-3 w-full\" />\n        </div>\n        <div className=\"card-body\">\n          <form className=\" py-3 px-8\">\n            <div className=\"input my-5 h-9 \">\n              <div className=\"grouped-input flex items-center h-full w-full rounded-md\">\n                <input\n                  type=\"text\"\n                  className=\"border border-primary rounded outline-none px-5 dark:bg-dark-frame-bg dark:text-white font-sans text-xs py-2 w-full\"\n                  placeholder={t('name')}\n                  {...register('name')}\n                />\n              </div>\n              {errors?.name && (\n                <p className=\"font-thin text-[12px] text-red-300\">\n                  {errors?.name?.message?.toString()}\n                </p>\n              )}\n            </div>\n            <div className=\"input my-5 h-9 \">\n              <div className=\"grouped-input flex items-center h-full w-full rounded-md\">\n                <ControlledSelect\n                  placeholder={t('Manager Email')}\n                  register={{\n                    control,\n                    name: 'managerEmail',\n                    rules: {\n                      required: `${t('The Manager email is required')}`,\n                    },\n                  }}\n                  options={managers?.map(\n                    /* istanbul ignore next */\n                    ({ email }) => ({\n                      value: email,\n                      label: email,\n                    }),\n                  )}\n                />\n              </div>\n              {errors?.managerEmail && (\n                <p className=\"font-thin text-[12px] text-red-300\">\n                  {errors?.managerEmail?.message?.toString()}\n                </p>\n              )}\n            </div>\n            <div className=\"input my-5 h-9 \">\n              <div className=\"grouped-input flex items-center h-full w-full rounded-md\">\n                <input\n                  type=\"text\"\n                  className=\"border border-primary py-2 dark:bg-dark-frame-bg dark:text-white rounded outline-none px-5 font-sans text-xs w-full\"\n                  placeholder={t('Description')}\n                  {...register('description', {\n                    required: `${t('The Description is required')}`,\n                  })}\n                />\n              </div>\n              {errors?.description && (\n                <p className=\"font-thin text-[12px] text-red-300\">\n                  {errors?.description?.message?.toString()}\n                </p>\n              )}\n            </div>\n            <div className=\"w-full flex justify-between\">\n              <Button\n                variant=\"info\"\n                size=\"sm\"\n                style=\"w-[30%] md:w-1/4 text-sm font-sans\"\n                data-testid=\"remove\"\n                onClick={\n                  /* istanbul ignore next */\n                  () => {\n                    removeModel();\n                    reset();\n                  }\n                }\n                disabled={loading}\n              >\n                {' '}\n                {t('cancel')}\n              </Button>\n              <Button\n                variant=\"primary\"\n                size=\"sm\"\n                style=\"w-[30%] md:w-1/4 text-sm font-sans p-0\"\n                onClick={handleSubmit(updateProgram)}\n                loading={loading}\n                data-testid=\"confirmUpdateBtn\"\n              >\n                {' '}\n                {t('save')}\n              </Button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"sourceRoot":""}