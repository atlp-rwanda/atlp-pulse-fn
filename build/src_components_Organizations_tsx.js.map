{"version":3,"file":"src_components_Organizations_tsx.js","mappings":"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","sources":["webpack://atlp-pulse-fn/./src/components/CreateOrganizationModal.tsx","webpack://atlp-pulse-fn/./src/components/Organizations.tsx"],"sourcesContent":["import { gql, useMutation } from '@apollo/client';\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport Button from './Buttons';\n\nexport const AddOrganization = gql`\n  mutation AddOrganization($organizationInput: OrganizationInput) {\n    addOrganization(organizationInput: $organizationInput) {\n      id\n    }\n  }\n`;\n\nexport default function CreateOrganizationModal({\n  createOrganizationModel,\n  removeModel,\n  refetch,\n}: {\n  createOrganizationModel: boolean;\n  removeModel: Function;\n  refetch: Function;\n}) {\n  const { t } = useTranslation();\n  const {\n    handleSubmit,\n    formState: { errors },\n    reset,\n    register,\n  } = useForm();\n  const [addOrganizationMutation, { loading }] = useMutation(AddOrganization, {\n    onError(error) {\n      toast.error(error.message.toString());\n    },\n    onCompleted() {\n      refetch();\n      reset();\n      removeModel();\n    },\n  });\n\n  async function addOrganization(data: any) {\n    await addOrganizationMutation({\n      variables: { organizationInput: data },\n    });\n  }\n\n  return (\n    <div\n      className={`h-screen w-screen bg-black bg-opacity-30 backdrop-blur-sm absolute flex items-center justify-center px-4 ${\n        createOrganizationModel === true ? 'block' : 'hidden'\n      }`}\n    >\n      <div className=\"bg-white dark:bg-dark-bg w-screen md:w-1/2  xl:w-4/12 rounded-lg p-4 pb-8\">\n        <div className=\"card-title w-full flex  flex-wrap justify-center items-center  \">\n          <h3 className=\"font-bold text-sm dark:text-white text-center w-11/12 uppercase\">\n            {t('Add Organization')}\n          </h3>\n          <hr className=\" bg-primary border-b my-3 w-full\" />\n        </div>\n        <div className=\"card-body\">\n          <form className=\" py-3 px-8\">\n            <div className=\"input my-5 h-9 \">\n              <div className=\"grouped-input flex items-center h-full w-full rounded-md\">\n                <input\n                  type=\"text\"\n                  className=\"border border-primary rounded outline-none px-5 dark:bg-dark-frame-bg dark:text-white font-sans text-xs py-2 w-full\"\n                  placeholder={t('name')}\n                  {...register('name', {\n                    required: `${t('The Organization name is required')}`,\n                  })}\n                />\n              </div>\n              {errors?.name && (\n                <p className=\"font-thin text-[12px] text-red-300\">\n                  {errors?.name?.message?.toString()}\n                </p>\n              )}\n            </div>\n            <div className=\"input my-5 h-9 \">\n              <div className=\"grouped-input flex items-center h-full w-full rounded-md\">\n                <input\n                  type=\"text\"\n                  className=\"border border-primary py-2 dark:bg-dark-frame-bg dark:text-white rounded outline-none px-5 font-sans text-xs w-full\"\n                  placeholder={t('Email')}\n                  {...register('email', {\n                    required: `${t('The Email is required')}`,\n                  })}\n                />\n              </div>\n              {errors?.email && (\n                <p className=\"font-thin text-[12px] text-red-300\">\n                  {errors?.email?.message?.toString()}\n                </p>\n              )}\n            </div>\n            <div className=\"input my-5 h-9 \">\n              <div className=\"grouped-input flex items-center h-full w-full rounded-md\">\n                <input\n                  type=\"text\"\n                  className=\"border border-primary py-2 dark:bg-dark-frame-bg dark:text-white rounded outline-none px-5 font-sans text-xs w-full\"\n                  placeholder={t('Description')}\n                  {...register('description', {\n                    required: `${t('The Description is required')}`,\n                  })}\n                />\n              </div>\n              {errors?.description && (\n                <p className=\"font-thin text-[12px] text-red-300\">\n                  {errors?.description?.message?.toString()}\n                </p>\n              )}\n            </div>\n\n            <div className=\"w-full flex justify-between\">\n              <Button\n                variant=\"info\"\n                size=\"sm\"\n                style=\"w-[30%] md:w-1/4 text-sm font-sans\"\n                data-testid=\"remove\"\n                onClick={() => {\n                  removeModel();\n                  reset();\n                }}\n                disabled={loading}\n              >\n                {' '}\n                {t('Cancel')}\n              </Button>\n              <Button\n                variant=\"primary\"\n                size=\"sm\"\n                style=\"w-[30%] md:w-1/4 text-sm font-sans p-0\"\n                onClick={handleSubmit(addOrganization)}\n                loading={loading}\n              >\n                {' '}\n                {t('Save')}\n              </Button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/* eslint-disable */\nimport React, { useState, useEffect } from 'react';\nimport { FaEllipsisV } from 'react-icons/fa';\nimport { useTranslation } from 'react-i18next';\nimport CreateOrganizationModal from './CreateOrganizationModal';\nimport { gql, useQuery } from '@apollo/client';\nimport useDocumentTitle from '../hook/useDocumentTitle';\nimport Button from './Buttons';\n\nexport interface Admin {\n  id: string;\n  email: string;\n}\nexport interface Organization {\n  id: string;\n  name: string;\n  description: string;\n  admin: Admin;\n  [x: string]: any;\n}\n\nexport const getOrganizations = gql`\n  query GetOrganizations {\n    getOrganizations {\n      id\n      name\n      description\n      admin {\n        id\n        email\n      }\n    }\n  }\n`;\n\nconst Organizations = () => {\n  useDocumentTitle('Organizations');\n  const { t } = useTranslation();\n\n  const {\n    data: getData,\n    loading: getLoading,\n    error: getError,\n    refetch: getRefetch,\n  }: {\n    data?: {\n      getOrganizations?: Organization[];\n    };\n    loading: boolean;\n    error?: any;\n    refetch: Function;\n  } = useQuery(getOrganizations);\n\n  const [createOrganizationModel, setCreateOrganizationModel] = useState(false);\n  const [deleteOrganizationModel, setDeleteOrganizationModel] = useState(false);\n  const [showActions, setShowActions] = useState(false);\n\n  const handleShowActions = () => {\n    setShowActions(!showActions);\n  };\n\n  const removeDeleteModel = () => {\n    let newState = !deleteOrganizationModel;\n    setDeleteOrganizationModel(newState);\n  };\n\n  const removeModel = () => {\n    const newState = !createOrganizationModel;\n    setCreateOrganizationModel(newState);\n  };\n\n  return (\n    <>\n      {/* =========================== Start:: CreateOrganizationModel =============================== */}\n      <CreateOrganizationModal\n        createOrganizationModel={createOrganizationModel}\n        removeModel={removeModel}\n        refetch={getRefetch}\n      />\n      {/* =========================== End::  CreateOrganizationModel =============================== */}\n\n      {/* =========================== Start::  delete Session Model =============================== */}\n      <div\n        className={`min-h-full w-screen z-30 bg-black bg-opacity-30 backdrop-blur-sm absolute flex items-center justify-center px-4 ${\n          deleteOrganizationModel === true ? 'block' : 'hidden'\n        }`}\n      >\n        <div className=\"bg-white dark:bg-dark-bg w-full sm:w-3/4 md:w-1/2  xl:w-4/12 rounded-lg p-4 pb-8\">\n          <div className=\"card-title w-full flex  flex-wrap justify-center items-center  \">\n            <h3 className=\"font-bold text-xl dark:text-white text-center w-11/12\">\n              {t('DeleteOrganization')}\n            </h3>\n            <hr className=\" bg-primary border-b my-3 w-full\" />\n          </div>\n          <div className=\"card-body\">\n            <form className=\" py-3 px-8\">\n              <div>\n                <h2 className=\"text-base dark:text-white text-center m-4\">\n                  {t('reallyRemoveOrganization')}\n                </h2>\n              </div>\n              <div className=\"w-full flex justify-between\">\n                <Button\n                  variant=\"info\"\n                  size=\"sm\"\n                  style=\"w-[30%] md:w-1/4 text-sm font-sans\"\n                  data-testid=\"delete\"\n                  onClick={() => removeDeleteModel()}\n                >\n                  {' '}\n                  {t('Cancel')}{' '}\n                </Button>\n                <Button\n                  variant=\"danger\"\n                  size=\"sm\"\n                  style=\"w-[30%] md:w-1/4 text-sm font-sans\"\n                >\n                  {' '}\n                  {t('Delete')}{' '}\n                </Button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n      {/* =========================== End::  delete Session Model =============================== */}\n\n      <div className=\"bg-light-bg dark:bg-dark-frame-bg min-h-screen\">\n        <div className=\"flex items-left px-7 lg:px-60 pt-24 pb-8\">\n          <div className=\"space-x-8 lg:ml-10\">\n            <Button\n              variant=\"primary\"\n              size=\"lg\"\n              onClick={removeModel}\n              data-testid=\"removeModel\"\n            >\n              {' '}\n              {t('Organization')} +{' '}\n            </Button>\n          </div>\n        </div>\n        <div className=\"px-3 md:px-8\">\n          <div className=\"bg-white dark:bg-dark-bg shadow-lg px-5 py-8 rounded-md w-full lg:w-[80%] lg:ml-64\">\n            <div className=\" flex items-center justify-between pb-6\">\n              <div>\n                <h2 className=\"text-gray-800 dark:text-white font-semibold\">\n                  {t('Organization List')}\n                </h2>\n              </div>\n            </div>\n            <div>\n              <div className=\"-mx-4 sm:-mx-8 px-4 sm:px-8 py-4 overflow-x-auto\">\n                <div className=\"inline-block w-full lg:min-w-full shadow rounded-lg overflow-hidden\">\n                  <table className=\"min-w-full leading-normal\">\n                    <thead>\n                      <tr>\n                        <th className=\"p-6 border-b-2 border-gray-200 bg-gray-100 dark:bg-dark-tertiary text-left text-xs font-semibold text-gray-600 dark:text-white uppercase tracking-wider\">\n                          {t('name')}\n                        </th>\n                        <th className=\"px-5  border-b-2 border-gray-200 bg-gray-100 dark:bg-dark-tertiary text-left text-xs font-semibold text-gray-600 dark:text-white uppercase tracking-wider\">\n                          {t('Admin')}\n                        </th>\n                        <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 dark:bg-dark-tertiary text-left text-xs font-semibold text-gray-600 dark:text-white uppercase tracking-wider\">\n                          {t('Description')}\n                        </th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {getData?.getOrganizations?.map(\n                        ({ id, name, description, admin: { email } }) => {\n                          return (\n                            <tr key={id}>\n                              <td className=\"px-5 py-5 border-b border-gray-200 bg-white dark:bg-dark-bg text-sm\">\n                                <div className=\"flex items-center\">\n                                  <div>\n                                    <p className=\"text-gray-900 dark:text-white whitespace-no-wrap\">\n                                      {name}\n                                    </p>\n                                  </div>\n                                </div>\n                              </td>\n                              <td className=\"px-5 py-5 border-b border-gray-200 bg-white dark:bg-dark-bg text-sm\">\n                                <p className=\"text-gray-900 dark:text-white whitespace-no-wrap\">\n                                  {email}\n                                </p>\n                              </td>\n                              <td className=\"px-5 py-5 border-b border-gray-200 bg-white dark:bg-dark-bg text-sm\">\n                                <p className=\"text-gray-900 dark:text-white whitespace-no-wrap break-words\">\n                                  {description}\n                                </p>\n                              </td>\n                            </tr>\n                          );\n                        },\n                      )}\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Organizations;\n"],"names":[],"sourceRoot":""}